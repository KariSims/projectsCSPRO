{Application 'MODULE33' logic file generated by CSPro}
PROC GLOBAL

PROC EPMU1M33_FF

PROC M331


 errmsg("ERREURS DU MODULE 33 : STRATEGIES DES MENAGES  ");
 errmsg("===============================================");
PROC M3311

numeric xM3311= 0;
 xM3311 = xM3311+ M3311;
if not invalueset(M3311)and M3311 <> notappl then
  	errmsg(110000,M331, M332,M33INT,xM3311,"Consentement");
  endif;
PROC M3317

  numeric xM3317= 0;
 xM3317 = xM3317+ M3317;
if not invalueset(M3311)and M3311 <> notappl then
  	errmsg(170001,M331, M332,M33INT,xM3317,"Resultat interview");
  endif;

  
  if M3311 =1 and M3317 = NOTAPPL then 
	errmsg (170002,M331,M332,M33INT,"Resultat interview");
	endif;
PROC SMQ01
  
numeric xSMQ01= 0;
 xSMQ01 = xSMQ01+ SMQ01;
if not invalueset(SMQ01)and SMQ01 <> notappl then
  	errmsg(010000,M331, M332,M33INT,xSMQ01,"SMQ01");
  endif;
PROC SMQ02

numeric xSMQ02= 0;
 xSMQ02 = xSMQ02+ SMQ02;
if not invalueset(SMQ02)and SMQ02 <> notappl then
  	errmsg(020000,M331, M332,M33INT,xSMQ02,"SMQ02");
  endif;
PROC SMQ03

numeric xSMQ03= 0;
 xSMQ03 = xSMQ03+ SMQ03;
if not invalueset(SMQ03)and SMQ03 <> notappl then
  	errmsg(030000,M331, M332,M33INT,xSMQ03,"SMQ03");
  endif;
PROC SMQ04A

  
  numeric xSMQ04A= 0;
 xSMQ04A = xSMQ04A+ SMQ04A;
if not invalueset(SMQ04A)and SMQ04A <> notappl then
  	errmsg(041000,M331, M332,M33INT,xSMQ04A,"SMQ04A");
  endif;


if (SMQ03=1 ) and invalueset(SMQ04A) then
	errmsg(041301,M331,M332,M33INT,"SMQ04A");
	endif;
PROC SMQ04B

if SMQ04B = SMQ04A then
	errmsg( 042001 ,M331, M332 , M33INT,"SMQ04B");
	endif;
	
  
   numeric xSMQ04B= 0;
 xSMQ04B = xSMQ04B+ SMQ04B;
if not invalueset(SMQ04B)and SMQ04B <> notappl then
  	errmsg(042002,M331, M332,M33INT,xSMQ04B,"SMQ04B");
  endif;


if (SMQ03=1 ) and invalueset(SMQ04B) then
	errmsg(042303,M331,M332,M33INT,"SMQ04B");
	endif;
PROC SMQ04C

if SMQ04C = SMQ04A or SMQ04C = SMQ04B then
	errmsg( 043001 ,M331, M332 , M33INT,"SMQ04C");
	endif;
	
  
   numeric xSMQ04C= 0;
 xSMQ04C = xSMQ04C+ SMQ04C;
if not invalueset(SMQ04C)and SMQ04C <> notappl then
  	errmsg(043002,M331, M332,M33INT,xSMQ04C,"SMQ04C");
  endif;

if (SMQ03=1 ) and invalueset(SMQ04C) then
	errmsg(043303,M331, M332 , M33INT,"SMQ04C");
	endif;
PROC SMQ05A

  
   numeric xSMQ05A= 0;
 xSMQ05A = xSMQ05A+ SMQ05A;
if not invalueset(SMQ05A)and SMQ05A <> notappl then
  	errmsg(051001,M331, M332,M33INT,xSMQ05A,"SMQ05A");
  endif;
  
if (SMQ03=1 ) and invalueset(SMQ05A) then
	errmsg(051002,M331,M332,M33INT,"SMQ05A");
	endif;
PROC SMQ05B

if SMQ05B = SMQ05A then
	errmsg(052001 ,M331, M332 , M33INT,"SMQ05B");
 
Endif;

  
   numeric xSMQ05B= 0;
 xSMQ05B = xSMQ05B+ SMQ05B;
if not invalueset(SMQ05B)and SMQ05B <> notappl then
  	errmsg(052002,M331, M332,M33INT,xSMQ05B,"SMQ05B");
  endif;
  
if (SMQ03=1 ) and invalueset(SMQ05B) then
	errmsg(052303,M331, M332 , M33INT,"SMQ05B");
	endif;
PROC SMQ05C

if SMQ05C = SMQ05A or SMQ05C = SMQ05B then
	errmsg(053001,M331, M332 , M33INT,"SMQ05C");
Endif;


 numeric xSMQ05C= 0;
 xSMQ05C = xSMQ05C+ SMQ05C;
if not invalueset(SMQ05C)and SMQ05C <> notappl then
  	errmsg(053002,M331, M332,M33INT,xSMQ05C,"SMQ05C");
  endif;
  
if (SMQ03=1 ) and invalueset(SMQ05C) then
	errmsg(053303,M331, M332 , M33INT,"SMQ05C");
	endif;
PROC SMQ05D

if SMQ05D = SMQ05A or SMQ05D = SMQ05B or SMQ05D = SMQ05C then
	errmsg(054001 ,M331, M332 , M33INT,"SMQ05D");
 
Endif;

   numeric xSMQ05D= 0;
 xSMQ05D = xSMQ05D+ SMQ05D;
if not invalueset(SMQ05D)and SMQ05D <> notappl then
  	errmsg(054002,M331, M332,M33INT,xSMQ05D,"SMQ05D");
  endif;

if (SMQ03=1 ) and invalueset(SMQ05D) then
	errmsg(054303 ,M331, M332 , M33INT,"SMQ05D");
	endif;
PROC SMQ05E

if SMQ05E = SMQ05A or SMQ05E = SMQ05B or SMQ05E = SMQ05C or SMQ05E = SMQ05D then
	errmsg( 055001 ,M331, M332 , M33INT,"SMQ05E");
Endif;

  numeric xSMQ05E= 0;
 xSMQ05E = xSMQ05E+ SMQ05E;
if not invalueset(SMQ05E)and SMQ05E <> notappl then
  	errmsg(055002,M331, M332,M33INT,xSMQ05E,"SMQ05E");
  endif; 
  
  
if (SMQ03=1 ) and invalueset(SMQ05E) then
	errmsg(055303 ,M331, M332 , M33INT,"SMQ05E");
	endif;
PROC SMQ06

 numeric xSMQ06= 0;
 xSMQ06 = xSMQ06+ SMQ06;
if not invalueset(SMQ06)and SMQ06 <> notappl then
  	errmsg(060000,M331, M332,M33INT,xSMQ06,"SMQ06");
  endif;
PROC SMQ07A


numeric xSMQ07A= 0;
 xSMQ07A = xSMQ07A+ SMQ07A;
if not invalueset(SMQ07A)and SMQ07A <> notappl then
  	errmsg(071000,M331, M332,M33INT,xSMQ07A,"SMQ07A");
  endif;
PROC SMQ07B

if SMQ07B = SMQ07A then
	errmsg(072001 ,M331, M332 , M33INT,"SMQ07B");
Endif;


numeric xSMQ07B= 0;
 xSMQ07B = xSMQ07B+ SMQ07B;
if not invalueset(SMQ07B)and SMQ07B <> notappl then
  	errmsg(072002,M331, M332,M33INT,xSMQ07B,"SMQ07B");
  endif;
PROC SMQ07C

if SMQ07C = SMQ07A or SMQ07C = SMQ07B then
	errmsg( 073001,M331, M332 , M33INT,"SMQ07C");
	endif;
	
	
numeric xSMQ07C= 0;
 xSMQ07C = xSMQ07C+ SMQ07C;
if not invalueset(SMQ07C)and SMQ07C <> notappl then
  	errmsg(073002,M331, M332,M33INT,xSMQ07C,"SMQ07C");
  endif;
PROC SMQ07D

if  SMQ07D  = SMQ07A or  SMQ07D = SMQ07B or  SMQ07D = SMQ07C  then
	errmsg(074001 ,M331, M332 , M33INT,"SMQ07D");
Endif;


numeric xSMQ07D = 0;
 xSMQ07D = xSMQ07D + SMQ07D;
if not invalueset(SMQ07D)and SMQ07D <> notappl then
  	errmsg(074002,M331, M332,M33INT,xSMQ07D,"SMQ07D");
  endif;
PROC SMQ07E

if SMQ07E = SMQ07A or SMQ07E = SMQ07B or SMQ07E = SMQ07C or SMQ07E = SMQ07D   then
	errmsg(075001,M331, M332 , M33INT,"SMQ07E");
 
Endif;


numeric xSMQ07E= 0;
 xSMQ07E = xSMQ07E+ SMQ07E;
if not invalueset(SMQ07E)and SMQ07E <> notappl then
  	errmsg(075002,M331, M332,M33INT,xSMQ07E,"SMQ07E");
  endif;
PROC SMQ08A
  
numeric xSMQ08A= 0;
 xSMQ08A = xSMQ08A+ SMQ08A;
if not invalueset(SMQ08A)and SMQ08A <> notappl then
  	errmsg(081000,M331, M332,M33INT,xSMQ08A,"SMQ08A");
  endif;
PROC SMQ08B

if SMQ08B = SMQ08A then
	errmsg(082001 ,M331, M332 , M33INT,"SMQ08B");
Endif;


numeric xSMQ08B= 0;
 xSMQ08B = xSMQ08B+ SMQ08B;
if not invalueset(SMQ08B)and SMQ08B <> notappl then
  	errmsg(082002,M331, M332,M33INT,xSMQ08B,"SMQ08B");
  endif;
PROC SMQ08C

if SMQ08C = SMQ08A or SMQ08C = SMQ08B then
	errmsg( 083001,M331, M332 , M33INT,"SMQ08C");
	endif;
	
numeric xSMQ08C= 0;
 xSMQ08C = xSMQ08C+ SMQ08C;
if not invalueset(SMQ08C)and SMQ08C <> notappl then
  	errmsg(083002,M331, M332,M33INT,xSMQ08C,"SMQ08C");
  endif;
PROC SMQ08D
if  SMQ08D  = SMQ08A or  SMQ08D = SMQ08B or  SMQ08D = SMQ08C  then
	errmsg(084001,M331, M332 , M33INT,"SMQ08D");
Endif;


numeric xSMQ08D= 0;
 xSMQ08D = xSMQ08D+ SMQ08D;
if not invalueset(SMQ08D)and SMQ08D <> notappl then
  	errmsg(084002,M331, M332,M33INT,xSMQ08D,"SMQ08D");
  endif;
PROC SMQ08E

if SMQ08E = SMQ08A or SMQ08E = SMQ08B or SMQ08E = SMQ08C or SMQ08E = SMQ08D   then
	errmsg(085001 ,M331, M332 , M33INT,"SMQ08E");
 
Endif;

numeric xSMQ08E= 0;
 xSMQ08E = xSMQ08E+ SMQ08E;
if not invalueset(SMQ08E)and SMQ08E <> notappl then
  	errmsg(085002,M331, M332,M33INT,xSMQ08E,"SMQ08E");
  endif;
PROC SMQ09A

  
numeric xSMQ09A= 0;
 xSMQ09A = xSMQ09A+ SMQ09A;
if not invalueset(SMQ09A)and SMQ09A <> notappl then
  	errmsg(091000,M331, M332,M33INT,xSMQ09A,"SMQ09A");
  endif;
PROC SMQ09B

numeric xSMQ09B= 0;
 xSMQ09B = xSMQ09B+ SMQ09B;
if not invalueset(SMQ09B)and SMQ09B <> notappl then
  	errmsg(092000,M331, M332,M33INT,xSMQ09B,"SMQ09B");
  endif;
PROC SMQ09C

numeric xSMQ09C= 0;
 xSMQ09C = xSMQ09C+ SMQ09C;
if not invalueset(SMQ09C)and SMQ09C <> notappl then
  	errmsg(093000,M331, M332,M33INT,xSMQ09C,"SMQ09C");
  endif;
PROC SMQ09D

numeric xSMQ09D= 0;
 xSMQ09D = xSMQ09D+ SMQ09D;
if not invalueset(SMQ09D)and SMQ09D <> notappl then
  	errmsg(094000,M331, M332,M33INT,xSMQ09D,"SMQ09D");
  endif;
PROC SMQ10


numeric xSMQ10= 0;
 xSMQ10 = xSMQ10+ SMQ10;
if not invalueset(SMQ10)and SMQ10 <> notappl then
  	errmsg(100000,M331, M332,M33INT,xSMQ10,"SMQ10");
  endif;
PROC SMQ11


numeric xSMQ11= 0;
 xSMQ11 = xSMQ11+ SMQ11;
if not invalueset(SMQ11)and SMQ11 <> notappl then
  	errmsg(110000,M331, M332,M33INT,xSMQ11,"SMQ11");
  endif;
PROC SMQ12

numeric xSMQ12= 0;
 xSMQ12 = xSMQ12+ SMQ12;
if not invalueset(SMQ12)and SMQ12 <> notappl then
  	errmsg(120000,M331, M332,M33INT,xSMQ12,"SMQ12");
  endif;
PROC SMQ13

numeric xSMQ13= 0;
 xSMQ13 = xSMQ13+ SMQ13;
if not invalueset(SMQ13)and SMQ13 <> notappl then
  	errmsg(130000,M331, M332,M33INT,xSMQ13,"SMQ13");
  endif;
PROC SMQ14A


numeric xSMQ14A= 0;
 xSMQ14A = xSMQ14A+ SMQ14A;
if not invalueset(SMQ14A)and SMQ14A <> notappl then
  	errmsg(141000,M331, M332,M33INT,xSMQ14A,"SMQ14A");
  endif;
PROC SMQ14B

numeric xSMQ14B= 0;
 xSMQ14B = xSMQ14B+ SMQ14B;
if not invalueset(SMQ14B)and SMQ14B <> notappl then
  	errmsg(142000,M331, M332,M33INT,xSMQ14B,"SMQ14B");
  endif;
PROC SMQ14C
  
  
preproc

M071=M331;
M072=M332;
M07INT=M33INT;
M073=0;
	if loadcase(EPMU1M07,M071,M072,M07INT)then

	 numeric i = 1 ;
	 numeric x = 0 ;
	 
	  for i in EPMU1M07.REVENU_HORS_EMPLOI do
		if  RHE2(i) = 1  then
			x = x + 1			
		endif;					 
  enddo;
endif;

if x = 0 and SMQ14C = 2 then
	errmsg(143001,M331,M332, M33INT,"SMQ14C");
endif;


numeric xSMQ14C= 0;
 xSMQ14C = xSMQ14C+ SMQ14C;
if not invalueset(SMQ14C)and SMQ14C <> notappl then
  	errmsg(143002,M331, M332,M33INT,xSMQ14C,"SMQ14C");
  endif;
PROC SMQ14D


numeric xSMQ14D= 0;
 xSMQ14D = xSMQ14D + SMQ14D;
if not invalueset(SMQ14D)and SMQ14D <> notappl then
  	errmsg(144000,M331, M332,M33INT,xSMQ14D,"SMQ14D");
  endif;
PROC SMQ14E


numeric xSMQ14E= 0;
 xSMQ14E = xSMQ14E+ SMQ14E;
if not invalueset(SMQ14E)and SMQ14E <> notappl then
  	errmsg(145000,M331, M332,M33INT,xSMQ14E,"SMQ14E");
  endif;
PROC SMQ14F

	
	numeric xSMQ14F= 0;
 xSMQ14F = xSMQ14F+ SMQ14F;
if not invalueset(SMQ14F)and SMQ14F <> notappl then
  	errmsg(146001,M331, M332,M33INT,xSMQ14F,"SMQ14F");
  endif;

  
	if SMQ02 =0 and SMQ14F = 1 then
		errmsg(146002,M331,M332, M33INT,"SMQ14F");
	endif;
	
PROC SMQ14G


numeric xSMQ14G= 0;
 xSMQ14G = xSMQ14G+ SMQ14G;
if not invalueset(SMQ14G)and SMQ14G <> notappl then
  	errmsg(147000,M331, M332,M33INT,xSMQ14G,"SMQ14G");
  endif;
PROC SMQ15A


numeric xSMQ15A= 0;
 xSMQ15A = xSMQ15A+ SMQ15A;
if not invalueset(SMQ15A)and SMQ15A <> notappl then
  	errmsg(151000,M331, M332,M33INT,xSMQ15A,"SMQ15A");
  endif;
PROC SMQ15B

numeric xSMQ15B= 0;
 xSMQ15B = xSMQ15B+ SMQ15B;
if not invalueset(SMQ15B)and SMQ15B <> notappl then
  	errmsg(152000,M331, M332,M33INT,xSMQ15B,"SMQ15B");
  endif;
PROC SMQ15C


numeric xSMQ15C= 0;
 xSMQ15C = xSMQ15C+ SMQ15C;
if not invalueset(SMQ15C)and SMQ15C <> notappl then
  	errmsg(153000,M331, M332,M33INT,xSMQ15C,"SMQ15C");
  endif;
PROC SMQ15D


numeric xSMQ15D= 0;
 xSMQ15D = xSMQ15D+ SMQ15D;
if not invalueset(SMQ15D)and SMQ15D <> notappl then
  	errmsg(154000,M331, M332,M33INT,xSMQ15D,"SMQ15BD");
  endif;
PROC SMQ15E


numeric xSMQ15E= 0;
 xSMQ15E = xSMQ15E+ SMQ15E;
if not invalueset(SMQ15E)and SMQ15E <> notappl then
  	errmsg(155000,M331, M332,M33INT,xSMQ15E,"SMQ15E");
  endif;
