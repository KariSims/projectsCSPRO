{Application 'ENTRYMOD06' logic file generated by CSPro}


PROC GLOBAL

set explicit;
{ Definitions of working variables }
array alpha(8) KishGrid(10);	   { Grid used for selection of child for child discipline module }
alpha(26) alphavar;				   { Alpha working variable used in checking alpha vars }
alpha(26) alphanew;                { Alpha working variable used in checking alpha vars }
alpha(62) alphalst;                { The alphabet }
array codes(50);                   { Array used for creating line numbers of household members sleeping under mosquito net}
array alpha(50) labels(50);        { Array used for creating names of household members sleeping under mosquito net} 
alpha(40) yname, ynamehh, tmpname; { List of names for questions }
alpha(900) strnotes;               { for editnote at the end of the interview }
alpha(40) worklabel;               { Alpha variable to get customize text for questions }


numeric inEntry;                   
numeric addmode qmark totlen aok alphsize
  maxmem maxnet hhnum
  minage maxage minab minam mminage mmaxage
  chhlth chlabl chlabu mindi cln psu err dd ss ddw
  di diwm dich xline xwomen xchild
  udob ldob ldobfc udobfc ldoblc udoblc ldofm udofm
  hwsex hwage hwerr birthd birthm birthy age xweight xheight
  lastdig
  a e i j l lx n t x y found net,rp
  xwc xcc cdline kount opid ;
  
numeric   hhn,xintnum,xsupnum,xmodcent,xrvisit,xmodify,xpartial,xentryhw,xverif;
numeric   DB, comply, verific, nopartflag;
numeric   qhMoreCount;



//numeric  minab, ok, AN, AN1, AN2, AN3, AGE, ANNEE,inEntry,addmode,opid,cln,err,dd,dd1,di,mindi,ss,j vvv ccc;
//numeric ligne,arret,nligne,elig,maxmem,maxdep,dcourant,d1,d2,a,x1,x2,x3,idate,xxx tr,njr;
array wenter(50); 	{ Working var recording entry of individuals }
array wcomp (50);

alpha(6) date, date1,id;
alpha(4) iq;
//numeric B1, B2, B3, B4, SITE1, tt, nbre,maxj, jour, mois, change, x, xwc;
numeric dad1, dad2, dad3, dad4, dad5, dad6, dad7, dad8, dad9, dad10;
numeric dad11, dad12, dad13, dad14, dad15;
numeric			partialsave;
	
	
//numeric   hhn,xintnum,xsupnum,xmodcent,xrvisit,xmodify,xpartial,xentryhw,xverif;
//numeric   DB, comply, verific, nopartflag;
//numeric   qhMoreCount;
string strpart , dmois , douzedernmois;
	
numeric TOTPRIM,maxmain,MOMIN,MOMAX  maxdep;
file FichSaPart ;


// sauvegarde des données 
Function sav()
	savepartial();
end;


// Quitter
Function quitter()
	savepartial();
	stop(1) ;
end;

{ User defined functions }

  function showCalc()
    execsystem("calc");
  end;

  { setup basic user bar }
  function userbase();
    userbar( clear );

    
    userbar(add text,"ECVM: MOD 6 ");
	userbar(set color,236,254,255);
	
    userbar( add button, "<",    do("PreviousField") );
    userbar( add button, ">",    do("NextField") );
    userbar( add button, ">>|",  do("AdvanceToEnd") );
    userbar( add button, "Note", do("EditNote") );
    userbar( add button, "Lang", do("ChangeLanguage") );
    userbar( add button, "Calc", showCalc );	
    
 	//userbar(add spacing,2);   
	userbar(add button,"Sauvegarde", sav());    
	//userbar(add spacing,2);
	userbar(add text," ");
	
	userbar(add button,"Quitter", quitter());    
	//userbar(add spacing,2);
	userbar(add text," ");
  end;
  
{ --------------------------------------------------------------------------- }
{ valid
  Checks that a variable has a valid value.
  A valid value is less than 96 and not a special value e.g notappl/missing
  Returns: 1 if valid, 0 if not valid                                        }

function valid(xvar);
  valid = (!special(xvar) and xvar < 96)
end;

{ -------------------------------------------------------------------------- }
{ NAtoZero
  Converts notappl (and 99 - for child labour module) values to zero while not changing other values.
  Returns: 0 if input variable is notappl, else returns it unchanged         }
function NAtoZero(xvar);
  if xvar = notappl or xvar=99 then
    xvar = 0
  endif;
  NAtoZero = xvar;
end;


{ clear_labels
Set value labels for certain questions where the response categories can change }
function clear_labels();
	do i = 1 while i <= 50
	  codes(i) = notappl;
	  labels(i) = "";
	enddo;
end;

//Setting a variable value for the currently loaded task
  function setTaskVar(string varName, string varValue)
    //first checking if the variable is already set
    for i in TASKS.TASK_VARIABLES do
      if toupper(strip(varName)) = toupper(strip(TASK_VARNAME(i))) then
	    TASK_VARVAL(i) = varValue;
	    exit;
	  endif;
    enddo;

    //adding a new variable if in case it hasn't been set alerady
    i = 0;
    while i <= maxocc(TASKS.TASK_VARIABLES) do 
      i = i + 1;
	  if length(strip(TASK_VARNAME(i))) = 0 then
	    TASK_VARNAME(i) = strip(varName);
	    TASK_VARVAL(i) = strip(varValue);
	    break;
	  endif;
    enddo;
  end;

  //Getting the variable value using varibale name for the currently loaded task
  function string getTaskVar(string varName)
    do i = 1 while i <= maxocc(TASKS.TASK_VARIABLES)
      if length(strip(TASK_VARNAME(i))) = 0 then
	    break;
	  endif;
      if toupper(strip(varName)) = toupper(strip(TASK_VARNAME(i))) then
	    getTaskVar = strip(TASK_VARVAL(i));
	    break;
  	  endif;
    enddo;
  end;



function endmess();
  { Returns true if response is REVIEW }
  endmess = ({addmode and}
             accept("Fin du questionnaire",
                     "Vérifier du questionnaire",
                     "Nouvelle quête./Questionnaire après") 
                     <> 2);
end;
{FR}
function alphachk(alpha(26) alphamask);
{  russian_convert();}
  { first remove all blanks, and duplicate question marks }
  alphanew = "";
  qmark = 0;
  lx = 1;
  do l = 1 while l <= length(strip(alphavar))
    if alphavar[l:1] <> " " and (alphavar[l:1] <> "?" or not qmark) then
      alphanew[lx:1] = alphavar[l:1];
      lx = lx + 1;
      if alphavar[l:1] = "?" then
        qmark = 1;
      endif;
    endif;
  enddo;
  { aok = 0 - string is bad, aok = 1 - string is good }
  totlen = length(strip(alphamask));
  aok = 0;           { assume string is bad - for empty string }
  alphsize = length(strip(alphanew));
  if alphsize then   { not empty string }
    { check for "?" as only character }
    aok = (alphanew[1:1] = "?" and alphsize = 1);
    if !aok then     { if not a single "?", check string }
      aok = 1;       { now assume string is good until we know otherwise }
      l = 1;         { l is position in string of acceptable values }
      a = 1;         { a is position in input string }
      { loop while the string is still good and there are more letters }
      while aok and a <= alphsize do
        aok = pos(alphanew[a:1],alphamask[l:totlen-l+1]);
        if aok then     { letter is acceptable }
          l = l + aok;  { increment l to position after letter in string of acceptable values }
          a = a + 1     { increment a to next letter in input string }
        endif;
      enddo;
    endif;
  endif;
  alphachk = (!aok);    { alphachk = 0 - if string is good, = 1 - if string is bad }
  { now expand variables }
  if aok then
    do l = 1 while l <= length(strip(alphamask))
      if pos(alphamask[l:1],alphanew) then
        alphavar[l:1] = alphamask[l:1]
      elseif pos("?",alphanew) then
        alphavar[l:1] = "?"
      else
        alphavar[l:1] = " "
      endif;
    enddo;
  endif;
end;

{ function to clear codes and labels for household members }
function clean_labels();
	do i = 1 while i <= 30 by 1
	  codes(i)  = notappl;
	  labels(i) = "";
	enddo;
end;

//!!AI start
function onStop();
  if noPartFlag | xmodcent then
    numeric x1 = errmsg(9980) select("Oui", continue, "Non", continue);
    if x1 = 1 then
      advance;
    else
      if !xmodcent then
        stop(-1);
      endif;
    endif;
  else
    savepartial();
    stop(-1);
  endif;
end;
//!!AI end



PROC EPMU1M06_FF

preproc
  //Initializing global variables
  SetGlobalVariables();
  tempDir = projectDir + "\Temp";
  utilsDir = projectDir + "\Utils";
  
  setfont(All,"Cambria",30);
  
  //setvaluesets ("_ENG");
   setvaluesets("_FRA");  //to set valuesets in French
  // setvaluesets("_SPA");  //to set valuesets in Spanish
  // setvaluesets("_RUS");  //to set valuesets in Russian
  // setvaluesets("_ARB");  //to set valuesets in Arabic
  // setvaluesets("_CS");   //to set valuesets in Local Language
  

  //reading the task
  TASK_ID = trimQuotes(readEnviValue("taskId"));
  loadcase(TASKS, TASK_ID);

  //if task is water quality questionnaire task, loading parent household task
  if strip(TASK_TEMPLATENAME) <> "hh_int" & length(strip(TASK_PARENTID)) > 0 then
    TASK_ID = TASK_PARENTID;
    loadcase(TASKS, TASK_ID);
  endif;


  verific = 0;
  maxmem = 50;      { maximum number of household members }
  maxnet = 10;      { maximum number of bednets. MUST BE EQUAL TO OR LESS THAN MAX OCCUR OF MODTN }
  hhnum  = 0;       { last household number used }
  minage = 15;      { minimum age of eligible women }
  maxage = 49;      { maximum age of eligible women }
  mminage = 15;     { minimum age of eligible men }
  mmaxage = 49;     { maximum age of eligible men }
  minab  = 120;     { minimum age at birth in months = 12 years }
  minam  = 48;      { minimum age at first marriage = 4 years }
  chhlth = 4;       { maximum age at which child is included in child health module - excludes exact age 5 }
  mindi  = 20170101;{ replace "20170101" with earliest interview date in yyyymmdd format }
  addmode = (demode() = ADD);
  opid   = notappl;
  cln=tonumber(sysparm()[1:3]);
  hhn=tonumber(sysparm()[4:2]);
  xintnum  = tonumber( sysparm()[9:3] );
  xsupnum  = tonumber( sysparm()[12:3] );
  xmodcent = tonumber( sysparm()[16:1] );    { modify by central office }
  xrvisit  = tonumber( sysparm()[17:1] );    { revisit HH }
  xmodify  = tonumber( sysparm()[18:1] );    { modify completed HH }
  xpartial = tonumber( sysparm()[19:1] );    { if case has been saved partially }
  xentryhw = tonumber( sysparm()[20:1] );    { enter water quality data }
  alphalst = "ABCDEFGHIJKLMNOPQRSTUVWXYZÃÇÅÄÁÆÈÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÝÞßáãäåæíÉìÂ";
 
  inEntry = (demode() = add | demode() = modify);

  if addmode then
    addmode = tonumber(sysparm()[21:1]) = 0;
  endif;
  noPartFlag = tonumber(sysparm()[21:1]);

  xverif   = tonumber( sysparm()[22:1] );    {verify household schedule by supervisor } //!!AI
  if xverif = default then xverif = 0; endif; //!!AI

  { settings for CAPI }
  if !xmodcent then      { central office desn't have to exit after reviewing one HH }
    set behavior() exit on;
  else
    set behavior() exit off;
    addmode = 0;
    noPartFlag = 1;
  endif;
  set attributes (EPMU1M06) assisted on;
  set attributes (EPMU1M06) assisted off (variable (title));

  { set up minimal user bar }
  userbase();
  userbar( show );


postproc
  { update file with households assigned to interviewers }
   //if !xmodcent then
   //  updthhassgn();
   //endif;
  if !xmodcent then      { central office desn't have to exit after reviewing one HH }
    stop(-1);
  endif;
  
  
{preproc
{set attributes(E123PH13_DICT) assisted off;}
maxmem = 50;       { nombre maximum des membres du ménage }
maxmain = 30;
minab  = 132;      { age minimum à la naissance en mois = 12 années }
mindi  = 20110801; { représente la date du début de l'enquête en yyyymmdd format }
maxdep = 95;       { représente le nombre maximum de ligne des dépenses }

addmode = (demode() = ADD);
opid   = notappl;
cln   = tonumber(sysparm());

{numéro du district séquentiel invalide}
recode cln  	=> err;
     0010-9860  => 0;    { Give list of valid cluster numbers }
           		=> 1;
endrecode;
{if err then
  errmsg(0001);
  endlevel;
endif;}

inEntry = (demode() = add | demode() = modify);   { to run data entry in batch }

}













PROC M06

postproc 
endlevel
PROC M061
preproc
  if special(visualvalue($)) then
    $ = cln;
  endif;

postproc
  YCLUSTER = $;
  if loadcase( CLUSTERS, YCLUSTER ) then
    M067 = YURBRUR;
    M068 = YREGION;
  endif;
PROC M062
preproc
  if hhn <> 0 & (special(visualvalue($)) | visualvalue($) = hhn) then
    $ = hhn;
  endif;

postproc
  set attributes(M06NAME) native;
  if addmode then
    M06NAME = getTaskVar("hhead");
    M06ADDR = getTaskVar("address");
  else
    if length(strip(M06NAME)) then 
      set attributes (M06NAME) protect;
      set attributes (M06ADDR) protect;
    else 
      M06NAME = getTaskVar("hhead");
      M06ADDR = getTaskVar("address");
    endif;
  endif;
PROC M06INT
preproc
  if addmode | special(visualvalue($)) then
    M06INT = xintnum;
    M063 = 0;
    M06HINT = xsupnum;
  endif;
PROC M067
preproc
  if addmode | special(visualvalue($)) then
    M067 = 1;
  endif;
PROC M068
preproc

M068 = 10 ;
PROC M06NAME
preproc
  if !addmode then
    exit;
  endif;
PROC M06ADDR
preproc
  if !addmode then
    exit;
  endif;

 
PROC M0611

postproc

if $ = 1 then
 set attributes (M0611) protect;
endif;

if $ <> 1 then
   skip to M0617
endif;   


numeric rbk;
string IndivMod6;

 setfile( FichSaPart, concat("C:\RDC123\Data\H",edit("999",M061), edit("999",M06INT), ".dat")) ;  
	     if Filesize( FichSaPart ) > 0 then
		     while FileRead( FichSaPart, strpart ) do					
				  if strpart[11:3] = "0HH" and tonumber(strpart[1:3]) = M061 and tonumber(strpart[4:2]) = M062  then  
				  	   rbk = tonumber(strpart[90:2]) ;
				  	   IndivMod6=strpart[90:2];		  	                 
	              endif;
		      enddo;  
          endif ;
         close( FichSaPart );
         
  if length(strip(IndivMod6))=0 then
	  errmsg("Veuiilez d'abord renseigner les informations sur tous les membres du menage dans le module MENAGE avant de commencer ce module");
	  setfont(ERRMSG,"Arial", 20);
	  stop(1);
  endif;
PROC M069H
preproc
if demode() = add then
  if special(visualvalue($)) then
    x = systime();
    if M069H = notappl then M069H = int(x / 10000);endif;
    if M069M = notappl then M069M = int(x / 100) % 100;endif;
  endif;
endif;


PROC M066J
preproc
if demode() = add then 
	if special(visualvalue($)) then
	    x = sysdate();
	    if M066J = notappl then M066J = sysdate( "DD" );endif;
	    if M066M = notappl then M066M = sysdate( "MM" );endif;
	    if M066A = notappl then M066A = sysdate( "YYYY" );endif;
	endif;
endif;

postproc
numeric xdate;
xdate = (((visualvalue(M066A)*100)+visualvalue(M066M))*100)+ M066J;
if xdate > sysdate("YYYYMMDD") then 
errmsg("la date saisie est supérieure à la date du jour ,veuillez régler la date de la tablette");
stop(1) ;
endif;
PROC M066M
dmois = getlabel($,$);
PROC EA01

if EA01 = 2 then 
   skip to M0617
endif;   

PROC EA0A

Preproc

	     numeric Npers;
	     	
	      setfile( FichSaPart, concat("C:\RDC123\Data\H",edit("999",M061), edit("999",M06INT), ".dat")) ;  
		     if Filesize( FichSaPart ) > 0 then
			     while FileRead( FichSaPart, strpart ) do
			          if strpart[11:3] = "0HH" and tonumber(strpart[1:3]) = M061 and tonumber(strpart[4:2]) = M062  then  
				  	   Npers= tonumber(strpart[90:2]) ;	                 
	             		 endif;
			      enddo;	           
	         endif ;
	       	close( FichSaPart );

Postproc

if EA0A > Npers  then
	errmsg("Le nombre de personnes possedant une entreprise non agricole dépasse le nombre de personnes éligibles au module");
	reenter;
endif;

if EA0A < 0  then
	errmsg("Le nombre de personnes ne peut pas être négatif");
	reenter;
endif;
PROC EA3X
preproc
     numeric k, trv = 0  rec  ;
     rec = curocc(ENTREPRISET000) ;
     clear_labels(); 
     i=1;
     
Onfocus
     i=1;
      setfile( FichSaPart, concat("C:\RDC123\Data\H",edit("999",M061), edit("999",M06INT), ".dat")) ;  
	     if Filesize( FichSaPart ) > 0 then
		     while FileRead( FichSaPart, strpart ) do
		          if strpart[11:3] = "0HL" & tonumber(strpart[1:3]) = M061 and tonumber(strpart[4:2]) = M062 and tonumber(strpart[70:2]) >= 10 then  
	                     
	                      if rec=1 then 
								codes(i) = tonumber(strpart[14:2]);
					           	labels(i)= strip (strpart[16:40]);
								      i=i+1;	                      
	                      endif;
	                        k=1 ;
								  while k <rec do  
								    if EA3X(k) = tonumber(strpart[14:2]) then 
								    trv = 1 ; 
								    else
									 	codes(i) = tonumber(strpart[14:2]);
					           		labels(i)= strip (strpart[16:40]);
								      i=i+1;
								    endif;
								    k=k+1 ;
								  enddo;
		          endif ;
		      enddo;
          endif ;
         close( FichSaPart );
		    		 	   
				if i = 0 and rec =1 then
					errmsg("Aucun Membre de Ménage");
					Reenter EA0A;
				endif;
				
	
				
setvalueset(@getsymbol(),codes,labels);
setcapturetype(EA3X,3);




Postproc

Do varying j = 0 until j >= i 
if codes(j) = EA3X then 
    EA5X = labels(j);
endif;
enddo;
savepartial();
PROC EA0AN

preproc
EA0AN = sum(EA4X);

PROC ENTREPRISES000

preproc
numeric v =1  u =0 w=0;
j=1; u=1;
while j <= EA0AN do
   v = EA4X(j);
      if v = 1 then      // si l'individu a une seule entreprise
	     EA03(u) = EA3X(j);
	     EA03N(u) = EA5X(j);
	     EA04(u) = v;
	     u=u+1 ;
	    elseif  v > 1  then // si l'individu a plusieurs entreprises
	      w=1 ;  
	       while w <= v do
			     EA03(u) = EA3X(j);
			     EA03N(u) = EA5X(j);
			     EA04(u) = v;
	          w=w+1 ;
	          u=u+1 ;
	       enddo ; 
       endif;
	  j=j+1 ;
 enddo;

PROC EA05
savepartial();

if length (strip ($) ) < 5 then
	errmsg ("Donner plus de précision s'il vous plait!");
	reenter;
endif;
PROC EA07

if EA07 = 5 then
 editnote();
 numeric r=1;

 while r=1 do
		errmsg("Veuillez préciser votre Façon d'établir les comptes s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
			r=2;
			endif;
	enddo;
endif;
PROC EA08A

if length (strip ($) ) < 5 then
	errmsg ("Donner plus de précision s'il vous plait!");
	reenter;
endif;
PROC EA08BL

savepartial();
PROC EA08B

postproc
EA08BL = strip(getlabel($,$));
if length(strip(EA08BL)) > 3 then 
     // set attributes (EA08A) protect;
endif;
PROC EA08C


savepartial();
if $ = 2 then 
   skip to EA10A
endif;
PROC EA09A

if length (strip ($) ) < 5 then
	errmsg ("Donner plus de précision s'il vous plait!");
	reenter;
endif;
PROC EA09BL
savepartial();
PROC EA09B

numeric verif;

if EA08B = EA09B then
   verif = accept("L'activité principale est égale à l'activité secondaire.","Je confirme","Erreur");
   if verif <> 1 then
   reenter;
   endif;

endif;

EA09BL = strip(getlabel($,$));
if length(strip(EA09BL)) > 3 then 
      //set attributes (EA09A) protect;
endif;
PROC EA10A
 if $ > 0 then
    skip to EA11;
 endif;
PROC EA11


preproc
savepartial();

// douze derniers mois
numeric xlastdate ;

xlastdate = dateadd( ( ((M066A * 100) + M066M) * 100) + M066J  ,-13,"m");
string sldat =edit("99999999",xlastdate) ;

//sixdernmois = concat( sldat[7:2] ," ", getlabel( M236M,tonumber(sldat[5:2])) , " ", sldat[1:4] ) ; le jour/mois/annee//

douzedernmois = concat( getlabel( M066M,tonumber(sldat[5:2])) , " ", sldat[1:4] ) ;

postproc
if EA10B > 0 and $ > EA10B then
   errmsg("Le nombre de mois de fonctionnement est supérieur à la durée de fonctionnement de l'entreprise");
   reenter;
endif;
PROC EA12

if $ = 1 then
 skip to EA14
endif;
PROC EA13

if EA12 = 2 and EA13 = 0 then
	errmsg("Entrer un nombre valide s'il vous plait! ");
	reenter;
endif;

if EA12 = 2 and EA13 = 100 then
	errmsg("Vous avez dit tout le revenu n'appartient pas au menage. Le pourcentage du revenu appartenant au menage doit etre inferieur à 100 %");
	reenter;
endif; 
PROC EA14

if EA14 = 6 then
 editnote();

 numeric r=1;
 while r=1 do
		errmsg("Veuillez préciser la Principale source de capital de cette entreprise s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
			r=2;
			endif;
	enddo;
endif;
PROC EA15

if EA14 = 1 and EA15 = 1 then errmsg(" l'epargne du menage ne peut pas être un prêt"); reenter; endif; 
if EA14 = 1 and EA15 = 2 then errmsg(" l'epargne du menage ne peut pas être un don"); reenter; endif; 
if EA14 = 2 and EA15 = 2 then errmsg(" le crédit à la banque ne peut pas être un don"); reenter; endif; 
if EA14 = 2 and EA15 = 3 then errmsg(" le crédit à la banque ne peut pas être un autofinancement"); reenter; endif; 
if EA14 = 3 and EA15 = 3 then errmsg(" le transfert provenant de l'étranger ne peut pas être un autofinancement"); reenter; endif; 
if EA14 = 5 and EA15 = 1 then errmsg(" l'Appui d'une ONG ne peut pas être un prêt"); reenter; endif;
if EA14 = 5 and EA15 = 3 then errmsg(" l'Appui d'une ONG ne peut pas être un autofinancement"); reenter; endif;


PROC EA16

savepartial();
if $ in 2,3 then
   skip to EA20;
endif;
PROC EA17

if $ = 1 then
	skip to EA19A
endif;


if EA17 = 16 then
 editnote();

 numeric r=1;
 while r=1 do
		errmsg("Veuillez préciser la Principale source de credit de cette entreprise s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
			r=2;
			endif;
	enddo;
endif;
PROC EA18
postproc
if $ < 500 then
	errmsg("le montant saisi est incorrect. Veuillez entrer un montant valide.");
	reenter;
endif;


	
				if $%50 <> 0 then
				j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
					select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
						
					if j=2 then
					errmsg("Justifier");
					editnote();
						
						if length(strip(editnote()))<15 then
						errmsg(" Veuillez entrer plus de précision");
						reenter;
						endif;
					
					endif;
				
				endif;

if modify then
	if $ < 500 then
		errmsg(" Valeur Incorrecte! Etes - vous sûr que la dépense n'a coûté que %d FC",EA18)
			select(" Corrigez la valeur",$,"Oui, la valeur est correcte",continue);
			errmsg("Justifier");
			editnote();
			if length(strip(editnote()))<15 then
				errmsg(" Veuillez entrer plus de précision ou corriger la valeur");
				reenter;
			endif;
	endif;
endif;




if  $ > 50000000 then
	errmsg("Confirmez-vous que c'est à %d FC",$)
	select("Modifier ",$,"Continuer",continue);
endif;
PROC EA20
savepartial();


if EA20 = 8 then
 editnote();

 numeric r=1;
 while r=1 do
		errmsg("Veuillez préciser le Type de local se trouvant cette entreprise s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
			r=2;
			endif;
	enddo;
endif;
PROC EA21

if EA20 = 1 and EA21 = 2 then
 errmsg("Attention,une entreprise dans le domicile sans installation particulière ne peut pas être louée");
 reenter;
endif;

if EA20 = 1 and EA21 = 3 then
 errmsg("Attention,une entreprise dans le domicile sans installation particulière ne peut pas être pretée");
 reenter;
endif;

if EA20 = 4 and EA21 = 2 then
 errmsg("Attention,une entreprise ambulante ne peut pas être louée");
 reenter;
endif;

if EA20 = 4 and EA21 = 3 then
 errmsg("Attention,une entreprise ambulante ne peut être pas pretée");
 reenter;
endif;

if EA21 = 4 then
 editnote();
 
 numeric r=1;
 while r=1 do
		errmsg("Veuillez préciser le Statut du local de l'entreprise s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
			r=2;
			endif;
	enddo;
endif;
PROC EA22

postproc
{if EA20 = 3 and  pos("X",$) then
 errmsg("Attention,vous dites qu'il s'agit d'un Site industriel non connecté ni à la REGIDESO(eau) ni à la SNEL(electricité)");
 reenter;
endif ;}

if EA20 = 4 and  pos("A",$) then
 errmsg("Attention,vous dites qu'il s'agit d'une entreprise ambulante connectée à la REGIDESO(eau)");
 reenter;
endif ;

if EA20 = 4 and pos("B",$) then
 errmsg("Attention,vous dites qu'il s'agit d'une entreprise ambulante connectée à la SNEL(électricité)");
 reenter;
endif ;

{if EA20 = 5 and  pos("A",$) then
 errmsg("Attention,vous dites que l'entreprise est un Poste improvisé sur un marché public connecté à la REGIDESO(eau)");
 reenter;
endif ;

if EA20 = 5 and pos("B",$) then
 errmsg("Attention,vous dites que l'entreprise est un Poste improvisé sur un marché public connecté à la SNEL(électricité)");
 reenter;
endif ;

if EA20 = 8 and  pos("A",$) then
 errmsg("Attention,vous dites que l'entreprise est dans un Autre emplacement mobile connecté à la REGIDESO(eau");
 reenter;
endif ;

if EA20 = 8 and pos("B",$) then
 errmsg("Attention,vous dites que l'entreprise est dans un Autre emplacement mobile connecté à la SNEL(électricité");
 reenter;
endif ;}

alphavar = $;
if alphachk("ABCX") then
  errmsg(9998);
  reenter;
else
  $ = alphavar;
endif;  

if pos("X",$) & poschar("ABC",$) then
  errmsg(9995);
  reenter;
endif;


PROC EA23

if EA23 = 6 then
 editnote();
 
 numeric r=1;
 while r=1 do
		errmsg("Veuillez préciser la raison d'avoir décidé de créer cette entreprise s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
			r=2;
			endif;
	enddo;
endif;
PROC EA24
savepartial();
PROC EA24A

if EA24A < 0  then
	errmsg("Le nombre de personnes ne peut pas être négatif");
	reenter;
endif;

if EA24 < EA24A then
	i = errmsg("Le nombre de personnes salariées depasse le nombre total de personnes travaillant dans l'entreprise.")
		select("Revoir le nombre total de travailleurs",EA24,"Corriger le nombre de salariés",EA24A);
			if i = 1 then
				reenter EA24;
			endif;
endif;
PROC EA24B

if EA24B < 0  then
	errmsg("Le nombre de personnes ne peut pas être négatif");
	reenter;
endif;


if EA24 < EA24B then
	i= errmsg("Le nombre de personnes non salariées depasse le nombre total de personnes travaillant dans l'entreprise.")
	select("Revoir le nombre total de travailleurs",EA24,"Corriger le nombre de non salariés",EA24B);
			if i = 1 then
				reenter EA24;
			endif;
endif;

if EA24A + EA24B <> EA24 then
	i = errmsg("Le nombre de personnes salariées et non salariées ensemble ne correspond pas au nombre total de personnes travaillant dans l'entreprise.")
	select("Revoir le nombre total de travailleurs",EA24,"Corriger le nombre de salariés",EA24A,"Corriger le nombre de non salariés",EA24B);
			if i = 1 then
				reenter EA24;
			endif;
endif;
PROC EA25
savepartial();

if EA25%50 <> 0 then
	j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
		select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
						
		if j=2 then
		errmsg("Justifier");
		editnote();
						
			if length(strip(editnote()))<15 then
				errmsg(" Veuillez entrer plus de précision");
				reenter;
			endif;
					
		endif;
				
endif;

	if EA25 < 500 then
		errmsg(" Valeur Incorrecte! Etes - vous sûr que la dépense n'a coûté que %d FC",EA25)
			select(" Corrigez la valeur",$,"Oui, la valeur est correcte",continue);
			errmsg("Justifier");
			editnote();
			if length(strip(editnote()))<15 then
				errmsg(" Veuillez entrer plus de précision ou corriger la valeur");
				reenter;
			endif;
	endif;





if  $ > 50000000 then
	errmsg("Confirmez-vous que c'est à %d FC",$)
	select("Modifier ",$,"Continuer",continue);
endif;
PROC EA26

postproc
if $ <> 1 then
 skip to EA28
endif;

savepartial();
PROC EA27

if EA27 = 6 then
 editnote();
 
  numeric r=1;
 while r=1 do
		errmsg("Veuillez préciser la principale source de financement de cet investissement s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
			r=2;
			endif;
	enddo;
endif;
PROC EA28

postproc
if EA28 < 50 then
	errmsg("le montant saisi est incorrect. Veuillez entrer un montant valide.");
	reenter;
endif;

if EA28%50 <> 0 then
	j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
		select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
						
		if j=2 then
		errmsg("Justifier");
		editnote();
						
			if length(strip(editnote()))<15 then
				errmsg(" Veuillez entrer plus de précision");
				reenter;
			endif;
					
		endif;
				
endif;

	if EA28 < 50 then
		errmsg(" Valeur Incorrecte! Etes - vous sûr que la dépense n'a coûté que %d FC",EA28)
			select(" Corrigez la valeur",$,"Oui, la valeur est correcte",continue);
			errmsg("Justifier");
			editnote();
			if length(strip(editnote()))<15 then
				errmsg(" Veuillez entrer plus de précision ou corriger la valeur");
				reenter;
			endif;
	endif;
PROC EA29
savepartial();
PROC REP_MOD6

preproc
     numeric k, trv = 0;
    	clear_labels(); 
     i=1;
     
Onfocus
     i=1;
      setfile( FichSaPart, concat("C:\RDC123\Data\H",edit("999",M061), edit("999",M06INT), ".dat")) ;  
	     if Filesize( FichSaPart ) > 0 then
		     while FileRead( FichSaPart, strpart ) do
		          if strpart[11:3] = "0HL" & tonumber(strpart[1:3]) = M061 and tonumber(strpart[4:2]) = M062 and tonumber(strpart[70:2]) >= 10 then  
	                     		codes(i) = tonumber(strpart[14:2]);
					           	labels(i)= strip (strpart[16:40]);
								   i=i+1;	                      	                  
		          endif ;
		      enddo;
          endif ;
         close( FichSaPart );
				
setvalueset(@getsymbol(),codes,labels);
setcapturetype(REP_MOD6,3);
PROC M0617
preproc
savepartial();


numeric tt;
tt=totocc(ENTREPRISES000);
if (EA01=2 & EA0A=notappl) or (EA01=1 & tt > 1 and EA12(tt)in 1:2 and EA25(tt) <> notappl and EA29(tt) in 1:2 )then
M0617=1;noinput;endif;

postproc
if demode() = modify and ((EA01=2 & EA0A=notappl) or (tt >=1  and  EA12(tt)in 1:2 and  EA25(tt) <> notappl and EA29(tt)) in 1:2)  and M0617<>1 then
	errmsg("Le résultat de l'interview doit être complet. La modalité cochée est differente de celle qui était là! Remettez l'ancienne svp!");
	reenter;
endif;

if (demode()= 2) or (demode() = 1) and M0617=1 then
setvalueset(M0617, M0617_VS2);
 endif;
PROC M0610H
preproc
if demode() = add then
  if special(visualvalue(M0610H)) then
    x = systime();
    if M0610H = notappl then M0610H = int(x / 10000);endif;
    if M0610M = notappl then M0610M = int(x / 100) % 100;endif;
  endif;
endif;
PROC M06FIN

preproc
errmsg("VOUS AVEZ FINI LE MODULE ENTREPRISES NON AGRICOLES");
$ = 3;

postproc
if $ = 1 then 
	errmsg("Vous pouvez remonter!");
	reenter EA05(1) ;
endif;

if $ = 2 then 
	editnote() ;
numeric r2=1;

 while r2=1 do
		errmsg("Veuillez ajouter vos notes s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 10 then
			r2=2;
			endif;
	enddo;
endif;
