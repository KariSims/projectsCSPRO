{Application 'RGA_OP' logic file generated by CSPro}
PROC GLOBAL
alpha(28) alphavar;				   { Alpha working variable used in checking alpha vars }
alpha(28) alphanew;                { Alpha working variable used in checking alpha vars }
alpha(62) alphalst;                { The alphabet }
array codes(50);                   { Array used for creating line numbers of household members sleeping under mosquito net}
array alpha(50) labels(50);        { Array used for creating names of household members sleeping under mosquito net} 

numeric  i=0, x ;
string dmois, xmois, hhName, xAdresse, xCom, xQuart, xIntDate, produit, strategie, repname, IntName, strpart;

numeric inEntry, cont;
numeric addmode, qmark, totlen, aok, alphsize, hhnum, mindi, cln,a, l, lx, 
xOP001, xOP002, xOP003, xOP004, xOP005, xOP006;
numeric   xmodcent,xrvisit,xmodify,xpartial,xentryhw,xverif;
numeric   DB, comply, verific, nopartflag;
//file FichSaPart ;
//----------------------------------------------------------------------------------------------------------------------


// sauvegarde des données 
Function sav()
	savepartial();
end;

//----------------------------------------------------------------------------------------------------------------------

function alphachk(alpha(28) alphamask);
{  russian_convert();}
  { first remove all blanks, and duplicate question marks }
  alphanew = "";
  qmark = 0;
  lx = 1;
  do l = 1 while l <= length(strip(alphavar))
    if alphavar[l:1] <> " " and (alphavar[l:1] <> "?" or not qmark) then
      alphanew[lx:1] = alphavar[l:1];
      lx = lx + 1;
      if alphavar[l:1] = "?" then
        qmark = 1;
      endif;
    endif;
  enddo;
  { aok = 0 - string is bad, aok = 1 - string is good }
  totlen = length(strip(alphamask));
  aok = 0;           { assume string is bad - for empty string }
  alphsize = length(strip(alphanew));
  if alphsize then   { not empty string }
    { check for "?" as only character }
    aok = (alphanew[1:1] = "?" and alphsize = 1);
    if !aok then     { if not a single "?", check string }
      aok = 1;       { now assume string is good until we know otherwise }
      l = 1;         { l is position in string of acceptable values }
      a = 1;         { a is position in input string }
      { loop while the string is still good and there are more letters }
      while aok and a <= alphsize do
        aok = pos(alphanew[a:1],alphamask[l:totlen-l+1]);
        if aok then     { letter is acceptable }
          l = l + aok;  { increment l to position after letter in string of acceptable values }
          a = a + 1     { increment a to next letter in input string }
        endif;
      enddo;
    endif;
  endif;
  alphachk = (!aok);    { alphachk = 0 - if string is good, = 1 - if string is bad }
  { now expand variables }
  if aok then
    do l = 1 while l <= length(strip(alphamask))
      if pos(alphamask[l:1],alphanew) then
        alphavar[l:1] = alphamask[l:1]
      elseif pos("?",alphanew) then
        alphavar[l:1] = "?"
      else
        alphavar[l:1] = " "
      endif;
    enddo;
  endif;
end;


 function niveau_saisie(numeric q)
	
		setfile(CARTO_DICT, "../Fext/RGACarto.csdb",update); 
//			while loadcase(CARTO_DICT) do
//			open(CARTO_DICT);
			if loadcase(CARTO_DICT,OP001,OP002,OP003,OP004,OP005) then
			numeric occur = 1 ; numeric H;
			    for occur in CARTO_REC do
					if OP006 = RGACA06 and OP008 = RGACA11 and q = 1 then
						RGACA16 = 2;
						writecase(CARTO_DICT);
						break;
					endif;
					if  OP006 = RGACA06 and OP008 = RGACA11 and q = 2 then
						RGACA16 = 3;
						writecase(CARTO_DICT);
						break;
					endif;
					
				enddo;
			endif;
			close(CARTO_DICT);
//		enddo;
				
 end;


//----------------------------------------------------------------------------------------------------------------------


PROC RGA_OP_FF

preproc

xOP001 = tonumber(sysparm()[1:2]);
xOP002 = tonumber(sysparm()[3:3]);
xOP003 = tonumber(sysparm()[6:3]);
xOP004 = tonumber(sysparm()[9:3]);
xOP005 = tonumber(sysparm()[12:3]);
xOP006 = tonumber(sysparm()[15:3]);


PROC OP001

preproc
  if special(visualvalue($)) then
    $ = xOP001;
  endif;
PROC OP002

preproc
  if special(visualvalue($)) then
    $ = xOP002;
  endif;
PROC OP003

preproc
  if special(visualvalue($)) then
    $ = xOP003;
  endif;
PROC OP004

preproc
  if special(visualvalue($)) then
    $ = xOP004;
  endif;
PROC OP005

preproc
  if special(visualvalue($)) then
    $ = xOP005;
  endif;
PROC OP006

preproc
  if special(visualvalue($)) then
    $ = xOP006;
  endif;
PROC OP_JDB

preproc

//if demode() = add then
 	if special(visualvalue ($)) then
 	x = sysdate ();
	  if OP_JDB = notappl then OP_JDB = sysdate( "DD" ); endif;
	  if OP_MD = notappl then OP_MD = sysdate( "MM" );endif;
	  if OP_AD = notappl then OP_AD = sysdate( "YYYY" );endif;
	endif;
//endif;
PROC OP_HD

preproc
//if demode() = add then
  if special(visualvalue($)) then
    x = systime();
    if OP_HD = notappl then OP_HD = int(x / 10000);endif;
    if OP_MIND = notappl then OP_MIND = int(x / 100) % 100;endif;
  endif;
//endif;
PROC OP_CO

niveau_saisie(1);

if OP_CO = 2 then
	skip to OP_RES;
endif;
PROC OP101

if length(strip($))< 2 then
	errmsg("Entrer un nom plus précis");
	reenter ;
endif;		
PROC OP102

if length(strip($))< 2 then
	errmsg("Entrer un nom plus précis");
	reenter ;
endif;		
PROC OP104

if length(strip($))< 2 then
	errmsg("Entrer un nom plus précis");
	reenter ;
endif;		
PROC OP106
if OP106 = 2 then 
	skip to OP108;
endif 	
PROC OP108

if length(strip($))< 2 then
	errmsg("Entrer un nom plus précis");
	reenter ;
endif;		
PROC OP109

if OP109 <> 7 then
	skip to OP111
endif;
PROC OP110

if length(strip($))< 2 then
	errmsg("Entrer un mot plus précis");
	reenter ;
endif;		
PROC OP111


if OP111 = 3 then
	skip to OP113
endif;
PROC OP112A

if OP111 = 1 then
	skip to OP113
endif;
PROC OP114

if length(strip(OP114))> 0 then
		  if poschar("WWW.",toupper(OP114)) then
		  // bon
		  else
		   errmsg("Entrer un site web valide");
		   reenter ;
		  endif;		  
endif;		
PROC OP115

if length(strip(OP115))> 0 then
		  if pos("@",OP115) in  2: length(strip(OP115))-3 then
		  // bon
		  else
		   errmsg("Adresse mail incorrect ");
		   reenter ;
		  endif;
		  
		  if pos(".",OP115) in  2: length(strip(OP115))-2 then
		  // bon
		  else
		   errmsg("Adresse mail incorrect ");
		   reenter ;
		  endif;
		  
endif;	
PROC OP203

preproc

ask if OP202A = 2 and OP202B = 2 and OP202C = 2 and OP202D = 2 and OP202E = 2 and OP202F = 2 and OP202G = 2

{if OP202A = 2 and OP202B = 2 and OP202C = 2 and OP202D = 2 and OP202E = 2 and OP202F = 2 and OP202G = 2 then
	//ok
else
	skip to OP204
endif;}
PROC OP205

if OP204 > OP205 then
	errmsg("La création doit intervenir avant le demarrage des activités");
	reenter;
endif;
PROC OP206A

alphavar = $;

  if alphachk("ABCD") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
 
PROC OP206B1

preproc
if !pos("A", OP206A) Then 
	skip to OP206B2;
endif;
PROC OP206B2

preproc
if !pos("B", OP206A) Then 
	skip to OP206B3;
endif;
PROC OP206B3

preproc
if !pos("C", OP206A) Then 
	skip to OP206B4;
endif;
PROC OP206B4

preproc
if !pos("D", OP206A) Then 
	skip to OP207;
endif;
PROC OP207

alphavar = $;

  if alphachk("ABCD") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
PROC OP208

if length(strip($))< 2 then
	errmsg("Entrer un nom plus précis");
	reenter ;
endif;		
PROC OP210

if $ in 95:97,100:120 then 
	$ = 95 ;
endif;
PROC OP211

if OP210 < 12 and OP211 <> 3 then 
	errmsg("Enfant de moins de 12 ans %s",getlabel($,$))
	Select("Corriger l'âge",OP210,"Corriger la situation matrimoniale",OP211,"Continuer",continue);
endif ;
PROC OP212

if OP212 in 3,4,5 then skip to OP215T endif;
PROC OP214

if OP214 <> 7 then skip to OP215T endif;
PROC OP215F

if OP215F + OP215H <> OP215T then
	errmsg("Total saisi (%d) est différent de la somme de nombre d'hommes et de femmes (%d)",OP215T,(OP215F + OP215H))
	select("Total",OP215T,"Total Hommes",OP215H,"Total Femmes",OP215F);
endif;
PROC OP216

if pos($,"W") and (pos($,"A") or pos($,"B") or pos($,"C") or pos($,"D") or pos($,"E") or pos($,"F") or
   pos($,"G") or pos($,"H") or pos($,"I") or pos($,"J") or pos($,"K") or pos($,"L") or 
   pos($,"M") or pos($,"N") or pos($,"O") or pos($,"P") or pos($,"Q") or pos($,"R") or 
 pos($,"S") or pos($,"T") or pos($,"U") or pos($,"V") or pos($,"a") or pos($,"b") or pos($,"c") or pos($,"d") or pos($,"X")) then
 errmsg("La modalité Aucune ne peut etre choisie avec les autres modalités");
 $ = "W";
 endif;

alphavar = $;

  if alphachk("ABCDEFGHIJKLMNOPQRSTUVabcdXW") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;


if !pos($,"X") then
		skip to OP217
endif;
	
PROC OP217

if OP217 <> 97 then skip to OP218 endif;
PROC OP218

if pos($,"W") and (pos($,"A") or pos($,"B") or pos($,"C") or pos($,"D") or pos($,"E") or pos($,"F")) then
 errmsg("La modalité Aucun ne peut etre choisie avec les autres modalités");
 $ = "W";
 endif;


alphavar = $;

  if alphachk("ABCDEFXW") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;

if !pos($,"X") then
		skip to OP219
endif;
	
PROC OP219
if $ = 2 then 
	skip to OP222 ; 
endif ;
PROC OP220

alphavar = $;

  if alphachk("ABCDEFGHIX") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;

if !pos($,"X") then
		skip to OP221
endif;
	
PROC OP221

alphavar = $;

  if alphachk("ABCDEFX") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
PROC OP222

preproc
if not(pos("A",OP216) or pos("B",OP216) or pos("C",OP216) or pos("D",OP216)) then
	skip to OP_RES;
endif;

postproc

if OP222 = 2 then
	skip to OP_RES;
endif;
PROC OP223

alphavar = $;

  if alphachk("ABCDX") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
PROC OP225F1

if OP225F1 + OP225H1 <> OP225T1 then
	errmsg("Total permanents saisi (%d) est différent de la somme de nombre des permanents hommes et des permanents femmes (%d)",OP225T1,(OP225F1 + OP225H1))
	select("Total permanents",OP225T1,"Permanents Hommes",OP225H1,"Permanents Femmes",OP225F1);
endif;
PROC OP225F2

if OP225F2 + OP225H2 <> OP225T2 then
	errmsg("Total des temporaires saisi (%d) est différent de la somme de nombre des temporaires hommes et de temporaires femmes (%d)",OP225T2,(OP225F2 + OP225H2))
	select("Total temporaires",OP225T2,"Total temporaires Hommes",OP225H2,"Total temporaires Femmes",OP225F2);
endif;
PROC OP225T3

if OP225T1 + OP225T2 <> OP225T3 then
	errmsg("Total des employés saisi (%d) est différent de la somme de nombre d'employés permaments et d'employés temporaires (%d)",OP225T3,(OP225T1 + OP225T2))
	select("Total des employés",OP225T3,"Total employés permanents",OP225T1,"Total employés Temporaires",OP225T2);
endif;
PROC OP225H3

if OP225H1 + OP225H2 <> OP225H3 then
	errmsg("Total des employés hommes saisi (%d) est différent de la somme de nombre d'employés permaments hommes et d'employés temporaires hommes (%d)",OP225H3,(OP225H1 + OP225H2))
	select("Total des employés hommes",OP225H3,"Total employés permanents hommes",OP225H1,"Total employés Temporaires",OP225H2);
endif;
PROC OP225F3

if OP225F3 + OP225H3 <> OP225T3 then
	errmsg("Total des employés saisi (%d) est différent de la somme de nombre d'employés hommes et d'employés femmes (%d)",OP225T3,(OP225F3 + OP225H3))
	select("Total des employés",OP225T3,"Total employés Hommes",OP225H3,"Total employés Femmes",OP225F3);
endif;


if OP225F1 + OP225F2 <> OP225F3 then
	errmsg("Total des employés Femmes saisi (%d) est différent de la somme de nombre d'employés permaments Femmes et d'employés temporaires Femmes (%d)",OP225F3,(OP225F1 + OP225F2))
	select("Total des employés Femmes",OP225F3,"Total employés permanents Femmes",OP225F1,"Total employés Temporaires Femmes",OP225F2);
endif;
PROC OP226F

if OP226F + OP226H <> OP226T then
	errmsg("Total d’heures de travail saisi (%d) est différent de la somme de nombre d’heures de travail des hommes et de femmes (%d)",OP226T,(OP226F + OP226H))
	select("Total d’heures de travail",OP226T,"Total d’heures de travail Hommes",OP226H,"Total d’heures de travail Femmes",OP226F);
endif;
PROC OP2280

Preproc

curocc();
PROC OP228A

if length(strip($))< 2 then
	errmsg("Entrer un nom plus précis");
	reenter ;
endif;		
PROC OP228D

alphavar = $;

  if alphachk("ABCDE") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
PROC OP228E

  if OP228E <> 6 then
		skip to next;
  endif;
PROC SECT3_AG_FORM
preproc
if !pos(OP216,"A") then skip to SECT4_EA_FORM endif;
PROC OP302A

alphavar = $;

  if alphachk("ABCDEFGHIJKLMNOPQRSTX") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
    
  if !pos("X",$) then
		skip to OP302BA;
  endif;
PROC OP302BA

preproc

  if !pos("A",OP302A) then
		skip to OP302BB;
  endif;
PROC OP302BB

preproc

  if !pos("B",OP302A) then
		skip to OP302BC;
  endif;
PROC OP302BC

preproc

   if !pos("C",OP302A) then
		skip to OP302BD;
  endif;
PROC OP302BD

preproc

  if !pos("D",OP302A) then
		skip to OP302BE;
  endif;
PROC OP302BE

preproc

  if !pos("E",OP302A) then
		skip to OP302BF;
  endif;
PROC OP302BF

preproc

  if !pos("F",OP302A) then
		skip to OP302BG;
  endif;
PROC OP302BG

preproc

  if !pos("G",OP302A) then
		skip to OP302BH;
  endif;
PROC OP302BH

preproc

  if !pos("H",OP302A) then
		skip to OP302BI;
  endif;
PROC OP302BI

preproc

  if !pos("I",OP302A) then
		skip to OP302BJ;
  endif;
PROC OP302BJ

preproc

  if !pos("J",OP302A) then
		skip to OP302BK;
  endif;
PROC OP302BK

preproc

  if !pos("K",OP302A) then
		skip to OP302BL;
  endif;
PROC OP302BL

preproc

  if !pos("L",OP302A) then
		skip to OP302BM;
  endif;
PROC OP302BM

preproc

  if !pos("M",OP302A) then
		skip to OP302BN;
  endif;
PROC OP302BN

preproc

  if !pos("N",OP302A) then
		skip to OP302BO;
  endif;
PROC OP302BO

preproc

  if !pos("O",OP302A) then
		skip to OP302BP;
  endif;
PROC OP302BP

preproc

  if !pos("P",OP302A) then
		skip to OP302BQ;
  endif;
PROC OP302BQ

preproc

  if !pos("Q",OP302A) then
		skip to OP302BR;
  endif;
PROC OP302BR

preproc

  if !pos("R",OP302A) then
		skip to OP302BS;
  endif;
PROC OP302BS


preproc

  if !pos("S",OP302A) then
		skip to OP302BT;
  endif;
PROC OP302BT

preproc

  if !pos("T",OP302A) then
		skip to OP303A;
  endif;
PROC OP303A

alphavar = $;

  if alphachk("ABCDEFGHIJKLX") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
    
  if !pos("X",$) then
		skip to OP303BA;
  endif;
PROC OP303BA


preproc

  if !pos("A",OP303A) then
		skip to OP303BB;
  endif;
PROC OP303BB

preproc

  if !pos("B",OP303A) then
		skip to OP303BC;
  endif;
PROC OP303BC


preproc

  if !pos("C",OP303A) then
		skip to OP303BD;
  endif;
PROC OP303BD

preproc

  if !pos("D",OP303A) then
		skip to OP303BE;
  endif;
PROC OP303BE


preproc

  if !pos("E",OP303A) then
		skip to OP303BF;
  endif;
PROC OP303BF

preproc

  if !pos("F",OP303A) then
		skip to OP303BG;
  endif;
PROC OP303BG

preproc

  if !pos("G",OP303A) then
		skip to OP303BH;
  endif;
PROC OP303BH

preproc

  if !pos("H",OP303A) then
		skip to OP303BI;
  endif;
PROC OP303BI

preproc

  if !pos("I",OP303A) then
		skip to OP303BJ;
  endif;
PROC OP303BJ

preproc

  if !pos("J",OP303A) then
		skip to OP303BK;
  endif;
PROC OP303BK

preproc

  if !pos("K",OP303A) then
		skip to OP303BL;
  endif;
PROC OP303BL

preproc

  if !pos("L",OP303A) then
		skip to OP304A;
  endif;
PROC OP304A


alphavar = $;

  if alphachk("ABCDEFGHIJKLMNOPQRSTUVWXY") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
    
  if !pos("Y",$) then
		skip to OP304BA;
  endif;
PROC OP304BA


preproc

  if !pos("A",OP304A) then
		skip to OP304BB;
  endif;
PROC OP304BB

preproc

  if !pos("B",OP304A) then
		skip to OP304BC;
  endif;
PROC OP304BC

preproc

  if !pos("C",OP304A) then
		skip to OP304BD;
  endif;
PROC OP304BD


preproc

  if !pos("D",OP304A) then
		skip to OP304BE;
  endif;
PROC OP304BE

preproc

  if !pos("E",OP304A) then
		skip to OP304BF;
  endif;
PROC OP304BF

preproc

  if !pos("F",OP304A) then
		skip to OP304BG;
  endif;
PROC OP304BG

preproc

  if !pos("G",OP304A) then
		skip to OP304BH;
  endif;
PROC OP304BH


preproc

  if !pos("H",OP304A) then
		skip to OP304BI;
  endif;
PROC OP304BI

preproc

  if !pos("I",OP304A) then
		skip to OP304BJ;
  endif;
PROC OP304BJ

preproc

  if !pos("J",OP304A) then
		skip to OP304BK;
  endif;
PROC OP304BK

preproc

  if !pos("K",OP304A) then
		skip to OP304BL;
  endif;
PROC OP304BL

preproc

  if !pos("L",OP304A) then
		skip to OP304BM;
  endif;
PROC OP304BM

preproc

  if !pos("M",OP304A) then
		skip to OP304BN;
  endif;
PROC OP304BN

preproc

  if !pos("N",OP304A) then
		skip to OP304BO;
  endif;
PROC OP304BO

preproc

  if !pos("O",OP304A) then
		skip to OP304BP;
  endif;
PROC OP304BP

preproc

  if !pos("P",OP304A) then
		skip to OP304BQ;
  endif;
PROC OP304BQ

preproc

  if !pos("Q",OP304A) then
		skip to OP304BR;
  endif;
PROC OP304BR

preproc

  if !pos("R",OP304A) then
		skip to OP304BS;
  endif;
PROC OP304BS

preproc

  if !pos("S",OP304A) then
		skip to OP304BT;
  endif;
PROC OP304BT

preproc

  if !pos("T",OP304A) then
		skip to OP304BU;
  endif;
PROC OP304BU

preproc

  if !pos("U",OP304A) then
		skip to OP304BV;
  endif;
PROC OP304BV

preproc

  if !pos("V",OP304A) then
		skip to OP304BW;
  endif;
PROC OP304BW

preproc

  if !pos("W",OP304A) then
		skip to OP304BX;
  endif;
PROC OP304BX

preproc

  if !pos("X",OP304A) then
		skip to OP305A;
  endif;
PROC OP305A

alphavar = $;

  if alphachk("ABCDEFGHIJKLMNOPQRSTUX") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
    
  if !pos("X",$) then
		skip to OP305BA;
  endif;
PROC OP305BA

preproc

  if !pos("A",OP305A) then
		skip to OP305BB;
  endif;
PROC OP305BB

preproc

  if !pos("B",OP305A) then
		skip to OP305BC;
  endif;
PROC OP305BC

preproc

  if !pos("C",OP305A) then
		skip to OP305BD;
  endif;
PROC OP305BD

preproc

  if !pos("D",OP305A) then
		skip to OP305BE;
  endif;
PROC OP305BE

preproc

  if !pos("E",OP305A) then
		skip to OP305BF;
  endif;
PROC OP305BF

preproc

  if !pos("F",OP305A) then
		skip to OP305BG;
  endif;
PROC OP305BG

preproc

  if !pos("G",OP305A) then
		skip to OP305BH;
  endif;
PROC OP305BH

preproc

  if !pos("H",OP305A) then
		skip to OP305BI;
  endif;
PROC OP305BI

preproc

  if !pos("I",OP305A) then
		skip to OP305BJ;
  endif;
PROC OP305BJ

preproc

  if !pos("J",OP305A) then
		skip to OP305BK;
  endif;
PROC OP305BK

preproc

  if !pos("K",OP305A) then
		skip to OP305BL;
  endif;
PROC OP305BL

preproc

  if !pos("L",OP305A) then
		skip to OP305BM;
  endif;
PROC OP305BM

preproc

  if !pos("M",OP305A) then
		skip to OP305BN;
  endif;
PROC OP305BN

preproc

  if !pos("N",OP305A) then
		skip to OP305BO;
  endif;
PROC OP305BO

preproc

  if !pos("O",OP305A) then
		skip to OP305BP;
  endif;
PROC OP305BP

preproc

  if !pos("P",OP305A) then
		skip to OP305BQ;
  endif;
PROC OP305BQ

preproc

  if !pos("Q",OP305A) then
		skip to OP305BR;
  endif;
PROC OP305BR

preproc

  if !pos("R",OP305A) then
		skip to OP305BS;
  endif;
PROC OP305BS

preproc

  if !pos("S",OP305A) then
		skip to OP305BT;
  endif;
PROC OP305BT

preproc

  if !pos("T",OP305A) then
		skip to OP305BU;
  endif;
PROC OP305BU

preproc

  if !pos("U",OP305A) then
		skip to OP306;
  endif;
PROC OP307

alphavar = $;

  if alphachk("ABCDEFGHX") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
    
  if !pos("X",$) then
		skip to OP308;
  endif;
PROC OP311

if OP311 = 2 then
	skip to OP313;
endif;
PROC OP312

alphavar = $;

  if alphachk("ABCDE") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
PROC OP313

alphavar = $;

  if alphachk("ABCDEXW") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
    
  if !pos("X",$) then
		skip to OP314;
  endif;
PROC OP314

  if alphachk("ABW") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
PROC OP315
  if alphachk("AB") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
PROC SECT4_EA_FORM


if not(pos("B",OP216) or pos("C",OP216) or pos("D",OP216)) then skip to SECT5_RFMI_FORM endif;
PROC OP401A

alphavar = $;

  if alphachk("ABCDEFGHIJX") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
    
  if !pos("X",$) then
		skip to OP401BA;
  endif;
PROC OP401BA

preproc

  if !pos("A",OP401A) then
		skip to OP401BB;
  endif;
PROC OP401BB

preproc

  if !pos("B",OP401A) then
		skip to OP401BC;
  endif;
PROC OP401BC

preproc

  if !pos("C",OP401A) then
		skip to OP401BD;
  endif;
PROC OP401BD

preproc

  if !pos("D",OP401A) then
		skip to OP401BE;
  endif;
PROC OP401BE

preproc

  if !pos("E",OP401A) then
		skip to OP401BF;
  endif;
PROC OP401BF

preproc

  if !pos("F",OP401A) then
		skip to OP401BG;
  endif;
PROC OP401BG

preproc

  if !pos("G",OP401A) then
		skip to OP401BH;
  endif;
PROC OP401BH

preproc

  if !pos("H",OP401A) then
		skip to OP401BI;
  endif;
PROC OP401BI

preproc

  if !pos("I",OP401A) then
		skip to OP401BJ;
  endif;
PROC OP401BJ

preproc

  if !pos("J",OP401A) then
		skip to OP402A1;
  endif;
PROC OP402A2


PROC OP403

preproc

if !pos("A",OP401A) then
		skip to OP405A;
 endif;
PROC OP404

alphavar = $;

  if alphachk("ABCW") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
PROC OP406A

preproc

OP406A= Curocc();
PROC OP406B

preproc

OP406B = getlabel($,$);
PROC OP406E

preproc

if OP406A <> 2 then skip to OP406F endif;
PROC OP406F

preproc

if OP406A = 2 then skip to OP406F endif;
PROC OP406G

preproc

if OP406A <> 2 then skip to OP406H endif;
PROC OP407


preproc
    
  if !pos("I",OP401A) then
		skip to OP411;
  endif;

Postproc

alphavar = $;

  if alphachk("AB") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
PROC OP408A

preproc
    
  if !pos("A",OP407) then
		skip to OP408B;
  endif;
PROC OP408B

preproc
    
  if !pos("B",OP407) then
		skip to OP408C;
  endif;
PROC OP409A

preproc
    
  if !pos("A",OP407) then
		skip to OP409B;
  endif;
PROC OP409B


preproc
    
  if !pos("B",OP407) then
		skip to OP409C;
  endif;
PROC OP411

alphavar = $;

  if alphachk("ABCDEFGHIJX") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;

  if !pos("X",$) then
		skip to OP412;
  endif;
PROC OP412

if OP412 = 2 then 
	skip to OP416A 
endif;
PROC OP413

alphavar = $;

  if alphachk("ABCX") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;

  if !pos("X",$) then
		skip to OP414;
  endif;
PROC OP414

alphavar = $;

  if alphachk("ABCX") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;

  if !pos("X",$) then
		skip to OP415A;
  endif;
PROC OP415A

preproc

  if !pos("A",OP413) then
		skip to OP415B;
  endif;
PROC OP415B

preproc

  if !pos("B",OP413) then
		skip to OP415C;
  endif;
PROC OP415C

preproc

  if !pos("C",OP413) then
		skip to OP415X;
  endif;
PROC OP415X

preproc

  if !pos("X",OP413) then
		skip to OP416A;
  endif;
PROC OP422


alphavar = $;

  if alphachk("ABCDEX") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;

  if !pos("X",$) then
		skip to OP423;
  endif;
PROC OP423


alphavar = $;

  if alphachk("ABCDEFGHI") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
PROC OP424A

alphavar = $;

  if alphachk("ABCDEFGHI") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
PROC OP501

alphavar = $;

  if alphachk("ABCDEFGHIJKLMNOPQRSTXW") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
    
  if !pos("X",$) then
		skip to OP502;
  endif;
PROC OP502

alphavar = $;

  if alphachk("ABCW") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
PROC OP503

alphavar = $;

  if alphachk("ABCDEFGHIJKLMNOPQR") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
PROC OP504

alphavar = $;

  if alphachk("ABCDEFGHIXW") then
    errmsg("Code donné pour la variable alpha non acceptable");
    reenter
  else
    $ = alphavar;
  endif;
    
  if !pos("X",$) then
		skip to OP505;
  endif;
PROC OP508

if OP508 = 2 then
	skip to OP_RES;
endif;
PROC OP_JF

preproc

//if demode() = add then
 	if special(visualvalue ($)) then
 	x = sysdate ();
	  if OP_JF = notappl then OP_JF = sysdate( "DD" ); endif;
	  if OP_MF = notappl then OP_MF = sysdate( "MM" );endif;
	  if OP_AF = notappl then OP_AF = sysdate( "YYYY" );endif;
	endif;
//endif;
PROC OP_HF
preproc
//if demode() = add then
  if special(visualvalue($)) then
    x = systime();
    if OP_HF = notappl then OP_HF = int(x / 10000);endif;
    if OP_MINF = notappl then OP_MINF = int(x / 100) % 100;endif;
  endif;
//endif;  
PROC OP_FIN

niveau_saisie(2);
