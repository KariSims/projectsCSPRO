{Application 'CFCRTMWM' logic file generated by CSPro}
PROC GLOBAL

numeric i, a, j;


PROC CFCRTMWM_FF
PROC WM
PROC WM2

	if !WM1>0 or !WM2>0 then
		errmsg(010101,WM1,WM2);
	endif;


PROC WM3

	// Comparer les numéros d'ordre dans le ménage et dans ce module
	HH1 = WM1 ;
	HH2 = WM2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then

		for j in MICS6HH.MODHL do
			if (WM3=HL1(j)) then
				a=1;
			endif;
		enddo;
		if a=0 then
			errmsg(999999, visualvalue(WM5),WM1,WM2,WM3);

		endif;
	else
		errmsg(666666, visualvalue(WM5),HH1, HH2);
	endif;


PROC WM3A

	// Comparer les noms dans le ménage et dans ce module
	HH1 = WM1 ;
	HH2 = WM2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then

		for j in MICS6HH.MODHL do
			if length(WM3A)=length(HL2(j)) then
				a=2;
			endif;
		enddo;
		if a=0 then
			errmsg(777777, visualvalue(WM5), HH1, HH2,WM3, strip(HL2(WM3)), strip(WM3A) );

		endif;

	endif;


PROC WM4

	if WM3 in 1:99 then
		errmsg(020301,WM1,strip(WM3A),WM2);
	endif;


PROC WM5

	// Comparer les numéros d'ordre dans le ménage et dans ce module
	HH1 = WM1 ;
	HH2 = WM2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then
		if (WM5=HH3) then
			a=3;
		else
			errmsg(888888, WM5,HH1, HH2);

		endif;
	endif;


PROC WM9

	if WM9<>1 then
		errmsg(020901,WM1,WM5,WM3,WM2);
	endif;

	if !invalueset(WM9) then
		errmsg(020902,WM1,WM2,WM3);
	endif;


	// Comparer les consentement dans le ménage et dans ce module
	HH1 = WM1 ;
	HH2 = WM2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then
		if (WM9=1 & HH12=1) then
			a=3;
		elseif(WM9=1 & HH12=2) then
			errmsg(111111, WM5,HH1, HH2,WM3);

		endif;
	endif;
PROC WM17

	if WM17=1 then
		if WM9=1 then
			errmsg(021701,WM1,WM2);
		endif;

	else
		//WM17<>1 then
		   errmsg(021702,WM1,strip(WM3A),WM2,WM5);
	endif;


	if special(WM17) then
		errmsg(170902,WM1,WM2,WM3,WM5);
	endif;
PROC WB4


	// Comparer les numéros d'ordre dans le ménage et dans ce module
	HH1 = WM1 ;
	HH2 = WM2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then

		//		for j in MICS6HH.MODHL do
		if WB4=HL6(WM3) then
			a=4;
			//			endif;
			//		enddo;
			//		if a=0 then
		else
			errmsg(555555, WM5, HH1, HH2,WM3,HL6(WM3), WB4);

		endif;

	endif;


PROC WB6A

	// Comparer les numéros d'ordre dans le ménage et dans ce module
	HH1 = WM1 ;
	HH2 = WM2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then

		//		for j in MICS6HH.MODHL do
		if WB6A=ED5A(WM3) then
			a=5;
			//			endif;
			//		enddo;
			//		if a=0 then
		else
			errmsg(444444, WM5, HH1, HH2, WM3,ED5A(WM3), WB6A);

		endif;

	endif;

PROC WB10A
	// Comparer les numéros d'ordre dans le ménage et dans ce module
	HH1 = WM1 ;
	HH2 = WM2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then

		//		for j in MICS6HH.MODHL do
		if WB10A=ED10A(WM3) then
			a=5;
			//			endif;
			//		enddo;
			//		if a=0 then
		else
			errmsg(4444440, WM5, HH1, HH2, WM3,ED10A(WM3), WB10A);

		endif;

	endif;
PROC WB12A
	// Comparer les numéros d'ordre dans le ménage et dans ce module
	HH1 = WM1 ;
	HH2 = WM2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then

		//		for j in MICS6HH.MODHL do
		if WB12A=ED16A(WM3) then
			a=5;
			//			endif;
			//		enddo;
			//		if a=0 then
		else
			errmsg(4444441, WM5, HH1, HH2, WM3,ED16A(WM3), WB12A);

		endif;

	endif;
PROC CM15CY
numeric CM15Nais, WB3Nais,MrEf;
WB3Nais=(WB3Y*100)+WB3M;
CM15Nais=(CM15CY*100)+CM15CM;
MrEf=CM15Nais-WB3Nais;

if CM15Nais<201505 then
	errmsg(150101,WM1,WM2,WM5,CM15Nais);
endif;

if CM15Nais<200005 then
	errmsg(150102,WM1,WM2,WM5,CM15Nais,WB3Nais);
endif;

if CM15Nais<=WB3Nais then
	errmsg(030001,WM1,WM2,WM5,CM15Nais,WB3Nais);
endif;

if MrEf<13 then
	errmsg(030002,WM1,WM2,WM5,CM15Nais,WB3Nais);
endif;
