{Application 'CFCRTMCH' logic file generated by CSPro}
PROC GLOBAL

numeric i, a, j;

PROC CFCRTMCH_FF
PROC UF2

if !UF1>0 or !UF2>0 then
	errmsg(010101,UF1,UF2);
endif;
PROC UF3
	// Comparer les numéros d'ordre dans le ménage et dans ce module
	HH1 = UF1 ;
	HH2 = UF2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then

		for j in MICS6HH.MODHL do
			if (UF3=HL1(j)) then
				a=1;
			endif;
		enddo;
		if a=0 then
			errmsg(999999, visualvalue(UF5),UF1,UF2,UF3);

		endif;
	else
		errmsg(666666, visualvalue(UF5),HH1, HH2);
	endif;


PROC UF3N


	// Comparer les noms dans le ménage et dans ce module
	HH1 = UF1 ;
	HH2 = UF2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then

		for j in MICS6HH.MODHL do
			if length(UF3N)=length(HL2(j)) then
				a=2;
			endif;
		enddo;
		if a=0 then
			errmsg(777777, visualvalue(UF5), HH1, HH2,UF3, strip(HL2(UF3)), strip(UF3N) );

		endif;

	endif;
PROC UF4

if UF4 in 2:99 then
	errmsg(020401,UF1,UF2,strip(UF4N),strip(UF3N));
endif;
PROC UF5

	// Comparer les numéros d'ordre dans le ménage et dans ce module
	HH1 = UF1 ;
	HH2 = UF2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then
		if (UF5=HH3) then
			a=3;
		else
			errmsg(888888, UF5,HH1, HH2);

		endif;
	endif;
PROC UF10

if UF10<>1 then
	errmsg(021001,UF1,UF5,UF3,UF2);
endif;

if !invalueset(UF10) then
	errmsg(021002,UF1,UF2,UF3);
endif;

	// Comparer les consentement dans le ménage et dans ce module
	HH1 = UF1 ;
	HH2 = UF2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then
		if (UF10=1 & HH12=1) then
			a=3;
		elseif(UF10=1 & HH12=2) then
			errmsg(111111, UF5,HH1, HH2,UF3);

		endif;
	endif;
PROC UF17


if UF17=1 & UF10=1 then
	errmsg(021701,UF1,UF2,);
endif;

if UF17>1 then
	errmsg(021702,UF1,strip(UF3N),UF2,UF3);
endif;

	if special(UF17) then
		errmsg(170902,UF1,UF2,UF3,UF5);
	endif;
PROC UB2
	// Comparer les numéros d'ordre dans le ménage et dans ce module
	HH1 = UF1 ;
	HH2 = UF2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then

		//		for j in MICS6HH.MODHL do
		if UB2=HL6(UF3) then
			a=4;
			//			endif;
			//		enddo;
			//		if a=0 then
		else
			errmsg(555555, UF5, HH1, HH2,UF3,HL6(UF3), UB2);

		endif;
		if UB2>3 then
			errmsg(333333,UF5, HH1, HH2,UF3);
		endif;
	endif;
PROC UB6
	// Comparer les numéros d'ordre dans le ménage et dans ce module
	HH1 = UF1 ;
	HH2 = UF2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then

		//		for j in MICS6HH.MODHL do
		if UB6=ED4(UF3) then
			a=5;
			//			endif;
			//		enddo;
			//		if a=0 then
		else
			errmsg(444444, UF5, HH1, HH2, UF3,ED4(UF3), UB6);

		endif;

	endif;
PROC UB7
	// Comparer les numéros d'ordre dans le ménage et dans ce module
	HH1 = UF1 ;
	HH2 = UF2 ;
	i=1;
	a=0;
	j=1;

	if loadcase(MICS6HH, HH1, HH2) then

		//		for j in MICS6HH.MODHL do
		if UB7=ED9(UF3) then
			a=5;
			//			endif;
			//		enddo;
			//		if a=0 then
		else
			errmsg(222222, UF5, HH1, HH2, UF3,ED9(UF3), UB7);

		endif;

	endif;
