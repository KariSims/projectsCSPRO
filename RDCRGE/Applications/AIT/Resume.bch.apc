{Application 'RESUME' logic file generated by CSPro}
PROC GLOBAL

  //Répertoire
  string RepApp, RepDict, repdrop, entryDir, dataDir, refDir, tasksDir, syncDir, AITDir, workDir, receiveDir, docTaskFile, backupDir, closedDir, updateSourceDir, updateDestDir;
  string btAddress, InterviewerId, InterviewerName,LibTrouve;  
  string ResumeTaskFile, reviewDataTaskFile;
  string encrKey ; //
  
  array string teamIdIndex(9999); //index des enqueteur par ID 
  array teamIds(50);              //tables des IDs de l'équipe
  numeric teamMemberCount;        //nombre total des memebres de l'équipe
  numeric NumEquip,TROUVE ;              // Numéro de l'équipe

  numeric debugMode;              //1 - debug mode, 0 - non-debug mode
  numeric removableOnly;          //1 - backup to removable drive only, 0 - scan all accessable drives
  numeric supervAsInterv;         //1 - supervisor can play a role of interviewer, 0 - supervisor cannot conduct interviews

  numeric maxZDnum;               //Maximum number of households possible in one cluster
  string fichcarc, curFile, fileschcarc,strpart ;
  file Fich ;

array string PCNameRef(6,2);
array string PCNameASS(6,3);
    
// Pour nettoyer la table
array numeric code(99);


//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

string Numfile;
numeric i, total = 0, c, pc, nc;
function resume(k)

 				
 				if k = 1 then
	 	 			open(RGE_DICT);
					        while loadcase(RGE_DICT) do
					          if SI1 > 0 then
					          		c = c + 1;	          
					          endif;
					        enddo;
					resume	= c;			    
				    close(RGE_DICT);			    
			    endif;	          
 			 	
 			 	if k = 2 then		
		 			open(RGE_DICT);
					        while loadcase(RGE_DICT) do				                  				
					          if SI1 = notappl then
					          		pc = pc + 1		          
					          endif;				        
					        enddo;
				   resume = pc;	    
				   close(RGE_DICT);	
	 			endif;

  end ;
  
  //---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


PROC RGEZD_FF
	

//	numeric i;	
	string ZD_Task;
		
    open(TASKS);
    numeric Ec = 0, Epc = 0, Enc = 0;
	    		 
		 	Ec = resume(1);
		    Epc = resume(2);
		    Enc = total - (Ec + Epc) ;
		    
			 TASK_ID = getGuid(); // ID de tâche unique
		    TASK_TEMPLATENAME = "Partie";
		    if total = 0 or special(total) then
		    	TASK_LABEL = "Résultat (0 Entreprises dénombrées)";
		    else
		    	TASK_LABEL = "Résultat (" + maketext("%d",total) + " Entreprises dénombrées)";
		    endif;
		    TASK_STATUS = 1;
		    TASK_PARENTID = "";
		    TASK_DUMMY = 0; //très important
		    writecase(TASKS);
		        
		    ZD_Task = TASK_ID;
		    
		   		TASK_ID = getGuid();
				TASK_TEMPLATENAME = "Resume";
				if total = 0 or special(total) then
				TASK_LABEL = "<br>          1. Entreprises récensées                         :   " + maketext("%d",Ec) + " Entreprises (0 %)<br><br>          2. Entreprises partiellement récensées  :   " + maketext("%d",Epc) + " Entreprises (0 %)<br><br>          3. Entreprises non récensées                  :   " + maketext("%d",Enc) + " Entreprises (0 %)" ;
				else
				TASK_LABEL = "<br>          1. Entreprises récensées                         :   " + maketext("%d",Ec) + " Entreprises (" + maketext("%d",Ec/total*100) + "%)<br><br>          2. Entreprises partiellement récensées  :   " + maketext("%d",Epc) + " Entreprises (" + maketext("%d",Epc/total*100) + "%)<br><br>          3. Entreprises non récensées                  :   " + maketext("%d",Enc) + " Entreprises (" + maketext("%d",Enc/total*100) + "%)" ;
				endif;
				TASK_STATUS = 1;						    
				TASK_PARENTID = ZD_Task ;
				TASK_DUMMY = 0;
			
			writecase(TASKS);
			
		
		close(Fich);
    
    close(TASKS);
    
    filedelete(tempDir + "\*.csdb*"); 
 
  
// --------------------



PROC ZDL09M

if length(strip(ZDL02)) > 0 and ZDL07 >= 0 then
	total = total + 1;	
endif;
