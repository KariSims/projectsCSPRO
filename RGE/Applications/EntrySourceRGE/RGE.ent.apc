{Application 'RGE' logic file generated by CSPro}
PROC GLOBAL

//set explicit;

array codes(50);                   { Array used for creating line numbers of household members sleeping under mosquito net}
array alpha(50) labels(50);        { Array used for creating names of household members sleeping under mosquito net} 
alpha(62) alphalst;                { The alphabet }

numeric  i=0, x, lat, long, AP, AS1, AS2, Alt ;
string dmois, xmois, fichcarc, strpart, xLU11, nomUE, numPAR, AvenueZD, Hemi_UE, Entreprise, lib_AP1, lib_AS1, lib_AS2 ;

numeric inEntry;
numeric addmode, qmark, totlen, aok, alphsize , maxmem, 
hhnum, mindi, cln, psu, err, dd, ss, ddw, di, diwm, dich, 
xline, a, e, j, k, l, lx, n, t, y, found, net,rp, xwc, xcc, cdline, kount, opid ;
  
numeric   xProv,xVill,xSect,xQuart,xZD,xInt, xNumese ;
numeric   xmodcent,xrvisit,xmodify,xpartial,xentryhw,xverif;
numeric   DB, comply, verific, nopartflag;
numeric   qhMoreCount,age1;

file FichSaPart ;

//----------------------------------------------------------------------------------------------------------------------


// sauvegarde des données 
Function sav()
	savepartial();
end;

//----------------------------------------------------------------------------------------------------------------------

// Quitter
Function quitter()
	savepartial();
	stop(1) ;
end;

//----------------------------------------------------------------------------------------------------------------------

{ User defined functions }

  function showCalc()
    execsystem("calc");
  end;

//----------------------------------------------------------------------------------------------------------------------

  { setup basic user bar }
  function userbase();
    userbar( clear );

    
    userbar(add text,"RGE :Repérage ");
	userbar(set color,236,254,255);
	
    userbar( add button, "<",    do("PreviousField") );
    userbar( add button, ">",    do("NextField") );
    userbar( add button, ">>|",  do("AdvanceToEnd") );
    userbar( add button, "Note", do("EditNote") );
    userbar( add button, "Calc", showCalc );	
 	userbar(add spacing,25);   
	userbar(add button,"Sauvegarde", sav());    
	userbar(add spacing,25);
	userbar(add text," ");
	
	userbar(add button,"Quitter", quitter());    
	userbar(add spacing,25);
	userbar(add text," ");
  end;

 
{ --------------------------------------------------------------------------- }
{ valid
  Checks that a variable has a valid value.
  A valid value is less than 96 and not a special value e.g notappl/missing
  Returns: 1 if valid, 0 if not valid                                        }

function valid(xvar);
  valid = (!special(xvar) and xvar < 96)
end;

{ -------------------------------------------------------------------------- }
{ NAtoZero
  Converts notappl (and 99 - for child labour module) values to zero while not changing other values.
  Returns: 0 if input variable is notappl, else returns it unchanged         }
function NAtoZero(xvar);
  if xvar = notappl or xvar=99 then
    xvar = 0
  endif;
  NAtoZero = xvar;
end;

//----------------------------------------------------------------------------------------------------------------------

//Setting a variable value for the currently loaded task
  function setTaskVar(string varName, string varValue)
    //first checking if the variable is already set
    for i in TASKS.TASK_VARIABLES do
      if toupper(strip(varName)) = toupper(strip(TASK_VARNAME(i))) then
	    TASK_VARVAL(i) = varValue;
	    exit;
	  endif;
    enddo;

    //adding a new variable if in case it hasn't been set alerady
    i = 0;
    while i <= maxocc(TASKS.TASK_VARIABLES) do 
      i = i + 1;
	  if length(strip(TASK_VARNAME(i))) = 0 then
	    TASK_VARNAME(i) = strip(varName);
	    TASK_VARVAL(i) = strip(varValue);
	    break;
	  endif;
    enddo;
  end;
  
//----------------------------------------------------------------------------------------------------------------------


  //Getting the variable value using varibale name for the currently loaded task
  function string getTaskVar(string varName)
    do i = 1 while i <= maxocc(TASKS.TASK_VARIABLES)
      if length(strip(TASK_VARNAME(i))) = 0 then
	    break;
	  endif;
      if toupper(strip(varName)) = toupper(strip(TASK_VARNAME(i))) then
	    getTaskVar = strip(TASK_VARVAL(i));
	    break;
  	  endif;
    enddo;
  end;

//----------------------------------------------------------------------------------------------------------------------

function clear_labels();
	do i = 1 while i <= 50
	  codes(i) = notappl;
	  labels(i) = "";
	enddo;
end;

//----------------------------------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------------------------------

Function rech_Av()
  t=0; i=1; 
      setfile( FichSaPart,"C:\RDCRGE\Reference\Avenue.dat") ;  
	     if Filesize( FichSaPart ) > 0 then
		     while FileRead( FichSaPart, strpart ) do
		          if tonumber(strpart[1:2]) = ID1 and tonumber(strpart[3:3]) = ID2  and tonumber(strpart[6:3]) = ID3 and tonumber(strpart[9:3]) = ID4 and tonumber(strpart[12:3]) = ID6  then  
                  codes(i)=tonumber(strpart[15:4]);
                  labels(i)=strip(strpart[19:30]);
                  i=i+1;
		          endif ;
		      enddo;
		      codes(i)=codes(i-1)+1;
                  labels(i)="A saisir";
                  i=i+1;
          endif ;
         close( FichSaPart );
end;


//----------------------------------------------------------------------------------------------------------------------

//Recuperation des coordonnées saisies dans la ZD

//---------------------------------------------------------------------------------------------------------------------- 

PROC SI3
SI3=IDAR; 


PROC RGE_FF

preproc
  //Initializing global variables
  SetGlobalVariables();
  tempDir = projectDir + "\Temp";
  utilsDir = projectDir + "\Utils";
  
  setfont(All,"Baskerville Old Face",38);
  setfont(ErrMsg,"Baskerville Old Face",32);
  setvaluesets("_FRA");  //to set valuesets in French


  //reading the task
  TASK_ID = trimQuotes(readEnviValue("taskId"));
  loadcase(TASKS, TASK_ID);

  //if task is water quality questionnaire task, loading parent household task
  if strip(TASK_TEMPLATENAME) <> "zd_int" & length(strip(TASK_PARENTID)) > 0 then
    TASK_ID = TASK_PARENTID;
    loadcase(TASKS, TASK_ID);
  endif;


  xProv = tonumber(sysparm()[1:2]);
  xVill = tonumber(sysparm()[3:3]);
  xSect = tonumber( sysparm()[6:3] );
  xQuart = tonumber( sysparm()[9:3] );
  xZD  = tonumber( sysparm()[12:3] );
  xInt = tonumber( sysparm()[15:4] );
  
  xNumese = tonumber( sysparm()[19:3] );  // Numero de l'Unité economique

  alphalst = "ABCDEFGHIJKLMNOPQRSTUVWXYZÃÇÅÄÁÆÈÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÝÞßáãäåæíÉìÂ";
 

  { settings for CAPI }

//  set attributes (RGE_DICT) assisted on;
//  set attributes (RGE_DICT) assisted off (variable (title));

  { set up minimal user bar }
  userbase();
  userbar( show );


postproc
    stop(-1);


PROC RGE_QUEST


preproc
if demode() = add then addmode = 1 endif;
if demode() = modify then addmode = 2 endif;
if demode() = verify then addmode = 3 endif;

  
  if ispartial() then
    advance to getsymbol(savepartial);
  endif;
  
  
postproc
  
  quitter();
  endlevel;
PROC ID1

preproc
  if special(visualvalue($)) then
    $ = xProv;
  endif;
PROC ID2

preproc
  if special(visualvalue($)) then
    $ = xVill;
  endif;
PROC ID3

preproc
  if special(visualvalue($)) then
    $ = xSect;
  endif;
PROC ID4

preproc
  if special(visualvalue($)) then
    $ = xQuart;
  endif;
PROC ID6

preproc
  if xZD <> 0 & (special(visualvalue($)) | visualvalue($) = xZD) then
    $ = xZD;
  endif;
PROC IDAR

preproc
  if addmode | special(visualvalue($)) then
    $ = xInt;
  endif;
PROC ID7

preproc
  if special(visualvalue($)) then
    $ = xNumese;
  endif;

{

preproc
if visualvalue(ID7)>0 then 
	noinput;
else
	numeric xnum v ;
		    xnum=1; 
		    	  
	setfile( FichSaPart,"C:\RDCRGE\Data\ZDNum.dat") ; 
		     if Filesize( FichSaPart ) > 0 then	 
			     while FileRead( FichSaPart, strpart ) do   
			          if tonumber(strpart[1:3]) = ID6 then  		         
			          xnum=tonumber(strpart[5:4])+1;
			          endif ;		       
			      enddo;
	          endif ;
	       
	v=9;
	ID7=xnum;
endif;


postproc
if v=9 then 
	filewrite(FichSaPart, "%03d %04d",ID6,ID7);
	close( FichSaPart ); 
endif;
v=0;
}

PROC SI2D
preproc

if demode() = add then
 	if special(visualvalue ($)) then
 	x = sysdate ();
	  if SI2D = notappl then SI2D = sysdate( "DD" ); endif;
	  if SI2M = notappl then SI2M = sysdate( "MM" );endif;
	  if SI2Y = notappl then SI2Y = sysdate( "YYYY" );endif;
	endif;
endif;

postproc
numeric xdate;
xdate = (((SI2Y *100) +SI2M)*100)+SI2D;
if xdate > sysdate ("DDMMYYYY") then 
errmsg("la date saisie est supérieure à la date du jour, veillez régler la date de la tablette");
stop (1);
endif;
PROC SI2HD

preproc
if demode() = add then
  if special(visualvalue($)) then
    x = systime();
    if SI2HD = notappl then SI2HD = int(x / 10000);endif;
    //if SI2MD = notappl then SI2MD = int(x / 100) % 100;endif;
  endif;
endif;
PROC SI2MD
preproc
if demode() = add then
  if special(visualvalue($)) then
    x = systime();
        if SI2MD = notappl then SI2MD = int(x / 100) % 100;endif;
  endif;
endif;
PROC MOD1_RG_FORM

preproc
setfile(RGEZD,"C:\RDCRGE\Data\Z"+edit("99",ID1)+edit("999",ID2)+edit("999",ID3)+edit("999",ID4)+edit("999",ID6)+edit("9999",IDAR)+".csdb") ;  
	    while loadcase(RGEZD) do
	    	do varying i = 1 until i > ZDPI03
		     if ID7= ZDL01(i) then  
		      nomUE = strip(ZDL02(i));
		      Alt = ZDL04A(i);
		      lat = ZDL04(i);
		      long = ZDL05(i);
		      Entreprise = strip(ZDL02(i));
		      Hemi_UE = strip(ZDL04B(i));
		      AvenueZD = strip(ZDL03(i));
		      numPAR = strip(ZDL03_1(i));
		      
		     endif ;
		     enddo ;
		 enddo;   
		close( RGEZD );
PROC LU9
if LU9=2 then 
	LU9A = "" ;
	skip to LU10 ; 
endif;
PROC LU9A

if length(strip(LU9A)) < 5 then
	errmsg("Veuillez entrer le nom du marché correctement s'il vous plait ! ");
	editnote();
	if length (strip(editnote()))< 10 then
  		errmsg("Justifiez-vous");
    	reenter;
	endif;
endif ;
PROC LU10

if length(strip(LU10)) < 4 then
	errmsg("Préciser la réfernce de l'unité économique !");
	reenter ;
endif;
PROC LU5
 
preproc
clear_labels();
onfocus
rech_Av();

setvalueset(@getsymbol(),codes,labels);
setcapturetype($,1);


postproc
j=0;
do varying j =1 until j>i
 if codes(j) = LU5 then
	LU11=labels(j);
	xLU11 = strip(LU11) ;
	break ;
 endif ;
enddo;
PROC LU11

preproc
numeric v;
v=0;

if strip(LU11)="A saisir" then
	LU11="";
	v=1;
endif;




postproc

if length(strip(LU11))<3 then 
	errmsg("Le nom de la %s semble être incorrect",strip(getlabel(LU11A_VS1,LU11A)));
	reenter;
endif;
if strip(LU11)="A saisir" then
	errmsg("Saisissez le nom de la %s",strip(getlabel(LU11A_VS1,LU11A)));
	reenter;
endif;

//Enregistrer l'avenue dans la base
if v=0 and strip(xLU11)<>strip(LU11) then
	i=1;
	while i=1  do
		errmsg("Vous avez tenté de modifier le nom de %s, veuillez le préciser ! ",strip(getlabel(LU11A_VS1,LU11A)));
		LU11=xLU11;
		editnote();
		if length(strip(editnote()))>= 3 then
		i=0;
		endif;
		
	enddo;	
endif;
if v=1 then
	setfile( FichSaPart,"C:\RDCRGE\Reference\Avenue.dat",append) ;  
	filewrite(FichSaPart, "%02d%03d%03d%03d%03d%04d%s",ID1,ID2,ID3,ID4,ID6,LU5,toupper(strip(LU11)));
	close( FichSaPart ); 
endif;
v=2;
PROC LU11B
if LU11B <> numPAR then 
errmsg("Numéro de parcelle inscrit (%s) est different à celui du dénombrement (%s), vrifier auprès du répondant",strip(LU11B), strip(numPAR))
select("Numéro inscrit correct", continue, "Non, erreur à corrigr", LU11B);
endif;
PROC CG1HE

preproc

if ID1 in 1:5 then $ = "S" ; noinput; endif;
if ID1 in 16:26 then $ = "S" ; noinput; endif;
if ID1 in 7,8,9,12,13,14 then $ = "N" ; noinput; endif;

if ID1 in 6,10,11,15 and (CG1HE = "S") or (CG1HE = "N") then ;
errmsg("Veillez verifié sur le GPS l'hemisphère sur lequel se situe votre ZD") ;
endif;

postproc

if CG1HE = "N" then 
	errmsg("êtes-vous sûr que vous vous trouvez sur l'hémisphère nord ?")
	select("Oui",continue,"Non",CG1HE);
endif;

{onfocus

if demode() = add or CG1HE="" then

		if Getos() >= 20 then 
			gps(open); // sur tablette windows Android
		else
		//	gps(open,3,4800); // sur tablette windows ; COM3, 4800 baud
		gps(open,9600); // sur tablette windows ; COM4, 9600 baud
		endif ;
		
				if gps(read,10) then // lescture du GPS en moins de 5 secondes
				   errmsg("GPS Latitude %f   Longitude %f ",gps(latitude),gps(longitude)) ;
			
							CG3LA  = gps(latitude);
							CG2LO = gps(longitude);
							CG4AL = gps(altitude);
							
							if CG3LA  < 0 then CG1HE = "S"  else  CG1HE = "N" ; endif ;	
							
							noinput; move to SICONS ;
				else
					 errmsg("Pas d'accquisinion de coordonnées GPS " );
				
				endif;

			gps(close);

endif;
}
PROC CG3LAT

preproc 


if demode() = add then
  if special(visualvalue(CG3LAT)) then
	CG3LAT = lat;
	CG2LO = long;
	CG4AL = Alt;
  endif;
endif;

postproc

if CG3LAT > 0 and CG1HE = "S" then 
	errmsg("Vous êtes sur l'hémisphère sud, veuillez renseigner la latittude en commençant par le signe (-)");
	reenter;
endif;
PROC CG2LO

PROC CG4AL
if CG4AL > 5109 then 
reenter CG4AL ;
endif;
PROC LU12

if LU12 = 99 then
editnote();
    if length (strip(editnote()))< 10 then
  		errmsg("Type local incorrect, justifier");
    	reenter;
	endif;
endif;
PROC SICONS
postproc

  if $ <> 1 then
    skip to SI1
  endif; 
PROC RG1

if length(strip(RG1)) < 10 then
	errmsg("Raison non valable, veuilez entrer la raison sociale de l'entreprise");
	editnote();
	if length (strip(editnote()))< 15 then
  		errmsg("Raison non valide, justifier");
    	reenter;
	endif;
endif ;

sav();
PROC RG2

if SICONS = 2 or SICONS =3 then 
skip to SI1 ;
endif;
PROC RG2A1
if RG2A1 = 2 then
	Skip to RG3A1 ;
endif;

PROC RG2B1
if RG2B1 = 2 then
	Skip to RG3A1 ;
endif;
PROC RG3A1
if RG3A1 = 2 then
	Skip to RG4 ;
endif;
PROC RG3A
if special(RG3A) then
	Skip to RG4 ;
endif;
PROC RG4
if length(strip(RG4))> 0 then
		  if pos("@",RG4) in  2: length(strip(RG4))-3 then
		  // bon
		  else
		   errmsg("Adresse mail incorrect ");
		   reenter ;
		  endif;
		  
		  if pos(".",RG4) in  2: length(strip(RG4))-2 then
		  // bon
		  else
		   errmsg("Adresse mail incorrect ");
		   reenter ;
		  endif;
		  
endif;		  
		
PROC RG5
if length(strip(RG5))> 0 then
		  if poschar("WWW.",toupper(RG5)) then
		  // bon
		  else
		   errmsg("Entrer un site web valide");
		   reenter ;
		  endif;
		  
		  {if pos(".",RG5) in  6: length(strip(RG5))-3 then
		  // bon
		  else
		   errmsg("Adresse mail incorrect ");
		   reenter ;
		  endif;}
		  
endif;		  
		
PROC RG6
sav();
PROC RG7
sav();
if RG7 < RG6 then
 errmsg("L'année de démarrage des activités ne peut pas être inferieure à l'année de création") ; 
 reenter RG7 ;
endif;
PROC RG8
sav();
PROC AP1AS

preproc

if length(strip(AP1AS)) > 5 then
noinput ;
endif;


Postproc
if length(strip(AP1AS)) < 10 then
	errmsg("Renseignez bien l'activité principale s'il vous plait!");
	reenter ;
endif ;
PROC AP1F

lib_AP1 = strip(getlabel(AP1F_VS1,AP1F)) ;

if AP1F = "A" or AP1F = "B" or AP1F = "C" or AP1F = "D" or AP1F = "E" or AP1F = "F" or AP1F = "G" or AP1F = "H" or AP1F = "I" or AP1F = "J" then 
errmsg("Êtes-vous sûr que l'entreprise (%s) est dans (%s)", strip(RG1),strip(lib_AP1))
select(" Oui", continue,"Non, à corriger",AP1F);
endif;   

if  AP1F = "K" or AP1F = "L" or AP1F = "M" or AP1F = "N" or AP1F = "P" or AP1F = "Q" or AP1F = "R" or AP1F = "S" or AP1F = "T"  then 
errmsg("Êtes-vous sûr que l'entreprise (%s) est dans (%s)", strip(RG1),strip(lib_AP1))
select(" Oui", continue,"Non, à corriger",AP1F);
endif;
PROC AP1ANAEMA

preproc

if 	AP1F = 	"A"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS1);	 endif;
if 	AP1F = 	"B"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS2);	 endif;
if 	AP1F = 	"C"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS3);	 endif;
if 	AP1F = 	"D"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS4);	 endif;
if 	AP1F = 	"E"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS5);	 endif;
if 	AP1F = 	"F"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS6);	 endif;
if 	AP1F = 	"G"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS7);	 endif;
if 	AP1F = 	"H"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS8);	 endif;
if 	AP1F = 	"I"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS9);	 endif;
if 	AP1F = 	"J"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS10);	 endif;
if 	AP1F = 	"K"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS11);	 endif;
if 	AP1F = 	"L"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS12);	 endif;
if 	AP1F = 	"M"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS13);	 endif;
if 	AP1F = 	"N"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS14);	 endif;
if 	AP1F = 	"P"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS16);	 endif;
if 	AP1F = 	"Q"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS17);	 endif;
if 	AP1F = 	"R"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS18);	 endif;
if 	AP1F = 	"S"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS19);	 endif;
if 	AP1F = 	"T"	then	setvalueset(AP1ANAEMA, AP1ANAEMA_VS20);	 endif;


postproc

//AP1A =strip( getlabel(AP1ANAEMA_vs1, AP1ANAEMA)) ;

if 	AP1F = 	"A"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS1,AP1ANAEMA));	 endif;
if 	AP1F = 	"B"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS2,AP1ANAEMA));	 endif;
if 	AP1F = 	"C"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS3,AP1ANAEMA));	 endif;
if 	AP1F = 	"D"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS4,AP1ANAEMA));	 endif;
if 	AP1F = 	"E"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS5,AP1ANAEMA));	 endif;
if 	AP1F = 	"F"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS6,AP1ANAEMA));	 endif;
if 	AP1F = 	"G"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS7,AP1ANAEMA));	 endif;
if 	AP1F = 	"H"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS8,AP1ANAEMA));	 endif;
if 	AP1F = 	"I"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS9,AP1ANAEMA));	 endif;
if 	AP1F = 	"J"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS10,AP1ANAEMA));	 endif;
if 	AP1F = 	"K"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS11,AP1ANAEMA));	 endif;
if 	AP1F = 	"L"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS12,AP1ANAEMA));	 endif;
if 	AP1F = 	"M"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS13,AP1ANAEMA));	 endif;
if 	AP1F = 	"N"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS14,AP1ANAEMA));	 endif;
if 	AP1F = 	"P"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS16,AP1ANAEMA));	 endif;
if 	AP1F = 	"Q"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS17,AP1ANAEMA));	 endif;
if 	AP1F = 	"R"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS18,AP1ANAEMA));	 endif;
if 	AP1F = 	"S"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS19,AP1ANAEMA));	 endif;
if 	AP1F = 	"T"	then	AP1A=	strip( getlabel(AP1ANAEMA_VS20,AP1ANAEMA));	 endif;

PROC AP1A

if AP1ANAEMA <> 55000 then 
skip to AP2AS1 ;
endif;
PROC AP1BA
sav();
PROC AP2AS1
preproc

if length(strip(AP2AS1)) > 5 then
	noinput ;
endif;

postproc

if length(strip(AP2AS1)) in 1:5 then
	errmsg("Renseignez bien l'activité secondaire s'il vous plait!"); reenter ;
endif ;

if length(strip(AP2AS1)) = 0  then
	skip to AP3 ;
endif ;

PROC AS1F

lib_AS1 = strip(getlabel(AS1F_VS1,AS1F)) ;

if AS1F = "A" or AS1F = "B" or AS1F = "C" or AS1F = "D" or AS1F = "E" or AS1F = "F" or AS1F = "G" or AS1F = "H" or AS1F = "I" or AS1F = "J"  then 
errmsg("Êtes-vous sûr que l'entreprise (%s) est dans (%s)", strip(RG1),strip(lib_AS1))
select(" Oui", continue,"Non, à corriger",AS1F);
endif;   

if  AS1F = "K" or AS1F = "L" or AS1F = "M" or AS1F = "N" or AS1F = "P" or AS1F = "Q" or AS1F = "R" or AS1F = "S" or AS1F = "T" then 
errmsg("Êtes-vous sûr que l'entreprise (%s) est dans (%s)", strip(RG1),strip(lib_AS1))
select(" Oui", continue,"Non, à corriger",AS1F);
endif;
PROC AP2A1NAEMA

preproc

if 	AS1F = 	"A"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS1);	 endif;
if 	AS1F = 	"B"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS2);	 endif;
if 	AS1F = 	"C"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS3);	 endif;
if 	AS1F = 	"D"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS4);	 endif;
if 	AS1F = 	"E"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS5);	 endif;
if 	AS1F = 	"F"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS6);	 endif;
if 	AS1F = 	"G"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS7);	 endif;
if 	AS1F = 	"H"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS8);	 endif;
if 	AS1F = 	"I"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS9);	 endif;
if 	AS1F = 	"J"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS10);	 endif;
if 	AS1F = 	"K"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS11);	 endif;
if 	AS1F = 	"L"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS12);	 endif;
if 	AS1F = 	"M"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS13);	 endif;
if 	AS1F = 	"N"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS14);	 endif;
if 	AS1F = 	"P"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS16);	 endif;
if 	AS1F = 	"Q"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS17);	 endif;
if 	AS1F = 	"R"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS18);	 endif;
if 	AS1F = 	"S"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS19);	 endif;
if 	AS1F = 	"T"	then	setvalueset(AP2A1NAEMA, AP2A1NAEMA_VS20);	 endif;



Postproc

if 	AS1F = 	"A"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS1,AP2A1NAEMA));	 endif;
if 	AS1F = 	"B"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS2,AP2A1NAEMA));	 endif;
if 	AS1F = 	"C"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS3,AP2A1NAEMA));	 endif;
if 	AS1F = 	"D"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS4,AP2A1NAEMA));	 endif;
if 	AS1F = 	"E"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS5,AP2A1NAEMA));	 endif;
if 	AS1F = 	"F"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS6,AP2A1NAEMA));	 endif;
if 	AS1F = 	"G"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS7,AP2A1NAEMA));	 endif;
if 	AS1F = 	"H"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS8,AP2A1NAEMA));	 endif;
if 	AS1F = 	"I"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS9,AP2A1NAEMA));	 endif;
if 	AS1F = 	"J"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS10,AP2A1NAEMA));	 endif;
if 	AS1F = 	"K"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS11,AP2A1NAEMA));	 endif;
if 	AS1F = 	"L"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS12,AP2A1NAEMA));	 endif;
if 	AS1F = 	"M"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS13,AP2A1NAEMA));	 endif;
if 	AS1F = 	"N"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS14,AP2A1NAEMA));	 endif;
if 	AS1F = 	"P"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS16,AP2A1NAEMA));	 endif;
if 	AS1F = 	"Q"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS17,AP2A1NAEMA));	 endif;
if 	AS1F = 	"R"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS18,AP2A1NAEMA));	 endif;
if 	AS1F = 	"S"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS19,AP2A1NAEMA));	 endif;
if 	AS1F = 	"T"	then	AP2A1=	strip( getlabel(AP2A1NAEMA_VS20,AP2A1NAEMA));	 endif;


//AP2A1 =strip( getlabel(AP2A1NAEMA_vs1, AP2A1NAEMA)) ;

if int(AP2A1NAEMA/10) = int(AP1ANAEMA/10) then
errmsg("L'activité secondaire saisie est identique à l'activité principale de l'entreprise");
reenter AP2A1NAEMA 
endif;
PROC AP2A1
if AP2A1NAEMA <> 55000 then 
skip to AP2AS2 ;
endif;
PROC AP2BB1
sav();
PROC AP2AS2

preproc

if length(strip(AP2AS2)) > 5 then
	noinput ;
endif;



Postproc

if length(strip(AP2AS2)) in 1:5 then
	errmsg("Déclaration de la deuxième activité secondaire incorrecte"); reenter ;
endif ;

if length(strip(AP2AS2)) = 0  then
	skip to AP3 ;
endif ;

PROC AS2F

lib_AS2 = strip(getlabel(AS2F_VS1,AS2F)) ;

if AS2F = "A" or AS2F = "B" or AS2F = "C" or AS2F = "D" or AS2F = "E" or AS2F = "F" or AS2F = "G" or AS2F = "H" or AS2F = "I" or AS2F = "J" or AS2F = "K" then 
errmsg("Êtes-vous sûr que l'entreprise (%s) est dans (%s)", strip(RG1),strip(lib_AS2))
select(" Oui", continue,"Non, à corriger",AS2F);
endif;   

if AS2F = "L" or AS2F = "M" or AS2F = "N" or AS2F = "P" or AS2F = "Q" or AS2F = "R" or AS2F = "S" or AS2F = "T"  then 
errmsg("Êtes-vous sûr que l'entreprise (%s) est dans (%s)", strip(RG1),strip(lib_AS2))
select(" Oui", continue,"Non, à corriger",AS2F);
endif;
PROC AP2A2NAEMA
preproc

if 	AS2F = 	"A"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS1);	 endif;
if 	AS2F = 	"B"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS2);	 endif;
if 	AS2F = 	"C"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS3);	 endif;
if 	AS2F = 	"D"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS4);	 endif;
if 	AS2F = 	"E"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS5);	 endif;
if 	AS2F = 	"F"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS6);	 endif;
if 	AS2F = 	"G"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS7);	 endif;
if 	AS2F = 	"H"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS8);	 endif;
if 	AS2F = 	"I"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS9);	 endif;
if 	AS2F = 	"J"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS10);	 endif;
if 	AS2F = 	"K"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS11);	 endif;
if 	AS2F = 	"L"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS12);	 endif;
if 	AS2F = 	"M"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS13);	 endif;
if 	AS2F = 	"N"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS14);	 endif;
if 	AS2F = 	"P"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS16);	 endif;
if 	AS2F = 	"Q"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS17);	 endif;
if 	AS2F = 	"R"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS18);	 endif;
if 	AS2F = 	"S"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS19);	 endif;
if 	AS2F = 	"T"	then	setvalueset(AP2A2NAEMA, AP2A2NAEMA_VS20);	 endif;


Postproc

if 	AS2F = 	"A"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS1,AP2A2NAEMA));	 endif;
if 	AS2F = 	"B"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS2,AP2A2NAEMA));	 endif;
if 	AS2F = 	"C"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS3,AP2A2NAEMA));	 endif;
if 	AS2F = 	"D"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS4,AP2A2NAEMA));	 endif;
if 	AS2F = 	"E"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS5,AP2A2NAEMA));	 endif;
if 	AS2F = 	"F"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS6,AP2A2NAEMA));	 endif;
if 	AS2F = 	"G"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS7,AP2A2NAEMA));	 endif;
if 	AS2F = 	"H"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS8,AP2A2NAEMA));	 endif;
if 	AS2F = 	"I"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS9,AP2A2NAEMA));	 endif;
if 	AS2F = 	"J"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS10,AP2A2NAEMA));	 endif;
if 	AS2F = 	"K"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS11,AP2A2NAEMA));	 endif;
if 	AS2F = 	"L"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS12,AP2A2NAEMA));	 endif;
if 	AS2F = 	"M"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS13,AP2A2NAEMA));	 endif;
if 	AS2F = 	"N"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS14,AP2A2NAEMA));	 endif;
if 	AS2F = 	"P"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS16,AP2A2NAEMA));	 endif;
if 	AS2F = 	"Q"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS17,AP2A2NAEMA));	 endif;
if 	AS2F = 	"R"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS18,AP2A2NAEMA));	 endif;
if 	AS2F = 	"S"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS19,AP2A2NAEMA));	 endif;
if 	AS2F = 	"T"	then	AP2A2=	strip( getlabel(AP2A2NAEMA_VS20,AP2A2NAEMA));	 endif;



//AP2A2 =strip( getlabel(AP2A2NAEMA_vs1, AP2A2NAEMA)) ;

if int(AP2A2NAEMA/10) = int(AP1ANAEMA/10) or int(AP2A2NAEMA/10) = int(AP2A1NAEMA/10) then
errmsg("La dexième activité secondaire saisie est identique à l'une des activité déjà renseignée");
reenter AP2A2NAEMA
endif;

PROC AP2A2

if AP2A2NAEMA <> 55000 then 
skip to AP3 ;
endif;
PROC AP2BA2
sav();
PROC AP3
if AP3 < 4 then
errmsg(" Confirme le nombre de jour de travail par semaine qui est %d, êtes-vous sûr ?", AP3)
select("Je confirme",continue, "Erreur à corriger", AP3);
endif;
sav();
PROC AP4

if AP4 < 8 then
	errmsg("Le nombre d'heures de travail dans cette entreprise est %d, confirmez-vous cela ?", AP4)
	select("Je confirme",continue,"Erreur à corriger",AP4);
endif;
sav();


PROC AP5_4


if AP5_4=0 then 
	skip to AP5_5 
endif;
PROC AP5_4B1

if AP5_4B1 > AP5_4 then 
errmsg("l'effectif de femmes saisi (%d) ne peut pas être supérieur à l'effectif total (RDC) (%d)", AP5_4B1,AP5_4 );
reenter AP5_4B1;
endif;


PROC AP5_4A1

if AP5_4A1 > AP5_4 then 
errmsg("le nombre d'hommes saisi(%d) ne peut pas être supérieur à l'effectif total (RDC) (%d)",AP5_4A1, AP5_4);
reenter AP5_4A1;
endif;


y= AP5_4A1+AP5_4B1;

if y <> AP5_4 then 
errmsg("l'effectif total RDC (%d) est incorrect. Veuillez corriger svp !" , AP5_4)
select("Total", AP5_4, "Hommes", AP5_4A1, "Femmes", AP5_4B1);
endif;
PROC AP5_5

if AP5_5=0 then 
	skip to AP5_6
endif;
PROC AP5_5B1

if AP5_5B1 > AP5_5 then 
errmsg("l'effectif de femmes saisi (%d) ne peut pas être supérieur à l'effectif total (pays li;itrophes) (%d)", AP5_5B1,AP5_5 );
reenter AP5_5B1;
endif;
PROC AP5_5A1

if AP5_5A1 > AP5_5 then 
errmsg("le nombre d'hommes saisi(%d) ne peut pas être supérieur à l'effectif total (RDC) (%d)",AP5_5A1,AP5_5 );
reenter AP5_5A1;
endif;

y= AP5_5A1+AP5_5B1;

if y <> AP5_5 then 
errmsg("l'effectif total (pays limitrophes) (%d) est incorrect. Veuillez corriger svp !" , AP5_5)
select("Total", AP5_5, "Hommes", AP5_5A1, "Femmes", AP5_5B1);
endif;
PROC AP5_6

if AP5_6=0 then 
	skip to AP5_7
endif;
PROC AP5_6B1

if AP5_6B1 > AP5_6 then 
errmsg("l'effectif de femmes saisi (%d) ne peut pas être supérieur à l'effectif total (autres pays africains) (%d)",AP5_6B1,AP5_6 );
reenter AP5_6B1;
endif;


sav();

PROC AP5_6A1

if AP5_6A1 > AP5_6 then 
errmsg("le nombre d'hommes saisi(%d) ne peut pas être supérieur à l'effectif total (autres pays africains) (%d)",AP5_6A1, AP5_6);
reenter AP5_6A1;
endif;


y= AP5_6A1+AP5_6B1;

if y <> AP5_6 then 
errmsg("l'effectif total (autres pays africains) (%d) est incorrect. Veuillez corriger svp !" , AP5_6)
select("Total", AP5_6, "Hommes", AP5_6A1, "Femmes", AP5_6B1);
endif;
PROC AP5_7

if AP5_7=0 then 
	skip to AP5_8
endif;
PROC AP5_7B1

if AP5_7B1 > AP5_7 then 
errmsg("l'effectif de femmes saisi (%d) ne peut pas être supérieur à l'effectif total (autres continents) (%d)",AP5_7B1,AP5_7 );
reenter AP5_7B1;
endif;

PROC AP5_7A1

if AP5_7A1 > AP5_7 then 
errmsg("le nombre d'hommes saisi(%d) ne peut pas être supérieur à l'effectif total (autres continents) (%d)",AP5_7A1,AP5_7 );
reenter AP5_7A1;
endif;


y= AP5_7A1+AP5_7B1;

if y <> AP5_7 then 
errmsg("l'effectif total (autres continents) (%d) est incorrect. Veuillez corriger svp !" , AP5_7 )
select("Total", AP5_7, "Hommes", AP5_7A1, "Femmes", AP5_7B1);
endif;

sav();
PROC AP5_8

y=AP5_4 + AP5_5 + AP5_6 + AP5_7;


if y <> AP5_8 then 
errmsg("L'effectif total (d'ensemble) (%d) est different de la somme d'effectifs RDC (%d), pays limitrophes (%d), autres africains (%d), autres nationalités (%d) ",AP5_8,AP5_4,AP5_5,AP5_6,AP5_7);
reenter AP5_4;
endif; 

sav();

PROC AP6

sav();
PROC EP1A1

if $=2 then skip to EP1B1 endif 
PROC EP1A2
sav();
PROC EP1B1
if $=2 then skip to EP1C1 endif 
PROC EP1B2
sav();
PROC EP1C1
if $=2 then skip to EP1D1 endif

PROC EP1C2
sav();
PROC EP1D1

if $=2 then skip to EP2 endif 
PROC EP1D2

postproc
 
if AP6 = 3 then
skip to CD1 
endif;
PROC EP2
sav();
PROC EP3
postproc

if AP6 = 1 then
skip to EP5A  
endif;




PROC EP4_4 

if ( EP4_4 =0 and AP5_4 > 0 ) or (EP4_4 < AP5_4 ) then
errmsg("Effectif total des congolais (RDC) est erroné,  dans l'une des UE l'effectif RDC est (%d)", AP5_4);
reenter EP4_4
endif;

if EP4_4=0 then 
	skip to EP4_5 
endif;


PROC EP4_4B

if EP4_4B = 0 and AP5_4B1 > 0 or (EP4_4B < AP5_4B1 )  then
errmsg("l'effectif de femmes (siège et agences RDC) (%d) est érroné car l'effectif femme (RDC) d'une seule UE est (%d)",EP4_4B,AP5_4B1);
reenter EP4_4B;
endif;


if EP4_4B > EP4_4 then 
errmsg("l'effectif de femmes (siège et agences) (%d) ne peut pas être supérieur à l'effectif total (RDC) (%d)",EP4_4B,EP4_4 );
reenter EP4_4B;
endif;


if EP4_4B < AP5_4B1 then 
errmsg("l'effectif de femmes (siège et agences RDC) (%d) ne peut pas être inferieur à l'effectif femme (RDC) (%d) d'une seule UE",EP4_4B,AP5_4B1);
reenter EP4_4B;
endif;

PROC EP4_4A

y= EP4_4A+EP4_4B;

if EP4_4A = 0 and AP5_4A1 > 0 or (EP4_4A < AP5_4A1 ) then
errmsg("l'effectif d'hommes (siège et agences RDC) (%d) est érroné car l'effectif homme (RDC) d'une seule UE est (%d)",EP4_4A,AP5_4A1);
reenter EP4_4A;
endif;

if EP4_4A > EP4_4 then 
errmsg("le nombre d'hommes saisi (siège et agences)(%d) ne peut pas être supérieur à l'effectif total (RDC) (%d)", EP4_4A, EP4_4 );
reenter EP4_4A;
endif;

if y <> EP4_4 then 
errmsg("l'effectif total (siège et agences)(RDC) (%d) est incorrect. Veuillez corriger svp !" , EP4_4)
select("Total", EP4_4, "Hommes", EP4_4A, "Femmes", EP4_4B);
endif;



if y < AP5_4 then
errmsg("L'effectif total hommes(siège et agences RDC) (%d) ne peut pas être inférieur à l'effectif hommes d'une seule UE (RDC)(%d) ",EP4_4A, AP5_4);
endif;

sav();
PROC EP4_5

if EP4_5 = 0 and AP5_5 > 0 or (EP4_5 < AP5_5 ) then
errmsg("Effectif total (Pays limitrophes) est erroné,  dans l'une des agences l'effectif (Pays limitrophes) est (%d)", AP5_5);
reenter EP4_5;
endif;

if EP4_5=0 then 
	skip to EP4_6
endif;

sav();
PROC EP4_5B


if EP4_5B = 0 and AP5_5B1 > 0 or (EP4_5B < AP5_5B1 ) then 
errmsg("l'effectif de femmes (siège et agences pays limitrophes)  (%d) est érroné car l'effectif femme (pays limitrophes) d'une seule UE est (%d)",EP4_5B,AP5_5B1);
reenter EP4_5B;
endif; 

if EP4_5B > EP4_5 then 
errmsg("le nombre de femmes ne peut pas être supérieur à l'effectif total (pays limitrophes)");
reenter EP4_5B;
endif;


if EP4_4B < AP5_5B1 then 
errmsg("l'effectif de femmes (siège et agences pays limitrophes) (%d) ne peut pas être inferieur à l'effectif femme (pays limitrophes) (%d) d'une seule UE",EP4_4B,AP5_5B1);
reenter EP4_4B;
endif;

PROC EP4_5A

if EP4_5A = 0 and AP5_5A1 > 0 or (EP4_5A < AP5_5A1 ) then
errmsg("l'effectif d'hommes (siège et agences (pays limitrophes)) (%d) est érroné car l'effectif homme (pays limitrophes) d'une seule UE est (%d)",EP4_5A,AP5_5A1);
reenter EP4_5A;
endif;

if EP4_5A > EP4_5 then 
errmsg("le nombre d'hommes ne peut pas être supérieur à l'effectif total (pays limitrophes)");
reenter EP4_5A;
endif;


y= EP4_5A+EP4_5B;

if y <> EP4_5 then 
errmsg("l'effectif total (siège et agences)(pays limitrophes) (%d) est incorrect. Veuillez corriger svp !" , EP4_5)
select("Total", EP4_5, "Hommes", EP4_5A, "Femmes", EP4_5B);
endif;

PROC EP4_6

if EP4_6 = 0 and AP5_6 > 0 or (EP4_6 < AP5_6 ) then
errmsg("Effectif total (Autres Pays Africain) est erroné,  dans l'une des agences l'effectif (Autres Pays Africain) est (%d)", AP5_6);
reenter EP4_6;
endif;


if EP4_6=0 then 
	skip to EP4_7
endif;


sav();
PROC EP4_6B

if EP4_6B = 0 and AP5_6B1 > 0 or (EP4_6B < AP5_6B1 ) then 
errmsg("l'effectif de femmes (siège et agences (Autres Pays Africain))  (%d) est érroné car l'effectif femme (Autres Pays Africain) d'une seule UE est (%d)",EP4_6B,AP5_6B1);
reenter EP4_6B;
endif;

if EP4_6B > EP4_6 then 
errmsg("le nombre de femmes ne peut pas être supérieur à l'effectif total (autres pays africains)");
reenter EP4_5B;
endif;


PROC EP4_6A

if EP4_6A = 0 and AP5_6A1 > 0 or (EP4_6A < AP5_6A1 ) then
errmsg("l'effectif d'hommes (siège et agences (autres pays africains)) (%d) est érroné car l'effectif homme (autres pays africains) d'une seule UE est (%d)",EP4_6A,AP5_6A1);
reenter EP4_6A;
endif;


if EP4_6A > EP4_6 then 
errmsg("le nombre d'hommes ne peut pas être supérieur à l'effectif total (autres pays africains)");
reenter EP4_6A;
endif;


y= EP4_6A+EP4_6B;

if y <> EP4_6 then 
errmsg("l'effectif total hommes et femmes en provenance d'autres pays africains (%d) est incorrect. Corriger effectif d'autres pays africains" , EP4_6)
select("Total", EP4_6, "Hommes", EP4_6A, "Femmes", EP4_6B);
endif;

sav();
PROC EP4_7

if EP4_7 = 0 and AP5_7 > 0 or (EP4_7 < AP5_7 ) then
errmsg("Effectif total (Autres Continent) est erroné,  dans l'une des agences l'effectif (Autres Continent) est (%d)", AP5_7);
reenter EP4_7;
endif;

if EP4_7=0 then 
	skip to EP4_8
endif;



sav();
PROC EP4_7B


if EP4_7B = 0 and AP5_7B1 > 0 or (EP4_7B < AP5_7B1 ) then 
errmsg("l'effectif de femmes (siège et agences (autres continents))  (%d) est érroné car l'effectif femme (autres continents) d'une seule UE est (%d)",EP4_7B,AP5_7B1);
reenter EP4_7B;
endif;

if EP4_7B > EP4_7 then 
errmsg("le nombre d'hommes ne peut pas être supérieur à l'effectif total (autres continents)");
reenter EP4_7B;
endif;

PROC EP4_7A

if EP4_7A = 0 and AP5_7A1 > 0 or (EP4_7A < AP5_7A1 ) then
errmsg("l'effectif d'hommes (siège et agences (autres continents)) (%d) est érroné car l'effectif homme (autres continents) d'une seule UE est (%d)",EP4_7A,AP5_7A1);
reenter EP4_7A;
endif;

if EP4_7A > EP4_7 then 
errmsg("le nombre d'hommes ne peut pas être supérieur à l'effectif total (autres continents)");
reenter EP4_7A;
endif;



y= EP4_7A+EP4_7B;

if y <> EP4_7 then 
errmsg("l'effectif total hommes et femmes en provenance d'autres continents (%d) est incorrect. Corriger effectif (autres continents)" , EP4_7)
select("Total", EP4_7, "Hommes", EP4_7A, "Femmes", EP4_7B);
endif;

sav();
PROC EP4_8

y=EP4_4 + EP4_5 + EP4_6 + EP4_7;

if y <> EP4_8 then 
errmsg("L'effectif total (d'ensemble) (%d) est different de la somme d'effectifs RDC (%d), pays limitrophes (%d), autres africains (%d), autres nationalités (%d) ",EP4_8,EP4_4,EP4_5,EP4_6,EP4_7);
reenter EP4_4;
endif; 


if EP4_8 < AP5_8  then
	errmsg(" Effectit total incorrect !!!" );
	reenter EP4_4 ;
endif;


sav();

PROC EP5A
if EP5A = 2 then
	skip to EP5
endif;
PROC EP5

preproc

if EP5A = 1 then
EP5 = EP5B*1622.52;noinput;
endif;

sav();
PROC EP6_1
sav();
PROC EP6_2
sav();
PROC EP6_3
sav();
PROC EP6_4

if EP6_1 +  EP6_2 +  EP6_3 +  EP6_4 <> 100 then 
	errmsg("Répartition en % erronnée   total %d,", EP6_1 +  EP6_2 +  EP6_3 +  EP6_4 ) ;
	reenter EP6_1 ;	
endif;

sav();
PROC EP7_1
sav();
PROC EP7_2

if EP7_1 +  EP7_2 <> 100 then 
	errmsg("Répartition en % erronnée   total %d", EP7_1 +  EP7_2 ) ;
reenter EP7_2 ;	
endif;

sav();
PROC CA1

//(Si 1 ou 2 à la question CA1, poursuivre avec CA2 ; si non, allez à CA3)

if !($ in 1,2) then 
   skip to CA3_1;
endif;

if CA1 = 2 then
errmsg("Êtes-vous sûr que l'entreprise %s tient une comptabilité autre que OHADA ?",strip(RG1))
select("Oui, je suis sûr ", continue, "Non, erreur", CA1);
endif; 
PROC CA2A
if CA2A = 2 then
	skip to CA2
endif;
PROC CA2

preproc

if CA2A = 1 then
CA2 = CA2B*1622.52;noinput;
endif;

postproc

// (Allez à la question CD1)
skip to CD1;

sav();
PROC CA3_1
sav();
PROC CA3_4
sav();
PROC CA3_7
sav();
PROC CA3_10
sav();
PROC CA3_12
sav();
PROC CA4A
if CA4A = 2 then
	skip to CA4
endif;
PROC CA4

preproc

if CA4A = 1 then
CA4 = CA4B*1622.52;noinput;
endif;
PROC CA5A
if CA5A = 2 then
	skip to CA5
endif;
PROC CA5

preproc

if CA5A = 1 then
CA5 = CA5B*1622.52;noinput;
endif;

PROC CA6A
if CA2A = 2 then
	skip to CA6
endif;
PROC CA6

preproc

if CA6A = 1 then
CA6 = CA6B*1622.52;noinput;
endif;

postproc

if CA6 < CA5 then
	errmsg("La recette maximale  inférieur à la recette moyenne  ") ;
	reenter ;
endif;


if CA6 < CA4 then
	errmsg("La recette maximale  inférieur à la recette minimale  ") ;
	reenter ;
endif;

sav();
PROC CD1
sav();
PROC CD2

if CD2 < 15 then
errmsg("Le dirigeant de l'entreprise à l'âge de %d , êtes-vous sûr ?",CD2)
select("Oui, je suis sûr ", continue, "Non, erreur", CD2);
endif; 

sav();
PROC CD3
sav();
PROC CD4
sav();
PROC CD5
sav();
PROC CD6
sav();
PROC SI1
savepartial();
PROC SI2HF
preproc
if demode() = add then
  if special(visualvalue($)) then
    x = systime();
    if SI2HF = notappl then SI2HF = int(x / 10000);endif;
    if SI2MF = notappl then SI2MF = int(x / 100) % 100;endif;
  endif;
endif;  
PROC RGFIN

preproc
$ = 3;

postproc

if $ = 1 then 
	errmsg(" Vous pouvez remonter ");
	reenter RG1 ;
	errmsg(" Vous êtes en mode révisiter ")	
endif;

if $ = 2 then editnote() endif;

$ = 3 ;
