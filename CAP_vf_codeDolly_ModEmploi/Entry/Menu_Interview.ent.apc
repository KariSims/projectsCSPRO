{Application 'MENU_INTERVIEW' logic file generated by CSPro}
PROC GLOBAL
//Déclaration des variables

string workDrive, repdrop,strpart,Name_rech, code;  
numeric t,i,j,x,e,addmode,reqst,gx;
array codes(50) ;
array alpha(30) labels(50);


//Déclaration des fonctions

function runQuest_Menage()     
	pff pffMenage;
	pffMenage.load(pathname(application) + "./CAPHH.pff");     
	pffMenage.setproperty("key",IM01); //concatène toutes les vars d'identifications
	pffMenage.setproperty("REGION_M",edit("99",REGION_M)); //On stocke les valeurs des identifs du Menu
	pffMenage.setproperty("DEPART_M",edit("99",DEPART_M));
	pffMenage.setproperty("DR_M",edit("99",DR_M));
	pffMenage.setproperty("LOCALIT_M",edit("9999",LOCALIT_M));
	pffMenage.setproperty("ILOT_M",edit("9999",ILOT_M));
	pffMenage.setproperty("MENAGE",edit("9999",MENAGE_M));
	pffMenage.exec();
end;
function runQuest_Individu()     
	pff pffMenage;
	pffMenage.load(pathname(application) + "./CAPIND.pff");     
	pffMenage.setproperty("key",IM01);
	pffMenage.setproperty("REGION_M",edit("99",REGION_M));
	pffMenage.setproperty("DEPART_M",edit("99",DEPART_M));
	pffMenage.setproperty("LOCALIT_M",edit("9999",LOCALIT_M));
	pffMenage.setproperty("ILOT_M",edit("9999",ILOT_M));
	pffMenage.setproperty("MENAGE",edit("9999",MENAGE_M));
	pffMenage.exec();
end;

function clear_labels()
	do i = 1 while i <= 50
	  codes(i) = notappl;
	  labels(i) = "";
	enddo;
end;

Function rech_depart()

	open(DICT_DR_DICT);

		DICT_DR_ID = 1;

	reqst = loadcase(DICT_DR_DICT,DICT_DR_ID);

			j = 1;

			do varying i=1 until i> 96
			numeric cl=i+1;
				if REGION_M = REG_ID(i) then
					if DEPART_ID(cl) <> DEPART_ID(i) then
						labels(j)=strip(NOM_DEPART(i));
						codes(j)=DEPART_ID(i);
							j = j + 1;
					endif;
				endif;
			enddo;
	close (DICT_DR_DICT);
end;

Function rech_DR()

	open(DICT_DR_DICT);

		DICT_DR_ID = 1;

	reqst = loadcase(DICT_DR_DICT,DICT_DR_ID);

			j = 1;

			do varying i=1 until i> 96
			numeric cl=i+1;
				if REGION_M = REG_ID(i) & DEPART_M = DEPART_ID(i) then
					if DR_ID(cl)<>DR_ID(i) then
						labels(j)="DR_M"+" "+"N°_"+edit("9999",DR_ID(i));
						codes(j)=DR_ID(i);
							j = j + 1;
					endif;
				endif;
			enddo;
	close (DICT_DR_DICT);
end;

Function rech_localite()

	open(DICT_DR_DICT);

		DICT_DR_ID = 1;

	reqst = loadcase(DICT_DR_DICT,DICT_DR_ID);

			j = 1;

			do varying i=1 until i> 96
			numeric cl=i+1;
				if REGION_M = REG_ID(i) & DEPART_M = DEPART_ID(i) & DR_M = DR_ID(i) then
					if LOCALIT_ID(cl)<>LOCALIT_ID(i) then
						labels(j)="Localité"+" "+"N°_"+edit("9999",LOCALIT_ID(i));
						codes(j)=LOCALIT_ID(i);
							j = j + 1;
					endif;
				endif;
			enddo;
	close (DICT_DR_DICT);
end;

Function rech_quart()

	open(DICT_DR_DICT);

		DICT_DR_ID = 1;

	reqst = loadcase(DICT_DR_DICT,DICT_DR_ID);

			j = 1;

			do varying i=1 until i> 96
			numeric cl=i+1;
				if REGION_M = REG_ID(i) & DEPART_M = DEPART_ID(i) & DR_M = DR_ID(i) & LOCALIT_M = LOCALIT_ID(i) then
					if QUART_ID(cl)<>QUART_ID(i) then
						labels(j)=strip(NOM_QUART(i));
						codes(j)=QUART_ID(i);
							j = j + 1;
					endif;
				endif;
			enddo;
	close (DICT_DR_DICT);
end;

Function rech_ilot()

	open(DICT_DR_DICT);

		DICT_DR_ID = 1;

	reqst = loadcase(DICT_DR_DICT,DICT_DR_ID);

			j = 1;

			do varying i=1 until i> 96
			numeric cl=i+1;
				if REGION_M = REG_ID(i) & DEPART_M = DEPART_ID(i) & DR_M = DR_ID(i) & LOCALIT_M = LOCALIT_ID(i) & QUART_M = QUART_ID(i) then
					if N_ILOT_ID(cl)<>N_ILOT_ID(i) then
						labels(j)="Ilot"+" "+"N°_"+edit("9999",N_ILOT_ID(i));
						codes(j)=N_ILOT_ID(i);
							j = j + 1;
					endif;
				endif;
			enddo;
	close (DICT_DR_DICT);

end;

PROC MENU_FF

PROC REGION_M

preproc
// Vérifiez s'il y a un code de login existant et le reaffecté
if loadsetting("REGION_M") <> "" then
   x=errmsg("Êtes-vous dans la même zone que précédemment?")  
	select("OUI,Même zone",continue,"Non,changer de zone",continue);

	if x=1 then 
		REGION_M = tonumber(loadsetting("REGION_M"));
		noinput;
	elseif x=2 then savesetting("REGION_M", "");	endif;

endif; 

postproc
// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting("REGION_M", maketext("%v", REGION_M));
PROC DEPART_M
preproc
// Vérifiez s'il y a un code de login existant
if x=1 & loadsetting("DEPART_M") <> "" then 
	DEPART_M = tonumber(loadsetting("DEPART_M"));	  
	noinput;
elseif x=2 then
	savesetting("DEPART_M", "");
endif;

clear_labels();

onfocus
if special(DEPART_M) then
	rech_depart();
	
	setvalueset(@getsymbol(),codes,labels);
	setcapturetype($,3);
endif;

postproc
// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting("DEPART_M", maketext("%v", DEPART_M));
PROC MILIEU_DE_RESID_M
preproc
// Vérifiez s'il y a un code de login existant
if x=1 & loadsetting("MILIEU_DE_RESID_M") <> "" then
	MILIEU_DE_RESID_M = tonumber(loadsetting("MILIEU_DE_RESID_M"));   
	noinput;
elseif x=2 then
	savesetting("MILIEU_DE_RESID_M", "");
endif; 

postproc
// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting("MILIEU_DE_RESID_M", maketext("%v", MILIEU_DE_RESID_M));
PROC DR_M
preproc

// Vérifiez s'il y a un code de login existant
if x=1 & loadsetting("DR_M") <> "" then
	DR_M = tonumber(loadsetting("DR_M"));    
	noinput;
elseif x=2 then
	savesetting("DR_M", "");
endif; 

clear_labels();

onfocus
if special(DR_M) then
	rech_DR();
	
	setvalueset(@getsymbol(),codes,labels);
	setcapturetype($,3);
endif;

postproc
// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting("DR_M", maketext("%v", DR_M));
PROC LOCALIT_M
preproc
// Vérifiez s'il y a un code de login existant
if x=1 & loadsetting("LOCALIT_M") <> "" then
	LOCALIT_M = tonumber(loadsetting("LOCALIT_M"));    
	noinput;
elseif x=2 then
	savesetting("LOCALIT_M", "");
endif; 
clear_labels();

onfocus
if special(LOCALIT_M) then
	rech_localite();
	
	setvalueset(@getsymbol(),codes,labels);
	setcapturetype($,3);	
endif;

postproc
// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting("LOCALIT_M", maketext("%v", LOCALIT_M));
PROC QUART_M
preproc
// Vérifiez s'il y a un code de login existant
if x=1 & loadsetting("QUART_M") <> "" then
	QUART_M = tonumber(loadsetting("QUART_M"));    
	noinput;
elseif x=2 then
	savesetting("QUART_M", "");
endif;
clear_labels();

onfocus
if special(QUART_M) then
	rech_quart();
	
	setvalueset(@getsymbol(),codes,labels);
	setcapturetype($,3);
endif;

postproc
// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting("QUART_M", maketext("%v", QUART_M));
PROC ILOT_M
preproc
// Vérifiez s'il y a un code de login existant
{if loadsetting("ILOT_M") <> "" then    
	ILOT_M = tonumber(loadsetting("ILOT_M"));
	noinput;
endif;} 
clear_labels();

onfocus

if special(ILOT_M) then
	rech_ilot();
	
	setvalueset(@getsymbol(),codes,labels);
	setcapturetype($,3);
endif;
PROC MENAGE_M

postproc

setfont(ErrMsg,"Arial",50,bold);
if not $ in 1:10 then
  errmsg("le numero des menages vont de 1 à 10 ");
  reenter;
endif;
PROC IM01
preproc

code =maketext("%v%v%v%v%v%v%v%v%v", REGION_M, DEPART_M, MILIEU_DE_RESID_M, DR_M, LOCALIT_M, QUART_M, ILOT_M, GRAP_M, MENAGE_M);
IM01=code;
PROC IM02
onfocus 
// Effacer le choix précédent 
	$ = notappl; 
setcapturetype(IM02,3);

postproc // Gère le choix de menu 
	if $ = 1 then     
		runQuest_Menage() ;
	
	elseif $ = 2 then 
		runQuest_Individu() ;
		
	elseif $ = 3 then 
	// connect to Dropbox
		if syncconnect(Dropbox)=1 then

			// send the latest cases to Dropbox
			 syncdata(PUT,QUESTIONNAIRE_MENAGE_DICT);
			 syncdata(PUT,QUESTIONNAIRE_INDIVIDU_DICT);
			 syncdisconnect();

		endif;
		
	elseif $ = 4 then
	// Supprimer login stocké dans les paramètres
	savesetting("REGION_M", "");
	savesetting("DEPART_M", "");
	
	// Quitter     
		stop(1); 
	endif; 
 
	// Afficher à nouveau le menu de l'Interviewer 
	reenter;
