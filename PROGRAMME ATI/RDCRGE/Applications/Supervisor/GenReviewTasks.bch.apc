{Application 'GENREVIEWTASKS' logic file generated by CSPro}
PROC GLOBAL

  string dataDir, LibTrouve, fichcarc, strpart ;
  array string delTasks(999, 2); // tableau qui détient l'ID des tâches et l'ID du destinataire pour les tâches déléguées
  numeric delTasksNum = 0, TROUVE, i, t, k = 1, Nteam;
  string tID;
	  
  array liste(99);

// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// Définition d'une valeur de variable pour la tâche actuellement chargée
  function setTaskVar(string varName, string varValue)
    // vérifie d'abord si la variable est déjà configurée
    do i = 1 while i <= maxocc(TASKS.TASK_VARIABLES) by 1
      if toupper(strip(varName)) = toupper(strip(TASK_VARNAME(i))) then
	    TASK_VARVAL(i) = varValue;
	    exit;
	  endif;
    enddo;

    // ajoutant une nouvelle variable si, dans le cas où elle n'a pas été configurée
    do i = 1 while i <= maxocc(TASKS.TASK_VARIABLES) by 1
	  if length(strip(TASK_VARNAME(i))) = 0 then
	    TASK_VARNAME(i) = strip(varName);
	    TASK_VARVAL(i) = strip(varValue);
	    break;
	  endif;
    enddo;
  end;

// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// Obtient la valeur de la variable en utilisant le nom de la variable pour la tâche actuellement chargée
  function string getTaskVar(string varName)
    
      do i = 1 while i <= maxocc(TASKS.TASK_VARIABLES)
      if length(strip(TASK_VARNAME(i))) = 0 then
	    break;
	  endif;
      if toupper(strip(varName)) = toupper(strip(TASK_VARNAME(i))) then
	    getTaskVar = strip(TASK_VARVAL(i));
	    break;
  	  endif;
    enddo;
  end;

// ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 function EtatEse(xPROV, xVIL, xSEC, xQRT, xZD, xAR, xUE)
    
    numeric found = 1 ;
    open(RGE_DICT);
	
	while loadcase(RGE_DICT) do	
		
		if ID1=xPROV and ID2=xVIL and ID3=xSEC and ID4=xQRT and ID6=xZD and IDAR = xAR and ID7 = xUE and RGFIN in 1:4 then 
				found = 3;
				break;
		elseif ID1=xPROV and ID2=xVIL and ID3=xSEC and ID4=xQRT and ID6=xZD and IDAR = xAR and ID7 = xUE and not(RGFIN in 1:4) then
				found = 2;
				break;
		endif;
	enddo;	
	close(RGE_DICT);
	                      
    TROUVE = found ;
end ; 


//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  
  
PROC RGEZD_FF


PROC ZD

	open(TASKS);
	numeric interv;
 	i = 1;
			     	
						setfile(USERS_DICT,"C:\RDCRGE\Reference\Teams.dat");
						open(USERS_DICT);
						while loadcase(USERS_DICT) do
						if UNUMBER = ZDINT then
							  
							  TASK_ID = getGuid();
							  TASK_TEMPLATENAME = "zd_int";
							  TASK_LABEL = "Entreprises Récensées par " + strip(UNAME) + "<br>" ; //nab
							  					  					  
							  setTaskVar("result", edit("Z9", 1));
							  setTaskVar("sresult", "Non encore commencée");
							    
							  if ZDPI10DM >= 0 and ZDPI05 = notappl then
							    	 TASK_STATUS = 2;
								    setTaskVar("result", edit("Z9", 2));
								    setTaskVar("sresult", "En cours ");
							  elseif ZDPI05 > 0 then
							       TASK_STATUS = 3;
								    setTaskVar("result", edit("Z9", 3));
								    setTaskVar("sresult", "Terminée");
							  else
									TASK_STATUS = 1;
									setTaskVar("result", edit("Z9", 1));
									setTaskVar("sresult", "Non encore commencée");    
							  endif;
							  
							  TASK_PARENTID = "";
							  
							  setTaskVar("ZDnum", edit("999", ZD1));
							  setTaskVar("address", strip(ZDPI06));
							  setTaskVar("NumAR", edit("9999", ZDINT));
							    
							  TASK_DUMMY = 0;
							  
							   writecase(TASKS);
							   
								tID = TASK_ID;
								
								for i in ZDLIST_EDT do									
										if length(strip(ZDL02(i))) > 0 and ZDL07(i) >= 0 then										
												TASK_ID = GetGuid();
												TASK_TEMPLATENAME = "ese_int";
												TASK_LABEL = maketext("%d.",ZDL01(i)) + " Entreprise " + strip(ZDL02(i)); //!T       
												//task variables							
												EtatEse(ZD01,ZD02,ZD03,ZD04,ZD1,ZDINT,ZDL01(i)) ;
												
												TASK_STATUS = TROUVE ;
												TASK_PARENTID = tID; 
												TASK_NUMAR = ZDINT;
												TASK_NUMESE = ZDL01(i);
												setTaskVar("result", edit("Z9", TROUVE));
												setTaskVar("sresult", LibTrouve);
												TASK_DUMMY = 0;												
												writecase(TASKS);													
										endif;  
  								enddo;
  							endif;
							enddo;
							close(USERS_DICT);
close(TASKS); 
					
