{Application 'DENOMBREMENT' logic file generated by CSPro}
PROC GLOBAL

numeric i,x,j;

PROC DENOMBREMENT_FF

PROC NOM_ENUMERATEUR
preproc
// Vérifiez s'il y a un code de login existant et le reaffecté
if loadsetting("NOM_ENUMERATEUR") <> "" then    
	NOM_ENUMERATEUR = loadsetting(strip("NOM_ENUMERATEUR"));
	noinput;
endif;

postproc
If length(strip(NOM_ENUMERATEUR))<3 then
	errmsg("Renseignez convenablement le nom");
	reenter;
endif;

// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting(strip("NOM_ENUMERATEUR"), maketext("%v", NOM_ENUMERATEUR));
PROC ENUMTEL

preproc
// Vérifiez s'il y a un code de login existant et le reaffecté
if loadsetting("ENUMTEL") <> "" then    
	ENUMTEL = tonumber(loadsetting("ENUMTEL"));
	noinput;
endif;

postproc
// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting("ENUMTEL", maketext("%v", ENUMTEL));
PROC NAMSUP
preproc
// Vérifiez s'il y a un code de login existant et le reaffecté
if loadsetting("NAMSUP") <> "" then    
	NAMSUP = loadsetting(strip("NAMSUP"));
	noinput;
endif;

postproc
If length(strip(NAMSUP))<3 then
	errmsg("Renseignez convenablement le nom");
	reenter;
endif;

// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting(strip("NAMSUP"), maketext("%v", NAMSUP));
PROC ENUMTEL1
 
preproc
// Vérifiez s'il y a un code de login existant et le reaffecté
if loadsetting("ENUMTEL1") <> "" then    
	ENUMTEL1 = tonumber(loadsetting("ENUMTEL1"));
	noinput;
endif;

postproc
// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting("ENUMTEL1", maketext("%v", ENUMTEL1));
PROC NAMPF
preproc
// Vérifiez s'il y a un code de login existant et le reaffecté
if loadsetting("NAMPF") <> "" then    
	NAMPF = loadsetting(strip("NAMPF"));
	noinput;
endif;

postproc
If length(strip(NAMPF))<3 then
	errmsg("Renseignez convenablement le nom");
	reenter;
endif;

// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting(strip("NAMPF"), maketext("%v", NAMPF));
PROC ENUMTEL11
preproc
// Vérifiez s'il y a un code de login existant et le reaffecté
if loadsetting("ENUMTEL11") <> "" then    
	ENUMTEL11 = tonumber(loadsetting("ENUMTEL11"));
	noinput;
endif;

postproc
// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting("ENUMTEL11", maketext("%v", ENUMTEL11));
PROC PROVINCE
preproc
// Vérifiez s'il y a un code de login existant et le reaffecté
if loadsetting("PROVINCE") <> "" then    
	PROVINCE = tonumber(loadsetting("PROVINCE"));
	noinput;
endif;

postproc
// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting("PROVINCE", maketext("%v", PROVINCE));
PROC ANTENNE
preproc
// Vérifiez s'il y a un code de login existant et le reaffecté
if loadsetting("ANTENNE") <> "" then    
	ANTENNE = tonumber(loadsetting("ANTENNE"));
	noinput;
endif;

postproc
// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting("ANTENNE", maketext("%v", ANTENNE));
PROC IDE03

preproc
// Pré-remplir avec le paramètre du pff preproc 
if (special(visualvalue($)) & sysparm("IDE03") <> "") then

	$ = tonumber(sysparm("IDE03")); 
    // Protéger le champ     
	setproperty($, "Protected", "Yes");
endif; 


if 	PROVINCE= 1	then	setvalueset(IDE03, IDE03_VS1);	 endif;
if  PROVINCE= 2	then	setvalueset(IDE03, IDE03_VS2);	 endif;
if 	PROVINCE= 3	then	setvalueset(IDE03, IDE03_VS3);	 endif;
if 	PROVINCE= 5	then	setvalueset(IDE03, IDE03_VS4);	 endif;
if 	PROVINCE= 4	then	setvalueset(IDE03, IDE03_VS5);	 endif;
if 	PROVINCE= 6	then	setvalueset(IDE03, IDE03_VS6);	 endif;
if 	PROVINCE= 7	then	setvalueset(IDE03, IDE03_VS7);	 endif;
if 	PROVINCE= 8	then	setvalueset(IDE03, IDE03_VS8);	 endif;
if 	PROVINCE= 9	then	setvalueset(IDE03, IDE03_VS9);	 endif;
if 	PROVINCE=10	then	setvalueset(IDE03, IDE03_VS10);	 endif;
if 	PROVINCE=11	then	setvalueset(IDE03, IDE03_VS11);	 endif;
if 	PROVINCE= 12    then	setvalueset(IDE03, IDE03_VS12);	 endif;
if 	PROVINCE= 13	then	setvalueset(IDE03, IDE03_VS13);	 endif;
if 	PROVINCE= 14	then	setvalueset(IDE03, IDE03_VS14);	 endif;
if 	PROVINCE= 15	then	setvalueset(IDE03, IDE03_VS15);	 endif;
if 	PROVINCE= 16	then	setvalueset(IDE03, IDE03_VS16);	 endif;
if 	PROVINCE= 17	then	setvalueset(IDE03, IDE03_VS17);	 endif;
if 	PROVINCE= 18	then	setvalueset(IDE03,IDE03_VS18)	 endif;
if 	PROVINCE= 19	then	setvalueset(IDE03,IDE03_VS19)	 endif;
if 	PROVINCE= 20	then	setvalueset(IDE03,IDE03_VS20)	 endif;
if 	PROVINCE= 21	then	setvalueset(IDE03,IDE03_VS21)	 endif;
if 	PROVINCE= 22	then	setvalueset(IDE03,IDE03_VS22)	 endif;
if 	PROVINCE= 23	then	setvalueset(IDE03,IDE03_VS23)	 endif;
if 	PROVINCE= 24	then	setvalueset(IDE03,IDE03_VS24)	 endif;
if 	PROVINCE= 25	then	setvalueset(IDE03,IDE03_VS25)	 endif;
if 	PROVINCE= 26	then	setvalueset(IDE03, IDE03_VS26);	 endif;


postproc
IF !invalueset($) then
	errmsg("Valeur Invalide");
//	reenter;
endif;
PROC NUMERO_DE_LA_GRAPPE
Preproc
if 	PROVINCE = 26	& IDE03=51	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS51);	 endif;
if 	PROVINCE = 26	& IDE03=52	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS52);	 endif;
if 	PROVINCE = 1	& IDE03=1	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS1);	 endif;
if 	PROVINCE = 1	& IDE03=2	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS2);	 endif;
if 	PROVINCE = 2	& IDE03=3	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS3);	 endif;
if 	PROVINCE = 2	& IDE03=4	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS4);	 endif;
if 	PROVINCE = 3	& IDE03=5	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS5);	 endif;
if 	PROVINCE = 3	& IDE03=6	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS6);	 endif;
if 	PROVINCE = 4	& IDE03=9	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS7);	 endif;
if 	PROVINCE = 4	& IDE03=10	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS8);	 endif;
if 	PROVINCE = 5	& IDE03=7	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS9);	 endif;
if 	PROVINCE = 5	& IDE03=8	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS10);	 endif;
if 	PROVINCE = 6	& IDE03=11	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS11);	 endif;
if 	PROVINCE = 6	& IDE03=12	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS12);	 endif;
if 	PROVINCE = 7	& IDE03=13	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS13);	 endif;
if 	PROVINCE = 7	& IDE03=14	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS14);	 endif;
if 	PROVINCE = 8	& IDE03=15	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS16);	 endif;
if 	PROVINCE = 8	& IDE03=16	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS17);	 endif;
if 	PROVINCE = 9	& IDE03=17	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS18);	 endif;
if 	PROVINCE = 9	& IDE03=18	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS19);	 endif;
if 	PROVINCE = 10	& IDE03=19	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS20);	 endif;
if 	PROVINCE = 10	& IDE03=20	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS21);	 endif;
if 	PROVINCE = 11	& IDE03=21	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS22);	 endif;
if 	PROVINCE = 11	& IDE03=22	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS23);	 endif;
if 	PROVINCE = 12	& IDE03=23	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS24);	 endif;
if 	PROVINCE = 12	& IDE03=24	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS25);	 endif;
if 	PROVINCE = 13	& IDE03=25	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS26);	 endif;
if 	PROVINCE = 13	& IDE03=26	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS27);	 endif;
if 	PROVINCE = 14	& IDE03=27	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS28);	 endif;
if 	PROVINCE = 14	& IDE03=28	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS29);	 endif;
if 	PROVINCE = 15	& IDE03=29	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS30);	 endif;
if 	PROVINCE = 15	& IDE03=30	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS31);	 endif;
if 	PROVINCE = 16	& IDE03=31	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS32); endif;
if 	PROVINCE = 16	& IDE03=32	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS33);	 endif;
if 	PROVINCE = 17	& IDE03=33	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS34);	 endif;
if 	PROVINCE = 17	& IDE03=34	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS35);	 endif;
if 	PROVINCE = 18	& IDE03=35	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS36);	 endif;
if 	PROVINCE = 18	& IDE03=36	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS37);	 endif;
if 	PROVINCE = 19	& IDE03=37	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS38);	 endif;
if 	PROVINCE = 19	& IDE03=38	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS39);	 endif;
if 	PROVINCE = 20	& IDE03=39	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS40);	 endif;
if 	PROVINCE = 20	& IDE03=40	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS41);	 endif;
if 	PROVINCE = 21	& IDE03=41	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS42);	 endif;
if 	PROVINCE = 21	& IDE03=42	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS43);	 endif;
if 	PROVINCE = 22	& IDE03=43	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS44);	 endif;
if 	PROVINCE = 22	& IDE03=44	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS45);	 endif;
if 	PROVINCE = 23	& IDE03=45	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS46);	 endif;
if 	PROVINCE = 23	& IDE03=46	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS47);	 endif;
if 	PROVINCE = 24	& IDE03=47	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS48);	 endif;
if 	PROVINCE = 24	& IDE03=48	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS49);	 endif;
if 	PROVINCE = 25	& IDE03=49	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS50);	 endif;
if 	PROVINCE = 25	& IDE03=50	then setvalueset(NUMERO_DE_LA_GRAPPE,NUMERO_DE_LA_GRAPPE_VS50);	 endif;

postproc
IF !invalueset($) then
	errmsg("Valeur Invalide");
//	reenter;
endif;

	// Supprimer login stocké dans les paramètres
{if $=1 then
	savesetting("NOM_ENUMERATEUR", "");
	savesetting("ENUMTEL", "");
	savesetting("NAMSUP", "");
	savesetting("ENUMTEL1", "");
	savesetting("NAMPF", "");
	savesetting("ENUMTEL11", "");
	savesetting("PROVINCE", "");
	savesetting("ANTENNE", "");
	savesetting("IDE03", "");
	savesetting("AIRE_DE_SANTE", "");
	savesetting("NOMBRE_DE_SEGEMENT", "");
	savesetting("NUMERO_DU_SEGMENT_TIRE", "");
endif;}

PROC CODE_ENUMERATEUR
preproc
// Vérifiez s'il y a un code de login existant et le reaffecté
if loadsetting("CODE_ENUMERATEUR") <> "" then    
	CODE_ENUMERATEUR = tonumber(loadsetting("CODE_ENUMERATEUR"));
	noinput;
endif;

postproc
// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting("CODE_ENUMERATEUR", maketext("%v", CODE_ENUMERATEUR));
PROC NOMBRE_DE_MENAGE_A_DENOMBRE
setcaselabel(DENOMBREMENT_DICT, maketext("Questionnaire n°(%d) nbr Men (%d), n° avenue %d", NUMERO_FICHE_DE_DENOMBREMENT, NOMBRE_DE_MENAGE_A_DENOMBRE, NO_DE_LA_STRUCTURE));
PROC INTERVIEW_START_TIME_HOURS
preproc
	M04_TIME = int(systime()/100);
    

//PROC GPS_GET
//postproc
//if $ = 1 then
	// Take new GPS reading
//	gps(open);
//	if gps(read, 60) then 
//		LATITUDE = gps(latitude);
//		LONGITUDE = gps(longitude);
//	else
//		LATITUDE = 99.000000000;
//		LONGITUDE = 99.000000000;
//	endif;
//	gps(close);
	
	// Back to same question to allow review
//	reenter;
//elseif $ = 2 then
	// Show current readings on map
    //execsystem(maketext("gps:%f,%f", 
    //					visualvalue(LATITUDE), 
    //					visualvalue(LONGITUDE)));
//    reenter;
//elseif $ = 3 then
	// Keep the readings and move to next field
//elseif $ = 9 then
	// Remove current readings
//		LATITUDE = 99.000000000;
//		LONGITUDE = 99.000000000;
//endif;


PROC JOUR
preproc

//if HH5Y in 2017:2019 and HH5M in 1:12 and HH5D in 1:31 then



if special(visualvalue($)) then
    if JOUR = notappl then JOUR = sysdate( "DD" );endif;
    if MOIS = notappl then MOIS = sysdate( "MM" );endif;
    if ANNEE = notappl then ANNEE = sysdate( "YYYY" );endif;
endif;

if JOUR in 1:31 and  MOIS in 1:12 and  ANNEE in 2019:2020 then
	advance to  FICHE_DE_DENOMBREMENT_DES_MENAGES_DE_LA_GRAPPE000;
endif;

noinput;
PROC VAR_CONTROLE
Preproc
if special(visualvalue(VAR_CONTROLE)) then
	$=1;
	noinput;
endif;
Noinput;
PROC VAR_COHERENCE
preproc
$=1;

if NOMBRE_DE_MENAGE_A_DENOMBRE > 0 then 
	move to NO_DE_LA_STRUCTURE1(VAR_CONTROLE);
	noinput;
endif;

if NOMBRE_DE_MENAGE_A_DENOMBRE = 0 then 
	move to HHFN;
	noinput;
endif;

Noinput;

postproc
move to NO_DE_LA_STRUCTURE1(VAR_CONTROLE);
PROC NO_DE_LA_STRUCTURE1
Preproc
$=NO_DE_LA_STRUCTURE;

if curocc()>NOMBRE_DE_MENAGE_A_DENOMBRE & NOMBRE_DE_MENAGE_A_DENOMBRE<>VAR_CONTROLE then
	VAR_CONTROLE=NOMBRE_DE_MENAGE_A_DENOMBRE;
endif;

noinput;
PROC NO_DU_MENAGE_DANS_LA_STRUCTURE1
onfocus
$=curocc();
noinput;
PROC RESIDENCE
if $=2 then
	skip to B19;
endif;
PROC ADRESSE_DESCRIPTION_DE_LA_STRUCTURE1
onfocus
$=ADRESSE_DESCRIPTION_DE_LA_STRUCTURE;
noinput;
PROC NOMBRE_DE_MENAGES_DANS_LA_STRUCTURE
onfocus
$=NOMBRE_DE_MENAGE_A_DENOMBRE;
noinput;
PROC MENAGE_AVEC_ENFANTS_DE_MOINS_DE_6_A_59_MOIS
If $=2 then
	skip to B19;
endif;
PROC NOMBRE_DES_ENFANTS_DE_MOINS_DE_6_A_59_MOIS

If curocc()=NOMBRE_DE_MENAGE_A_DENOMBRE & $=0 then
	move to HHFN;
endif;
PROC B19
IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
if B19=1 then
	if gps(open)and gps(read,30) then
		IDE14=gps(Latitude);
		IDE13=gps(Longitude);
	endif;
	gps(Close);
endif;


{if $=2 then
skip to QI10;
endif;} 
PROC IDE13
{PREPROC
noinput;}
PROC IDE14
preproc
if special(visualvalue(IDE14)) then
	x = curocc(FICHE_DE_DENOMBREMENT_DES_MENAGES_DE_LA_GRAPPE000);
endif;

postproc

	{if x>1 then
		do varying i = 1 until i = x
		  if IDE13(i)= IDE13(x) & IDE14(i)= IDE14(x) then
			errmsg("les coordonées saisies se repètent");
			reenter IDE14(x);
		  endif;
		enddo;
	endif;}

If demode()=add then
	if curocc()<NOMBRE_DE_MENAGE_A_DENOMBRE then
		if (MENAGE_AVEC_ENFANTS_DE_MOINS_DE_6_A_59_MOIS=2 | RESIDENCE=2) then
			VAR_CONTROLE=VAR_CONTROLE+1;
			skip to next NO_DE_LA_STRUCTURE1;
			
		elseif (MENAGE_AVEC_ENFANTS_DE_MOINS_DE_6_A_59_MOIS=1) then
			move to TOTENFSTRUCT;
		
		endif;
		
	elseif curocc()=NOMBRE_DE_MENAGE_A_DENOMBRE & B19>0 then
		if (MENAGE_AVEC_ENFANTS_DE_MOINS_DE_6_A_59_MOIS=2 | RESIDENCE=2) then
			move to HHFN;
		
		elseif (MENAGE_AVEC_ENFANTS_DE_MOINS_DE_6_A_59_MOIS=1) then
		move to TOTENFSTRUCT;
		
		endif;
	endif;
endif;
PROC TOTENFSTRUCT
Onfocus
TOTENFSTRUCT=sum(NOMBRE_DES_ENFANTS_DE_MOINS_DE_6_A_59_MOIS where NOMBRE_DES_ENFANTS_DE_MOINS_DE_6_A_59_MOIS>0 );

move to NO_DE_LA_STRUCTURE11(Totocc(ENFMEN000)+1);
PROC NO_DE_LA_STRUCTURE11
onfocus
numeric z, a;
z=1 ;

do varying i=1 until i> NOMBRE_DE_MENAGE_A_DENOMBRE
	if NOMBRE_DES_ENFANTS_DE_MOINS_DE_6_A_59_MOIS(i)>0 then
	    do varying j=1 until j> NOMBRE_DES_ENFANTS_DE_MOINS_DE_6_A_59_MOIS(i)
		    if RESIDENCE(i)=1 then 
		    	  NO_DU_MENAGE_DANS_LA_STRUCTURE2(z) = NO_DU_MENAGE_DANS_LA_STRUCTURE1(i) ;
				  RESIDENCE1(z)=RESIDENCE(i);
				  NO_DE_LA_STRUCTURE11(z)=NO_DE_LA_STRUCTURE1(i);
				  ADRESSE_DESCRIPTION_DE_LA_STRUCTURE11(z)=strip(ADRESSE_DESCRIPTION_DE_LA_STRUCTURE1(i));
				  NOMBRE_DE_MENAGES_DANS_LA_STRUCTURE1(z)=NOMBRE_DE_MENAGES_DANS_LA_STRUCTURE(i);
				  NOM_DU_CHEF_DE_MENAGE1(z)=strip(NOM_DU_CHEF_DE_MENAGE(i));
				  MENAGE_AVEC_ENFANTS_DE_MOINS_DE_6_A_59_MOIS1(z)=MENAGE_AVEC_ENFANTS_DE_MOINS_DE_6_A_59_MOIS(i);
				  TAILLE_DU_MENAGE1(z)=TAILLE_DU_MENAGE(i);
				  NOMBRE_DES_ENFANTS_DE_MOINS_DE_6_A_59_MOIS1(z)=NOMBRE_DES_ENFANTS_DE_MOINS_DE_6_A_59_MOIS(i);
				  NUMSON(z) = j;
				  z=z+1 ;
			endif;
	    enddo ;
	 else
	 	a=1;
	 endif;
enddo;
noinput;
PROC RESIDENCE1
Preproc
noinput;
PROC NO_DU_MENAGE_DANS_LA_STRUCTURE2
Preproc
noinput;
PROC ADRESSE_DESCRIPTION_DE_LA_STRUCTURE11
Preproc
noinput;
PROC NOMBRE_DE_MENAGES_DANS_LA_STRUCTURE1
Preproc
noinput;
PROC NOM_DU_CHEF_DE_MENAGE1
Preproc
noinput;
PROC MENAGE_AVEC_ENFANTS_DE_MOINS_DE_6_A_59_MOIS1
Preproc
noinput;
PROC TAILLE_DU_MENAGE1
Preproc
noinput;
PROC NOMBRE_DES_ENFANTS_DE_MOINS_DE_6_A_59_MOIS1
Preproc
noinput;
PROC NUMSON
Onfocus
noinput;
PROC ANNEE11
postproc

if (demode()=1 | demode()=2) then
	if VAR_CONTROLE < NOMBRE_DE_MENAGE_A_DENOMBRE then
		if curocc() < TOTENFSTRUCT then	
			//advance NO_DE_LA_STRUCTURE11;
		else
			VAR_CONTROLE = VAR_CONTROLE+1;
			move to VAR_COHERENCE;	
		endif;

	endif;

	if VAR_CONTROLE = NOMBRE_DE_MENAGE_A_DENOMBRE then
		if curocc() < TOTENFSTRUCT then
			//
		elseif curocc() = TOTENFSTRUCT then
			move to HHFN;
		endif;
	endif;
endif;
PROC HHFN
Preproc
HHFN = systime("HH");
MINFN = systime("MM");
noinput;
PROC MINFN
PREPROC
Noinput;
