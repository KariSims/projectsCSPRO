{Application 'QUESTIONNAIRE_MENAGE' logic file generated by CSPro}
PROC GLOBAL

numeric  X,i=1,j,xmodcent,xrvisit,xmodify,xverif,xnaiss2, dvacc1, dvacc2;

//Fonction pour la mise en forme des erreurs messages
function Erreur(string message)
     setfont(ErrMsg, "Times new roman", 24, bold);
     errmsg("%s", message);
end;

PROC QUESTIONNAIRE_MENAGE_FF

PROC IDE01
preproc

	errmsg("Rassurez-vous d'être dans la même grappe, sinon passer par le MENU pour changer de grappe");

// Pré-remplir avec le paramètre du pff preproc 

  if (special(visualvalue($)) & sysparm("IDE01") <> "") then
	$ = tonumber(sysparm("IDE01")); 
    // Protéger le champ     
	setproperty($, "Protected", "Yes");
  endif;

postproc

if !invalueset($) then
	errmsg("Valeur Invalide");
	stop(1);
//	reenter;
endif;

 // Supprimer login stocké dans les paramètres
 savesetting("IDE01", "");
PROC IDE02
postproc
If length(strip($))<4 then
	errmsg("Veuillez bien renseigner cette question");
	reenter;
endif;
PROC IDE03

preproc
// Pré-remplir avec le paramètre du pff preproc 
if (special(visualvalue($)) & sysparm("IDE03") <> "") then

	$ = tonumber(sysparm("IDE03")); 
    // Protéger le champ     
	setproperty($, "Protected", "Yes");
endif; 

if 	IDE01 = 1	then	setvalueset(IDE03, IDE03_VS26);	 endif;
if 	IDE01 = 2	then	setvalueset(IDE03, IDE03_VS1);	 endif;
if 	IDE01 = 3	then	setvalueset(IDE03, IDE03_VS2);	 endif;
if 	IDE01 = 4	then	setvalueset(IDE03, IDE03_VS3);	 endif;
if 	IDE01 = 5	then	setvalueset(IDE03, IDE03_VS4);	 endif;
if 	IDE01 = 6	then	setvalueset(IDE03, IDE03_VS5);	 endif;
if 	IDE01 = 7	then	setvalueset(IDE03, IDE03_VS6);	 endif;
if 	IDE01 = 8	then	setvalueset(IDE03, IDE03_VS7);	 endif;
if 	IDE01 = 9	then	setvalueset(IDE03, IDE03_VS8);	 endif;
if 	IDE01 = 10	then	setvalueset(IDE03, IDE03_VS9);	 endif;
if 	IDE01 = 11	then	setvalueset(IDE03, IDE03_VS10);	 endif;
if 	IDE01 = 12	then	setvalueset(IDE03, IDE03_VS11);	 endif;
if 	IDE01 = 13	then	setvalueset(IDE03, IDE03_VS12);	 endif;
if 	IDE01 = 14	then	setvalueset(IDE03, IDE03_VS13);	 endif;
if 	IDE01 = 15	then	setvalueset(IDE03, IDE03_VS14);	 endif;
if 	IDE01 = 16	then	setvalueset(IDE03, IDE03_VS15);	 endif;
if 	IDE01 = 17	then	setvalueset(IDE03, IDE03_VS16);	 endif;
if 	IDE01 = 18	then	setvalueset(IDE03, IDE03_VS17);	 endif;
if 	IDE01 = 19	then	setvalueset(IDE03,IDE03_VS18)	 endif;
if 	IDE01 = 20	then	setvalueset(IDE03,IDE03_VS19)	 endif;
if 	IDE01 = 21	then	setvalueset(IDE03,IDE03_VS20)	 endif;
if 	IDE01 = 22	then	setvalueset(IDE03,IDE03_VS21)	 endif;
if 	IDE01 = 23	then	setvalueset(IDE03,IDE03_VS22)	 endif;
if 	IDE01 = 24	then	setvalueset(IDE03,IDE03_VS23)	 endif;
if 	IDE01 = 25	then	setvalueset(IDE03,IDE03_VS24)	 endif;
if 	IDE01 = 26	then	setvalueset(IDE03,IDE03_VS25)	 endif;

postproc
IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
PROC IDE04
preproc
// Pré-remplir avec le paramètre du pff preproc 
if (special(visualvalue($)) & sysparm("IDE04") <> "") then

	$ = tonumber(sysparm("IDE04")); 
    // Protéger le champ     
	setproperty($, "Protected", "Yes");
endif;

postproc
IF !invalueset($) then
	errmsg("Valeur Invalide");
//	reenter;
endif;
PROC IDE06
postproc

IF length(strip($))<4 then
	errmsg("Veuillez bien renseigner cette question");
	reenter;
endif;
PROC IDE07
postproc
IF length(strip($))<4 then
	errmsg("Veuillez bien renseigner cette question");
	reenter;
endif;
PROC IDE08
preproc
// Pré-remplir avec le paramètre du pff preproc 
if (special(visualvalue($)) & sysparm("IDE08") <> "") then

	$ = tonumber(sysparm("IDE08")); 
    // Protéger le champ     
	setproperty($, "Protected", "Yes");
endif; 

if 	IDE01 = 1	& IDE03=51	then	setvalueset(IDE08,IDE08_VS51)	 endif;
if 	IDE01 = 1	& IDE03=52	then	setvalueset(IDE08,IDE08_VS52)	 endif;
if 	IDE01 = 2	& IDE03=1	then	setvalueset(IDE08, IDE08_VS1);	 endif;
if 	IDE01 = 2	& IDE03=2	then	setvalueset(IDE08, IDE08_VS2);	 endif;
if 	IDE01 = 3	& IDE03=3	then	setvalueset(IDE08, IDE08_VS3);	 endif;
if 	IDE01 = 3	& IDE03=4	then	setvalueset(IDE08, IDE08_VS4);	 endif;
if 	IDE01 = 4	& IDE03=5	then	setvalueset(IDE08, IDE08_VS5);	 endif;
if 	IDE01 = 4	& IDE03=6	then	setvalueset(IDE08, IDE08_VS6);	 endif;
if 	IDE01 = 5	& IDE03=7	then	setvalueset(IDE08, IDE08_VS7);	 endif;
if 	IDE01 = 5	& IDE03=8	then	setvalueset(IDE08, IDE08_VS8);	 endif;
if 	IDE01 = 6	& IDE03=9	then	setvalueset(IDE08, IDE08_VS9);	 endif;
if 	IDE01 = 6	& IDE03=10	then	setvalueset(IDE08, IDE08_VS10);	 endif;
if 	IDE01 = 7	& IDE03=11	then	setvalueset(IDE08, IDE08_VS11);	 endif;
if 	IDE01 = 7	& IDE03=12	then	setvalueset(IDE08, IDE08_VS12);	 endif;
if 	IDE01 = 8	& IDE03=13	then	setvalueset(IDE08, IDE08_VS13);	 endif;
if 	IDE01 = 8	& IDE03=14	then	setvalueset(IDE08, IDE08_VS14);	 endif;
if 	IDE01 = 9	& IDE03=15	then	setvalueset(IDE08, IDE08_VS16);	 endif;
if 	IDE01 = 9	& IDE03=16	then	setvalueset(IDE08, IDE08_VS17);	 endif;
if 	IDE01 = 10	& IDE03=17	then	setvalueset(IDE08, IDE08_VS18);	 endif;
if 	IDE01 = 10	& IDE03=18	then	setvalueset(IDE08,IDE08_VS19)	 endif;
if 	IDE01 = 11	& IDE03=19	then	setvalueset(IDE08,IDE08_VS20)	 endif;
if 	IDE01 = 11	& IDE03=20	then	setvalueset(IDE08,IDE08_VS21)	 endif;
if 	IDE01 = 12	& IDE03=21	then	setvalueset(IDE08,IDE08_VS22)	 endif;
if 	IDE01 = 12	& IDE03=22	then	setvalueset(IDE08,IDE08_VS23)	 endif;
if 	IDE01 = 13	& IDE03=23	then	setvalueset(IDE08,IDE08_VS24)	 endif;
if 	IDE01 = 13	& IDE03=24	then	setvalueset(IDE08,IDE08_VS25)	 endif;
if 	IDE01 = 14	& IDE03=25	then	setvalueset(IDE08,IDE08_VS26)	 endif;
if 	IDE01 = 14	& IDE03=26	then	setvalueset(IDE08,IDE08_VS27)	 endif;
if 	IDE01 = 15	& IDE03=27	then	setvalueset(IDE08,IDE08_VS28)	 endif;
if 	IDE01 = 15	& IDE03=28	then	setvalueset(IDE08,IDE08_VS29)	 endif;
if 	IDE01 = 16	& IDE03=29	then	setvalueset(IDE08,IDE08_VS30)	 endif;
if 	IDE01 = 16	& IDE03=30	then	setvalueset(IDE08,IDE08_VS31)	 endif;
if 	IDE01 = 17	& IDE03=31	then	setvalueset(IDE08,IDE08_VS32)	 endif;
if 	IDE01 = 17	& IDE03=32	then	setvalueset(IDE08,IDE08_VS33)	 endif;
if 	IDE01 = 18	& IDE03=33	then	setvalueset(IDE08,IDE08_VS34)	 endif;
if 	IDE01 = 18	& IDE03=34	then	setvalueset(IDE08,IDE08_VS35)	 endif;
if 	IDE01 = 19	& IDE03=35	then	setvalueset(IDE08,IDE08_VS36)	 endif;
if 	IDE01 = 19	& IDE03=36	then	setvalueset(IDE08,IDE08_VS37)	 endif;
if 	IDE01 = 20	& IDE03=37	then	setvalueset(IDE08,IDE08_VS38)	 endif;
if 	IDE01 = 20	& IDE03=38	then	setvalueset(IDE08,IDE08_VS39)	 endif;
if 	IDE01 = 21	& IDE03=39	then	setvalueset(IDE08,IDE08_VS40)	 endif;
if 	IDE01 = 21	& IDE03=40	then	setvalueset(IDE08,IDE08_VS41)	 endif;
if 	IDE01 = 22	& IDE03=41	then	setvalueset(IDE08,IDE08_VS42)	 endif;
if 	IDE01 = 22	& IDE03=42	then	setvalueset(IDE08,IDE08_VS43)	 endif;
if 	IDE01 = 23	& IDE03=43	then	setvalueset(IDE08,IDE08_VS44)	 endif;
if 	IDE01 = 23	& IDE03=44	then	setvalueset(IDE08,IDE08_VS45)	 endif;
if 	IDE01 = 24	& IDE03=45	then	setvalueset(IDE08,IDE08_VS46)	 endif;
if 	IDE01 = 24	& IDE03=46	then	setvalueset(IDE08,IDE08_VS47)	 endif;
if 	IDE01 = 25	& IDE03=47	then	setvalueset(IDE08,IDE08_VS48)	 endif;
if 	IDE01 = 25	& IDE03=48	then	setvalueset(IDE08,IDE08_VS49)	 endif;
if 	IDE01 = 26	& IDE03=49	then	setvalueset(IDE08,IDE08_VS50)	 endif;
if 	IDE01 = 26	& IDE03=50	then	setvalueset(IDE08,IDE08_VS50)	 endif;

postproc
IF !invalueset($) then
	errmsg("Valeur Invalide");
//	reenter;
endif;
PROC JOUR
preproc

//if HH5Y in 2017:2019 and HH5M in 1:12 and HH5D in 1:31 then


if (!xmodcent | xverif) & !xmodify then
  JOUR = sysdate( "DD" );
  MOIS = sysdate( "MM" );
  ANNEE = sysdate( "YYYY" );
endif;

if special(visualvalue($)) then
    if JOUR = notappl then JOUR = sysdate( "DD" );endif;
    if MOIS = notappl then MOIS = sysdate( "MM" );endif;
    if ANNEE = notappl then ANNEE = sysdate( "YYYY" );endif;
endif;

if JOUR in 1:31 and  MOIS in 1:12 and  ANNEE in 2019:2020 then
	advance to IDE12;
endif;

noinput;
PROC IDE09
preproc
if IDE03=1 then
	IDE09=1;
	noinput;
else
	IDE09=2;
	noinput;
endif;

postproc
IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
PROC IDE10
postproc
IF not invalueset(IDE10) then
	errmsg("Valeur Invalide");
	reenter;
endif;
PROC IDE05
Postproc
if not int(IDE05/10000000) in 80,81,82,84,85,89,90,91,96,97,98,99 then
	Erreur(maketext(200501));
	reenter;
endif;
PROC IDE12
preproc
if IDE01 in 1,4,5,8:16,22,24 then
	IDE12=2;
//	noinput;
else
	IDE12=1;
//	noinput;
endif;

postproc

xnaiss2=cmcode(MOIS,ANNEE);
if !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
PROC B19

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
if B19=1 then
	if gps(open)and gps(read,30) then
		IDE14=gps(Latitude);
		IDE13=gps(Longitude);
	endif;
	gps(Close);
endif;


{if $=2 then
skip to QI10;
endif;} 
PROC PME0B

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
savepartial ();
PROC PME00

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
savepartial ();
PROC PME01

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
savepartial ();
PROC PM02

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
savepartial ();
PROC PM03

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
savepartial ();
PROC PM04

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
savepartial ();
PROC PM05

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ <> 8 then
skip to PM06
endif;
savepartial ();

if PM04<3 & (PM05 = 1) then
	errmsg("Le Niveau scolaire de l'individu ne cadre pas avec sa catégorie socio-professionelle");
	reenter;
endif;
PROC PM05_AUTRES_A_PRECISER
postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif
PROC PM06

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
savepartial ();
PROC PM07

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ >= PM06  then 
errmsg ("PM07(:Nombre d'enfant de 6 à 59 mois  doit etre inférieur à PM06 ");
reenter;
endif;

savepartial ();

IF PM07 = 0 then 
   endlevel;
endif;
PROC IDE15

preproc
if PM07>0 then
	IDE15=1;
	noinput;
endif;

postproc

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if IDE15=2 then
	IDE16=0;
	Endsect;
endif;
PROC MEMBRES_DU_MENAGE000

postproc

  if curocc(MEMBRES_DU_MENAGE000) < PM07 then
    errmsg("Veuille renseigner les infos pour tous les enfants listés précedemment");
    reenter MM07(curocc(MEMBRES_DU_MENAGE000));
  endif;
PROC MM01
Preproc
$=curocc();
noinput;
PROC MM03

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
PROC MM04

{if MM03> MOIS & MM04=ANNEE then
	errmsg("le date de naissance de l'enfant est incorrect");
	reenter;
endif;}

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
PROC MM05
preproc
numeric xnaiss1;

xnaiss1=cmcode(MM03,MM04);

//errmsg("âge enfant=%d",xnaiss1);

if MM03<> 98 & MM04<> 98 then
	MM05=xnaiss2-xnaiss1;  // returns the mounths
	noinput;
endif;

if MM03=98 & MM04<> 98 then
	 X=errmsg("l'enquêté(e) connaît au moins l'âge de l'enfant %s en mois ?",strip(MM02))
      	select("Oui",MM05,"Non",continue);
	    	if X=2 then
	    		MM05=(ANNEE-MM04)*12;
	    		noinput;
	    	endif;
endif;

if MM03=98 & MM04=98 then
	 X=errmsg("l'enquêté(e) connaît au moins l'âge de l'enfant %s en mois ?", strip(MM02))
      	select("Oui", MM05,"Non",continue);
      	   	if X=2 then
	    		MM05=98;
	    		noinput;
	    	endif;
endif;

postproc
//	errmsg("age = %d ",MM05);
IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
PROC MM06
IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
PROC MM07
preproc

  if curocc(MEMBRES_DU_MENAGE000) < PM07 then
	MM07=1;
	noinput;
  endif;

postproc

if MM07<>1 then
	endgroup;	
endif;

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
PROC IDE16
preproc

IDE16 = count(MEMBRES_DU_MENAGE000 where (MM05>5 & MM05<83));
PROC CARACTERISTIQUE_DES_ENFANT_DANS000
preproc
j=1;
for i in MEMBRES_DU_MENAGE000
		if MM05(i) in 6:82 then
		  CEE01(j) = MM01(i);
		  CEE00(j) = MM02(i);
		  CEE02(j) = MM05(i);
		  CEE03(j) = MM06(i);
		  j=j+1;
		endif;
//		errmsg("i=%d et j=%d",i,j);
enddo;

postproc
	IDFIN=1;

PROC CEE01

preproc

 if demode()=add then
    savepartial();
 endif;

  if curocc(CARACTERISTIQUE_DES_ENFANT_DANS000) > IDE16 then
    endgroup
  endif;
noinput;
PROC CEE00
preproc
noinput;
PROC CEE02
preproc
savepartial ();
noinput;
PROC CEE03
preproc
savepartial ();
noinput;
PROC CEE04


IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ <> 4 then
skip to CEE05;
endif;
savepartial ();
PROC CEE05

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
savepartial ();
PROC CEE06

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
if $ <> 6 then
skip to CEE07
endif;
savepartial ();
PROC CEE06_AUTRES_RELIGION_A_PRECISER
postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif
PROC CEE07

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
savepartial ();
PROC CEE08

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
savepartial ();
PROC F5

if length(strip($))=0 then
	errmsg("Choisissez une maladie svp et au cas vous ne connassez pas cocher NSP");
	reenter;
elseif length(strip($))>1 and pos("X",$)<>0 then
	errmsg("NSP ne peut être choisi avec une autre option");
	reenter;
elseif pos("O",$)=0 then	
	skip to ICCP01;
endif;
PROC ICCP00_AUTRES_A_PRECISER

postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif
PROC ICCP01
postproc

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ = 2 then
skip to ICCP04
endif;
savepartial ();
PROC ICCP02
postproc

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ = 98 then
skip to ICCP03
endif;

if $ <> 11 then
 skip to ICCP02_SIGNE2
endif
PROC ICCP02_AUTRES_A_PRECISE1

postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif;

savepartial ();
PROC ICCP02_SIGNE2


IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ = ICCP02   then 
	errmsg ("ICCP02_SIGNE2(:Signe 1  doit etre Different de Signe 2 ");
	reenter;
endif;


if $ <> 11 then
	skip to ICCP03
endif;
savepartial ();
PROC ICCP02_AUTRES_A_PRECISER2

postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif;

savepartial ();
PROC ICCP03

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ <> 7 then
skip to ICCP04
endif;
savepartial ();
PROC ICCP03_AUTRES_A_PRECISER
postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif
PROC ICCP04
postproc

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ = 4 then
	skip to VCR01;
endif;
savepartial ();
PROC ICCP05
postproc

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ = 98 then
	skip to VCR01
endif;

if $ <> 11 then
	skip to ICCP05_2
endif;
savepartial ();
PROC ICCP05_AUTRES_A_PRECISERC
postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif
PROC ICCP05_2

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $  = ICCP05   then 
	errmsg ("ICCP05_2(:Canal 1  doit etre Different de Canal 2 ");
	reenter;
endif;

if $ <> 11 then
	skip to VCR01
endif;
savepartial ();
PROC ICCP05_AUTRES_A_PRECISERB
postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif
PROC VCR01

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

savepartial ();

if $ = 2 or $ = 9 then
skip to VCR05;
endif;

PROC VCR02
IF !invalueset(VCR02) then
	errmsg("Valeur Invalide");
	reenter;
endif;

savepartial ();

if VCR02 = 1 then
 VCR02A=1;    
	string nomFichierPhoto =concat("Carnet", maketext("/mnt/storage/Pictures/Carnet%v%v%v%v%v%v.jpg",                                 
	IDE01, IDE02, IDE03,IDE06,IDE08,IDE11)); execsystem("camera:" + nomFichierPhoto);
else
	skip to VCR05;
endif;


PROC VCR03_JOUR

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

savepartial ();
PROC VCR03_MOIS

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ <> 9 then
skip to VCR03_ANNEE;
endif;
savepartial ();
PROC VCR03_ANNEE

preproc
savepartial ();

postproc
IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
PROC VCR04
IF !invalueset(VCR04) then
	errmsg("Valeur Invalide");
	reenter;
endif;
PROC VCR05

IF !invalueset(VCR05) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if VCR05 = 1 then
 VCR05A=1;   
	string nomFichierPhoto = concat("Carte", maketext("/mnt/storage/Pictures/carte%v%v%v%v%v%v.jpg",                                 
	IDE01, IDE02, IDE03,IDE06,IDE08,IDE11)); execsystem("camera:" + nomFichierPhoto);
endif;
savepartial ();

if VCR05=1 then
	advance to VCR06_JOUR;
elseif (VCR05=3 | VCR05=9) & VCR01=1 then
	skip to MIV01;
elseif (VCR05=3 | VCR05=9) & VCR01>1 then
	skip to Q_RNV1;
endif;
PROC VCR06_JOUR

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
savepartial ();
PROC VCR06_MOIS

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ <> 9 then
skip to VCR06_ANNEE
endif;
savepartial ();
PROC VCR06_ANNEE

preproc
dvacc1=(((VCR03_ANNEE*100)+VCR03_MOIS)*100)+VCR03_JOUR;
dvacc2=(((VCR06_ANNEE*100)+VCR06_MOIS)*100)+VCR06_JOUR;

postproc

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if datediff(dvacc2,dvacc1)<0 then
	errmsg("Les 2 dates de prise de vaccin incorrectes");
	errmsg("Diff date =%d",datediff(dvacc2,dvacc1));
	reenter;
endif;
PROC MIV01
preproc
if VCR01<>1 then
	skip to next;
endif;
savepartial ();

postproc
IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

savepartial ();

if $ <> 1 & VCR01=1 then
	skip to next;
endif;


PROC MIVO2_SIGNE1
preproc
ask if VCR01=1;
savepartial ();

postproc
IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ <> 8 then
skip to MIVO2_SIGNE2
endif;
savepartial ();
PROC MIV02_AUTRES_A_PRECISER
preproc
ask if VCR01=1;
savepartial ();

postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif;

savepartial ();
PROC MIVO2_SIGNE2
preproc
ask if VCR01=1;
savepartial ();

postproc
if $ = MIVO2_SIGNE1   then 
errmsg ("MIVO2_SIGNE2(:Signe 1  doit etre Different de Signe 2 ");
reenter;
endif;

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ <> 8 then
skip to MIV03
endif;
savepartial ();
PROC MIV02_AUTRES_A_PRECISER_SIGNE_2
preproc
ask if VCR01=1;
savepartial ();

postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif
PROC MIV03
preproc
ask if VCR01=1;
savepartial ();

postproc

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ = 1 then
skip to MIV05
endif;

if $ <> 6 then
skip to MIV04
endif;
savepartial ();
PROC MIV03_AUTRES_A_PRECISER
preproc
ask if VCR01=1;
savepartial ();

postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif
PROC MIV04
preproc
ask if VCR01=1;
savepartial ();

postproc
IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ <> 6 then
skip to MIV05
endif;
savepartial ();
PROC MIV04_AUTRES_A_PRECISER
preproc
ask if VCR01=1;
savepartial ();

postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif
PROC MIV05
preproc
ask if VCR01=1;
savepartial ();

postproc
IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if  MIV03 <> 1 then
skip to FIN
endif;
PROC MIV06
preproc
ask if VCR01=1;
savepartial ();

postproc
IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ = 1 or $ = 2 or $ = 4 or $ = 6 then
skip to FIN
endif;
savepartial ();
PROC Q_RNV1
preproc
if VCR01=1 then
	endlevel;
endif;

postproc
	IF !invalueset($) then
		errmsg("Valeur Invalide");
		reenter;
	endif;

	if $ <> 22 then
	skip to FIN
	endif;
savepartial ();
PROC Q_RNV1_AUTRE____PR_CISER
postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif
PROC Q_RNV2

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ = Q_RNV1   then 
errmsg ("Q_RNV2(:Raison 1  doit etre Different de Raison 2 ");
reenter;
endif;



if $ <> 22 then
skip to Q_RN3
endif;
savepartial ();
PROC Q_RNV1_AUTRE____PR_CISES
postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif
PROC Q_RN3

IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;

if $ <> 22 then
skip to FIN
endif;

if $ = Q_RNV1 or $ = Q_RNV2    then 
errmsg ("Q_RN3(:Raison 3  doit etre Different de Raison 1 et Raison 2  ");
reenter;
endif;

savepartial ();
PROC Q_RNV3_AUTRE____PR_CISER

postproc
if $ = "" then
errmsg("La variable à préciser doit être répondu");
reenter;
endif;

savepartial ();
PROC FIN
Preproc
  if curocc(CARACTERISTIQUE_DES_ENFANT_DANS000) < IDE16 then
	FIN=1;
	noinput;
  endif;
  
postproc
IF !invalueset($) then
	errmsg("Valeur Invalide");
	reenter;
endif;
savepartial ();
PROC IDFIN
preproc
noinput;
