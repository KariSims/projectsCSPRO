{Application 'QUESTPRICE' logic file generated by CSPro}
PROC GLOBAL
set explicit
numeric i,t,y,pr,j,x,reqst,z,v=0;
string xnamag, xprov, xville, xcomm;

array codes(1000) ;
array alpha(30) labels(1000);

function clear_labels();
	do i = 1 while i <= 1000
	  codes(i) = notappl;
	  labels(i) = "";
	enddo;
end;

function  sav()
	savepartial();
end;

{Bluetooth function}

function BLTCF()
	
// send the latest survey data to the server
	
	if syncconnect(Bluetooth) = 1 then	  
//		syncdata(PUT, {DPAKIN_DICT});
		syncdata(PUT, FEUIL1_DICT);
		syncdisconnect();	
	endif;    

end;

function BLTCF_Serv()
	// start a peer-to-peer Bluetooth server with the application directory as the file root path
	syncserver(Bluetooth);
end;

PROC QUESTPRICE_GROS_FF
preproc

	{userbase();
	userbar(show);}

PROC QUESTPRICE_LEVEL
preproc

IP02A = sysdate("DD");
IP01 = sysdate("MM");

postproc
// A mettre au Menu
numeric blt=accept("Voulez-vous recevoir les données ?","Oui,recevoir","Non");
if blt=1 then
	BLTCF();
endif;


{postproc
numeric blt=accept("Voulez-vous envoyer les données ?","Oui,Envoyé","Non");
if blt=1 then
	BLTCF_Serv();
endif;}

PROC ID05
preproc
clear_labels();
onfocus

	if special(ID05) then
		open(FEUIL1_DICT);
		NORDR=1;
	reqst = loadcase(FEUIL1_DICT,NORDR);

				j = 1;

				do varying i=1 until i> 1000
				numeric cl=i+1;

						if CODAG(cl) <> CODAG(i) then
							labels(j)=strip(NAMAG(i));
							codes(j)=CODAG(i);
								j = j + 1;
						endif;
				enddo;

		close (FEUIL1_DICT);	
		setvalueset(@getsymbol(),codes,labels);
		setcapturetype($,3);

	endif;

// Vérifiez s'il y a un code de login existant et le reaffecté
if loadsetting("ID05") <> "" then    
	ID05 = tonumber(loadsetting("ID05"));
	noinput;
endif; 

postproc

	Do varying j = 0 until j >= i
		if codes(j) = ID05 then
			xnamag = labels(j);
		endif;
	enddo;
	
// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting("ID05", maketext("%v", ID05));
PROC IPC14
preproc
clear_labels();
onfocus

	if special(IPC14) then
		open(FEUIL1_DICT);
		NORDR=1;
		reqst = loadcase(FEUIL1_DICT,NORDR);
				j = 1;

				do varying i=1 until i> 1000
				numeric cl=i+1;
					if ID05 = CODAG(i) then
						if CODEPC(cl) <> CODEPC(i) then
							labels(j)=strip(NOMPC(i));
							codes(j)=CODEPC(i);
								j = j + 1;
						endif;
					endif;
				enddo;
					codes(j)=codes(j-1)+1;
					labels(j)="A saisir";
					v=0;
                  j=j+1;
		close (FEUIL1_DICT);		
		setvalueset(@getsymbol(),codes,labels);
		setcapturetype($,3);
	else
		noinput;
	endif;

// Vérifiez s'il y a un code de login existant et le reaffecté
if loadsetting("IPC14") <> "" then    
	IPC14 = tonumber(loadsetting("IPC14"));
//	noinput;
endif; 

Postproc

// Sauvegarder le login pour ne pas avoir à le saisir à nouveau
savesetting("IPC14", maketext("%v", IPC14));

//if labels(j)<>"A saisir" then
	Do varying j = 0 until j >= i
		if codes(j) = IPC14 then
			IPC140 = labels(j);			
		endif;
	enddo;
PROC IPC33
preproc
clear_labels();

onfocus

	if special(IPC33) then
		open(FEUIL1_DICT);
		NORDR=1;
		reqst = loadcase(FEUIL1_DICT,NORDR);
				j = 1;

				do varying i=1 until i> 1000

					if !special(CODAG(i)) then
						labels(j)= concat("Emplacement", edit("99",i) );
						codes(j)= i;
						j = j + 1;
					endif;
					
				enddo;
		close (FEUIL1_DICT);		
		setvalueset(@getsymbol(),codes,labels);
		setcapturetype($,3);
	endif;

Postproc

	Do varying j = 0 until j >= i
		if codes(j) = IPC33 then
			IPC141 = labels(j);
			setcaselabel(QUESTPRICE_DICT, maketext("%s du %d/%d",strip(labels(j)),visualvalue(IP02A),visualvalue(IP01) ) );			
		endif;
	enddo;
PROC IPC140
Preproc

if strip(IPC140)<>"A saisir" then
	v=1;
	Advance to ID01;
endif;

if strip(IPC140)="A saisir" then
	v=0;
	x=errmsg("Êtes-vous sûr de vouloir ajouter de Marché?")
	select("Non",IPC14, "Oui, Ajouter Marché",continue);
	IPC140="";
endif;					
					
postproc

	If length(strip(IPC140))<3 then
		errmsg("Nom de marché très court");
		reenter;
	endif;
PROC ID01
preproc
valueset vlset01;
clear_labels();
onfocus
vlset01.clear();

if special(ID01) then
		open(FEUIL1_DICT);
		NORDR=1;
		reqst = loadcase(FEUIL1_DICT,NORDR);
//		sort(FEUIL1_REC using CODAG, ID_PROV);
			j = 1;
			
		if v=1 then
				do varying i=1 until i> 1000
					if ID05 = CODAG(i) & IPC14 = CODEPC(i) then
						ID01 = ID_PROV(i);
						ID02 = IDVILL_TERRIT(i);
						ID03 = ID_COMM_SEC(i);
					endif;
				enddo;
				advance to IP01;
		endif;

		if v=0 then
			do varying i=1 until i> 1000
			numeric cl=i+1;
			
				if CODAG(i)=ID05 then
						if ID_PROV(cl) <> ID_PROV(i) then
							labels(j)=strip(PROV(i));
							codes(j)=ID_PROV(i);
								j = j + 1;
						endif;
				endif;
			enddo;
		endif;
		close (FEUIL1_DICT);
			setvalueset(@getsymbol(),codes,labels);
			setcapturetype($,3);

endif;

Postproc
	Do varying j = 0 until j >= i
		if codes(j) = ID01 then
			xprov = strip(labels(j));
		endif;
	enddo;
PROC ID02
preproc
clear_labels();
onfocus



	if v=0 then
		open(FEUIL1_DICT);
		NORDR=1;
		reqst = loadcase(FEUIL1_DICT,NORDR);
//		sort(FEUIL1_REC using CODAG, ID_PROV);
				j = 1;

				do varying i=1 until i> 1000
				numeric cl=i+1;
					if CODAG(i)=ID05 then
					
						if IDVILL_TERRIT(cl) <> IDVILL_TERRIT(i) then
							labels(j)=strip(NOM_VILL_TERRIT(i));
							codes(j)=IDVILL_TERRIT(i);
								j = j + 1;
								
						endif;
					endif;
				enddo;
		close (FEUIL1_DICT);
		
		setvalueset(@getsymbol(),codes,labels);
		setcapturetype($,3);

	endif;

Postproc
	Do varying j = 0 until j >= i
		if codes(j) = ID02 then
			xville = labels(j);
		endif;
	enddo;
PROC ID03
preproc
clear_labels();
onfocus

	if v=0 then
		open(FEUIL1_DICT);
		NORDR=1;
		reqst = loadcase(FEUIL1_DICT,NORDR);
		z=count(FEUIL1_REC where CODAG > 0);
//		sort(FEUIL1_REC using ID_PROV);
				j = 1;

				do varying i=1 until i> z
				numeric cl=i+1;

					if CODAG(i)=ID05 then
					
						if ID_COMM_SEC(cl) <> ID_COMM_SEC(i) then
							labels(j)=strip(NOM_COMM_SEC(i));
							codes(j)=ID_COMM_SEC(i);
								j = j + 1;
								
						endif;
					endif;
					
				enddo;
		close (FEUIL1_DICT);
		
		setvalueset(@getsymbol(),codes,labels);
		setcapturetype($,3);

	endif;

Postproc
	Do varying j = 0 until j >= i
		if codes(j) = ID03 then
			xcomm = labels(j);
		endif;
	enddo;

open(FEUIL1_DICT);
	NORDR=1;
	setfile(FEUIL1_DICT,"..\Data\IDMARK.csdb",append);
	reqst = loadcase(FEUIL1_DICT,NORDR);

if v=0 then
	CODAG(z+1)=ID05;
	NAMAG(z+1)=strip(xnamag);
	CODEPC(z+1)=IPC14;
	NOMPC(z+1)=strip(IPC140);
	ID_PROV(z+1)=ID01;
	PROV(z+1)=strip(xprov);
	IDVILL_TERRIT(z+1)=ID02;
	NOM_VILL_TERRIT(z+1)=strip(xville);
	ID_COMM_SEC(z+1)=ID03;
	NOM_COMM_SEC(z+1)=strip(xcomm);

	writecase(FEUIL1_DICT); 
endif;

close(FEUIL1_DICT);
PROC IP02A

PROC IP02B
Preproc
IP02B=sysdate("YYYY");
PROC ID06
preproc

If ID05 in 1:5 then
	ID06=1;
	noinput;
endif;
PROC IPC15
preproc

If IPC14 in 1:12 then
	IPC15=2;
	noinput;
endif;
PROC IPC19
{numeric numberVerifiedCases = sqlquery(QUESTPRICE_DICT, "SELECT COUNT(*) FROM cases;");
errmsg("%d cases have been verified", numberVerifiedCases);}
PROC QUESTPRICE_REC000
Preproc
clear_labels();
onfocus

open(Q1_DICT);
	LOG1=1;

reqst = loadcase(Q1_DICT,LOG1);

		j = 1;
		do varying i=1 until i> 1000
			if ID05=COD_AGC(i) then
					IPC01(j)=COD_VAR(i);
					IPC02(j)=strip(NOMVAR(i));
					IPC03(j)=strip(LIBELLE_UNIT(i));
						j = j + 1;
			endif;
		enddo;
close (Q1_DICT);
PROC IPC01
preproc

{x = curocc(QUESTPRICE_REC000);

postproc
if x>1 then
	do varying i = 1 until i = x
	  if IPC01(i)= IPC01(x) then
		errmsg("le produit choisi a déjà été sélectionné");
		reenter IPC01(x);
	  endif;
	enddo;
endif;}


PROC IPC02
preproc
noinput;
{	IPC02=getlabel(IPC01,IPC01);
	IPC02=getvaluelabel(IPC01);}

postproc
	sav();
PROC IPC03
preproc
noinput;
PROC IPC18

	sav();
