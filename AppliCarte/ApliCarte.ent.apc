{Application 'APLICARTE' logic file generated by CSPro}
PROC GLOBAL
numeric lat, long, marquage ;

// Fonction utilisateur appelée lors d'un clic sur un bouton


 // fermer la carte
function closeMap(map m)
    m.hide();
end;

function clickedOnMarker()
    errmsg("Vous avez cliqué sur un marqueur");
end;


function clickedOnMarkerInfoWindow()
    errmsg("Vous avez cliqué sur une fenêtre contextuelle de marqueur");
end;


function onDragMarker(map dragMap, numeric markerId2)
    numeric lati = dragMap.getMarkerLatitude(markerId2);
    numeric longi = dragMap.getMarkerLongitude(markerId2);
    errmsg("Le marqueur a été déplacé vers: %f, %f", lati, longi);
end;


// Cette fonction est appelée lorsque l'utilisateur tape sur la carte.
// Il déplace le marqueur à l'emplacement que l'utilisateur a tapé.

function mapClicked(map maCartes,numeric markId)
   numeric latitude = maCartes.getLastClickLatitude();
   numeric longitude = maCartes.getLastClickLongitude();
   maCartes.setMarkerLocation(markId, latitude, longitude);
end;

// Fonction utilisateur qui sera appelée en cliquant sur le bouton
// pour filtrer les Unités Economiques par statut
function filtrerCarteUE(map myMap)

     numeric choice = accept("Choisissez le statut à afficher", "Terminé", "Partiel");
     if choice > 0 then

        // Effacer les marqueurs actuels
         myMap.clearMarkers();

        // Ajout de marqueurs pour les ménages correspondant au statut choisi
		 forcase RGE_DICT WHERE RGE_DICT.RGFIN in 1:4 do
            numeric marker = myMap.addMarker(RGE_DICT.CG3LAT, RGE_DICT.CG2LO);
			 
            myMap.setMarkerDescription(marker, maketext("%02l - %s", RGE_DICT.ID7, RGE_DICT.RG1)); //,"yellow", "red"
            
		  if RGE_DICT.RGFIN = 1 then
		    marquage = marker;
			// Définir l'icône
			myMap.setMarkerText(marker, maketext("%v", APLICARTE_ID), "yellow", "red");
		  endif;
		  
		 endfor;
		 
     endif;
end;



// Fonction permettant de modifier le texte du marqueur, la description du marqueur ou de supprimer le marqueur
function editMarker(map m, numeric markerId)

     numeric sel = accept("Modifier le marqueur", "Texte", "Description", "Supprimer");
     if sel = 1 then
         string newText = prompt("Entrez le nouveau texte de l'icône");
         if newText <> "" then
             m.setMarkerText(markerId, newText);
         endif;
     elseif sel = 2 then
         string newDescription = prompt("Entrez la nouvelle description de l'icône");
         if newDescription <> "" then
             m.setMarkerDescription(markerId, newDescription);
         endif;
     elseif sel = 3 then
         m.removeMarker(markerId);
     endif;
end;


PROC APLICARTE_FF

PROC APLICARTE_ID

preproc
// Déclarer une carte
map maCarte;

// Ajouter un marqueur sur la carte à -4.315690 de latitude, longitude 15.288760
 numeric markerId = maCarte.addMarker(-4.315690, 15.288760);

filtrerCarteUE(maCarte) ;
markerId = marquage ;

// Set marker popup text
maCarte.setMarkerDescription(markerId, "Unité Econimique");

// Appelez le marqueur d'édition lorsque l'utilisateur appuie sur la fenêtre d'informations contextuelle
maCarte.setMarkerOnClickInfoWindow(markerId, editMarker(maCarte, markerId));

// Définir l'icône
maCarte.setMarkerImage(markerId, "resources/marker_icon.png");

// Définit la fonction appelée lors du clic du marqueur
maCarte.setMarkerOnClick(markerId, clickedOnMarker());

// Définit la fonction qui est appelée sur la fenêtre d'informations sur le marqueur, cliquez sur
maCarte.setMarkerOnClick(markerId, clickedOnMarkerInfoWindow());

// Définir l'icône
maCarte.setMarkerText(markerId, maketext("%v", APLICARTE_ID), "yellow", "Red"); //  "white", "black");

// Définit le texte contextuel lorsque le marqueur est appuyé sur
  // affiche le nom du chef de ménage et le numéro de ménage
  // membres
string popupText = maketext("CM:  Hommes:  Femmes ");
//string popupText = maketext("CM: %s %s Hommes: %d Femmes %d", strip(HEAD_FIRST_NAME),strip(HEAD_LAST_NAME),MALE_MEMBERS, FEMALE_MEMBERS);
 maCarte.setMarkerDescription(markerId, popupText);


// Declare a map
map dragMap;

// Ajoutez un marqueur à la carte à latitude -4.315690, longitude 15.288760
numeric markerId2 = dragMap.addMarker(-4.315626, 15.288870);

// Définit la fonction appelée lors du glissement du marqueur
dragMap.setMarkerOnDrag(markerId2, onDragMarker(dragMap, markerId2));

// Définit la fonction qui est appelée lorsque l'utilisateur appuie sur la carte pour déplacer le marqueur
// au nouveau poste
maCarte.setOnClick(mapClicked(maCarte, markerId));


// *****************

// Ajoute un bouton à la carte qui ferme la carte lorsque l'utilisateur clique dessus
maCarte.addTextButton("Fermer", closeMap(maCarte));

// Display the map Afficher la carte
maCarte.show();
