{Application 'SAISIEHH' logic file generated by CSPro}
 
PROC GLOBAL

set explicit;
{ Definitions of working variables }
array alpha(8) KishGrid(10);	   { Grid used for selection of child for child discipline module }
alpha(26) alphavar;				   { Alpha working variable used in checking alpha vars }
alpha(26) alphanew;                { Alpha working variable used in checking alpha vars }
alpha(62) alphalst;                { The alphabet }
array codes(50);                   { Array used for creating line numbers of household members sleeping under mosquito net}
array alpha(50) labels(50);        { Array used for creating names of household members sleeping under mosquito net} 
alpha(40) yname, ynamehh, tmpname; { List of names for questions }
alpha(900) strnotes;               { for editnote at the end of the interview }
alpha(40) worklabel;               { Alpha variable to get customize text for questions }
array alpha(55) articles(55); 

numeric  hashh;
numeric inEntry;                   
numeric addmode qmark totlen aok alphsize
  maxmem  hhnum
  mindi cln psu err dd ss ddw
  di diwm dich xline 
  a b c d e f g h i j k l lx m n o p q r s t x y found net,rp
  xwc xcc cdline kount opid  er ag xxage ;
  
numeric   hhn,xintnum,xsupnum,xmodcent,xrvisit,xmodify,xpartial,xentryhw,xverif;
numeric   DB, comply, verific, nopartflag;
numeric   qhMoreCount,age1;
string strpart dmois xmois xunite libelle Douzedrmois Quatredrsemaine  trentedrjour ;
file FichSaPart ;

// sauvegarde des données 
Function sav()
	savepartial();
end;


// Quitter
Function quitter()
	savepartial();
	stop(1) ;
end;

{ User defined functions }

  function showCalc()
    execsystem("calc");
  end;

  { setup basic user bar }
  function userbase();
    userbar( clear );

    
    userbar(add text,"ECVM : Ménage");
	userbar(set color,236,254,255);
	
    userbar( add button, "<",    do("PreviousField") );
    userbar( add button, ">",    do("NextField") );
    userbar( add button, ">>|",  do("AdvanceToEnd") );
    userbar( add button, "Note", do("EditNote") );
    userbar( add button, "Lang", do("ChangeLanguage") );
    userbar( add button, "Calc", showCalc );	
    
 	//userbar(add spacing,5);   
	userbar(add button,"Sauvegarde", sav());    
	//userbar(add spacing,5);
	userbar(add text," ");
	
	userbar(add button,"Quitter", quitter());    
	//userbar(add spacing,5);
	userbar(add text," ");
  end;
  
{ --------------------------------------------------------------------------- }
{ valid
  Checks that a variable has a valid value.
  A valid value is less than 96 and not a special value e.g notappl/missing
  Returns: 1 if valid, 0 if not valid                                        }

function valid(xvar);
  valid = (!special(xvar) and xvar < 96)
end;

{ -------------------------------------------------------------------------- }
{ NAtoZero
  Converts notappl (and 99 - for child labour module) values to zero while not changing other values.
  Returns: 0 if input variable is notappl, else returns it unchanged         }
function NAtoZero(xvar);
  if xvar = notappl or xvar=99 then
    xvar = 0
  endif;
  NAtoZero = xvar;
end;


{ clear_labels
Set value labels for certain questions where the response categories can change }
function clear_labels();
	do i = 1 while i <= 50
	  codes(i) = notappl;
	  labels(i) = "";
	enddo;
end;

//Setting a variable value for the currently loaded task
  function setTaskVar(string varName, string varValue)
    //first checking if the variable is already set
    for i in TASKS.TASK_VARIABLES do
      if toupper(strip(varName)) = toupper(strip(TASK_VARNAME(i))) then
	    TASK_VARVAL(i) = varValue;
	    exit;
	  endif;
    enddo;

    //adding a new variable if in case it hasn't been set alerady
    i = 0;
    while i <= maxocc(TASKS.TASK_VARIABLES) do 
      i = i + 1;
	  if length(strip(TASK_VARNAME(i))) = 0 then
	    TASK_VARNAME(i) = strip(varName);
	    TASK_VARVAL(i) = strip(varValue);
	    break;
	  endif;
    enddo;
  end;

  //Getting the variable value using varibale name for the currently loaded task
  function string getTaskVar(string varName)
    do i = 1 while i <= maxocc(TASKS.TASK_VARIABLES)
      if length(strip(TASK_VARNAME(i))) = 0 then
	    break;
	  endif;
      if toupper(strip(varName)) = toupper(strip(TASK_VARNAME(i))) then
	    getTaskVar = strip(TASK_VARVAL(i));
	    break;
  	  endif;
    enddo;
  end;
  
 
 
function listenom()  ;
    clear_labels(); 
     i=1;
      setfile( FichSaPart, concat("C:\RDC123\Data\H",edit("999",HH1), edit("999",HINT), ".dat")) ;  
	     if Filesize( FichSaPart ) > 0 then
		     while FileRead( FichSaPart, strpart ) do
		          if strpart[11:3] = "0HL" and tonumber(strpart[4:2]) = HH2 then  

					 	codes(i) = tonumber(strpart[14:2]);
		           		labels(i)= strip (strpart[16:40]);
     				    i=i+1;	                      
  
		          endif ;
		      enddo;
          endif ;
         close( FichSaPart );
		    		 	   			
end;	


function endmess();
  { Returns true if response is REVIEW }
  endmess = ({addmode and}
             accept("Fin du questionnaire",
                     "Vérifier du questionnaire",
                     "Nouvelle quête./Questionnaire après") 
                     <> 2);
end;
{FR}
function alphachk(alpha(26) alphamask);
{  russian_convert();}
  { first remove all blanks, and duplicate question marks }
  alphanew = "";
  qmark = 0;
  lx = 1;
  do l = 1 while l <= length(strip(alphavar))
    if alphavar[l:1] <> " " and (alphavar[l:1] <> "?" or not qmark) then
      alphanew[lx:1] = alphavar[l:1];
      lx = lx + 1;
      if alphavar[l:1] = "?" then
        qmark = 1;
      endif;
    endif;
  enddo;
  { aok = 0 - string is bad, aok = 1 - string is good }
  totlen = length(strip(alphamask));
  aok = 0;           { assume string is bad - for empty string }
  alphsize = length(strip(alphanew));
  if alphsize then   { not empty string }
    { check for "?" as only character }
    aok = (alphanew[1:1] = "?" and alphsize = 1);
    if !aok then     { if not a single "?", check string }
      aok = 1;       { now assume string is good until we know otherwise }
      l = 1;         { l is position in string of acceptable values }
      a = 1;         { a is position in input string }
      { loop while the string is still good and there are more letters }
      while aok and a <= alphsize do
        aok = pos(alphanew[a:1],alphamask[l:totlen-l+1]);
        if aok then     { letter is acceptable }
          l = l + aok;  { increment l to position after letter in string of acceptable values }
          a = a + 1     { increment a to next letter in input string }
        endif;
      enddo;
    endif;
  endif;
  alphachk = (!aok);    { alphachk = 0 - if string is good, = 1 - if string is bad }
  { now expand variables }
  if aok then
    do l = 1 while l <= length(strip(alphamask))
      if pos(alphamask[l:1],alphanew) then
        alphavar[l:1] = alphamask[l:1]
      elseif pos("?",alphanew) then
        alphavar[l:1] = "?"
      else
        alphavar[l:1] = " "
      endif;
    enddo;
  endif;
end;

{ function to clear codes and labels for household members }
function clean_labels();
	do i = 1 while i <= 50 by 1
	  codes(i)  = notappl;
	  labels(i) = "";
	enddo;
end;

//!!AI start
function onStop();
  if noPartFlag | xmodcent then
    numeric x1 = errmsg(9980) select("Oui", continue, "Non", continue);
    if x1 = 1 then
      advance;
    else
      if !xmodcent then
        stop(-1);
      endif;
    endif;
  else
    savepartial();
    stop(-1);
  endif;
end;
//!!AI end




PROC HH10
preproc
  if !addmode then
    exit;
  endif;

  numeric sub = tonumber(getTaskVar("sub3"));
  if sub = 1 then
    $ = 1;
  else
    $ = 2;
  endif;


{PROC HH11

preproc
  if special(visualvalue($)) then
		HH11 = ( int(systime() / 10000) *100 )+ (int(systime() / 100) % 100) ;
  endif;}


{PROC HH13

preproc
  if special(visualvalue($)) then
		HH13 = ( int(systime() / 10000) *100 )+ (int(systime() / 100) % 100) ;
  endif;}



PROC HH5
preproc
if (!xmodcent | xverif) & !xmodify then
  HH5 = sysdate( "DDMMYYYY" );
endif;

PROC HH8
preproc
  if !addmode then
    exit;
  endif;

  numeric sub = tonumber(getTaskVar("sub1"));
  if sub = 1 then
    $ = 1;
  else
    $ = 2;
  endif;
  

PROC HH9
preproc
  if !addmode then
    exit;
  endif;

  numeric sub = tonumber(getTaskVar("sub2"));
  if sub = 1 then
    $ = 1;
  else
    $ = 2;
  endif;
  

PROC EPMU1HH_FF

preproc

  //Initializing global variables
  SetGlobalVariables();
  tempDir = projectDir + "\Temp";
  utilsDir = projectDir + "\Utils";
  
  setfont(All,"Cambria",30);

  setvaluesets("_FRA");  //to set valuesets en français
  

  //reading the task
  TASK_ID = trimQuotes(readEnviValue("taskId"));
  loadcase(TASKS, TASK_ID);

  //if task is water quality questionnaire task, loading parent household task
  if strip(TASK_TEMPLATENAME) <> "hh_int" & length(strip(TASK_PARENTID)) > 0 then
    TASK_ID = TASK_PARENTID;
    loadcase(TASKS, TASK_ID);
  endif;


  verific = 0;
  maxmem = 50;      { maximum number of household members }
 { maxnet = 10;      { maximum number of bednets. MUST BE EQUAL TO OR LESS THAN MAX OCCUR OF MODTN }
  hhnum  = 0;       { last household number used }
  minage = 15;      { minimum age of eligible women }
  maxage = 49;      { maximum age of eligible women }
  mminage = 15;     { minimum age of eligible men }
  mmaxage = 49;     { maximum age of eligible men }
  minab  = 120;     { minimum age at birth in months = 12 years }
  minam  = 48;      { minimum age at first marriage = 4 years }
  chhlth = 4;       { maximum age at which child is included in child health module - excludes exact age 5 }

} mindi  = 20170101;{ replace "20170101" with earliest interview date in yyyymmdd format }
  addmode = (demode() = ADD);
  opid   = notappl;
  cln=tonumber(sysparm()[1:3]);
  hhn=tonumber(sysparm()[4:2]);
  xintnum  = tonumber( sysparm()[9:3] );
  xsupnum  = tonumber( sysparm()[12:3] );
  xmodcent = tonumber( sysparm()[16:1] );    { modify by central office }
  xrvisit  = tonumber( sysparm()[17:1] );    { revisit HH }
  xmodify  = tonumber( sysparm()[18:1] );    { modify completed HH }
  xpartial = tonumber( sysparm()[19:1] );    { if case has been saved partially }
  xentryhw = tonumber( sysparm()[20:1] );    { enter water quality data }
  alphalst = "ABCDEFGHIJKLMNOPQRSTUVWXYZÃÇÅÄÁÆÈÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÝÞßáãäåæíÉìÂ";
 
  inEntry = (demode() = add | demode() = modify);

  if addmode then
    addmode = tonumber(sysparm()[21:1]) = 0;
  endif;
  noPartFlag = tonumber(sysparm()[21:1]);

  xverif   = tonumber( sysparm()[22:1] );    {verify household schedule by supervisor } //!!AI
  if xverif = default then xverif = 0; endif; //!!AI

  { settings for CAPI }
  if !xmodcent then      { central office desn't have to exit after reviewing one HH }
    set behavior() exit on;
  else
    set behavior() exit off;
    addmode = 0;
    noPartFlag = 1;
  endif;
  set attributes (EPMU1) assisted on;
  set attributes (EPMU1) assisted off (variable (title));

  { set up minimal user bar }
  userbase();
  userbar( show );


postproc
  { update file with households assigned to interviewers }
   //if !xmodcent then
   //  updthhassgn();
   //endif;
   
  if !xmodcent then      { central office desn't have to exit after reviewing one HH }
    stop(-1);
  endif;


PROC HH

preproc

  qhmoreCount = totocc(MODHX000); 
  if ispartial() then
    advance to getsymbol(savepartial);
  endif;

postproc
  endlevel;

PROC IDS0_FORM

//douze derniers mois 

numeric xlastdate;

xlastdate = dateadd( ( ((HH5Y * 100) + HH5M) * 100) + HH5D ,-13,"m");
STRING sldat = edit("99999999",xlastdate);

Douzedrmois = concat(getlabel(HH5M,tonumber(sldat[5:2])) , " ", sldat[1:4]);

// Trente derniers jours

numeric drjours;

drjours = dateadd( ( ((HH5Y * 100) + HH5M) * 100) + HH5D ,-31,"d");
STRING tdrdat = edit("99999999",drjours);
trentedrjour = concat(tdrdat[7:2], " ", getlabel(HH5M,tonumber(tdrdat[5:2])) , " ", tdrdat[1:4]);

PROC HH1
preproc
  if special(visualvalue($)) then
    $ = cln;
  endif;

postproc
  YCLUSTER = $;
  if loadcase( CLUSTERS, YCLUSTER ) then
    HH6 = YURBRUR;
    HH7 = YREGION;
  endif;


PROC HH2
preproc
  if hhn <> 0 & (special(visualvalue($)) | visualvalue($) = hhn) then
    $ = hhn;
  endif;

postproc
  set attributes(HHNAME) native;
  if addmode then
    HHNAME = getTaskVar("hhead");
  else
    if length(strip(HHNAME)) then 
      set attributes (HHNAME) protect; 
    else 
      HHNAME = getTaskVar("hhead");
    endif;
  endif;

PROC HINT
preproc
  if addmode | special(visualvalue($)) then
    $ = xintnum;
    HH3 = xintnum;
    HH4 = xsupnum;
  endif;
  
PROC HLN
preproc
$ = 00;

PROC HH70

preproc

      setfile( FichSaPart, concat("C:\RDC123\Reference\Carto",".dat")) ;  
	     if Filesize( FichSaPart ) > 0 then
		     while FileRead( FichSaPart, strpart ) do					
				  if tonumber(strpart[1:5]) = HH1 and tonumber(strpart[6:3]) = HH2  then  
				//  errmsg(" tonumber(strpart[1:5]) (%02d) = HH1 (%02d) and tonumber(strpart[6:3]) (%02d)  = HH2  (%02d) ",tonumber(strpart[1:5]) , HH1 , tonumber(strpart[6:3]) , HH2 );
				  	  HH70 = tonumber(strpart[9:5]) ; 	
				  	  HH71 = tonumber(strpart[14:5]) ;
				  	  HH72 = tonumber(strpart[19:5]) ;
				  	  HH73 = strpart[24:48] ;
				  	  HH74 = strpart[72:72] ;
				  	  HH75 = strpart[144:1] ;
				  	  HH76 = tonumber(strpart[145:2]) ;
				  	  HH77 = tonumber(strpart[147:2]) ;
				  	  HH78 = tonumber(strpart[149:2]) ;
				  	  HH79 = tonumber(strpart[151:2]) ;
				  	  HH80 = tonumber(strpart[153:2]) ;
				  	  
				  		  HH82 = strpart[155:9] ;
					  	  HH83 = strpart[164:9] ;		
					 {   
				  	  if strpart[155:9] = "" or strpart[164:9] = "" then 
					  	   HH82 = 0;
					      HH83 = 0;
				  	  else
				  	  
					  	  HH82 = tonumber(strpart[155:9]) ;
					  	  HH83 = tonumber(strpart[164:9]) ;
					  endif;
					  
					  }
				  	 exit ;
	            endif;
		      enddo;
		      
          endif ;
         close( FichSaPart );
PROC HH6

preproc
  if addmode | special(visualvalue($)) then
    HH6 = 1;
  endif;
  
PROC HH7
preproc

HH7 = 10 ;
PROC HH5D

preproc
if demode() = add then 
	if special(visualvalue($)) then
	    x = sysdate();
	    if HH5D = notappl then HH5D = sysdate( "DD" );endif;
	    if HH5M = notappl then HH5M = sysdate( "MM" );endif;
	    if HH5Y = notappl then HH5Y = sysdate( "YYYY" );endif;
	endif;
endif;

postproc
numeric xdate,xmoisannee;
xdate = (((visualvalue(HH5Y)*100)+visualvalue(HH5M))*100)+ HH5D;

if xdate > sysdate("YYYYMMDD") then 
errmsg("La date saisie est supérieure à la date du jour ,veuillez régler la date de la tablette");
stop(1) ;
endif;
PROC HH11H

preproc
if demode() = add then
  if special(visualvalue($)) then
    x = systime();
    if HH11H = notappl then HH11H = int(x / 10000);endif;
    if HH11M = notappl then HH11M = int(x / 100) % 100;endif;
  endif;
endif;


PROC HHNAME


postproc

  { Check that response is alphabetic and starts in the first column }
  if !pos($[1:1],alphalst) then
    errmsg( 9991 );
    set attributes ($) native;
    reenter
  endif;
 { 
  if strip(HHNAME) <> strip(HH74) then 
  	errmsg("Vous avez changé le nom du chef de menage, justifier  HHNAME = %s   HH74 = %s  ",strip(HHNAME), strip(HH74) );
  
		 editnote ();
		 if length (strip (editnote())) < 10 then
			 errmsg (" Donner plus de précision ");
			 reenter;
		 endif; 
  endif;
  }
  
PROC HHADDR

preproc

  if !addmode then
    exit;
  endif;

  $ = getTaskVar("address");
PROC HH12

postproc

  if $ <> 1 then
    skip to HH46
  endif;  
PROC MODHX000

postproc
for i in MODHX000
  if MX3 = 2 and MX4 = MX4(1) then
    errmsg(0071,strip(MX2),i,strip(MX2(1)))
      select ("relation de mari/femme",MX3,"Sexe du chef de ménage",MX4(1), "Sexe du mari/femme", MX4); 
      
  endif;
enddo;

ynamehh = MX2(1);
PROC MX1

preproc

 if addmode then
 	savepartial ();
 endif;	
 $ = curocc ();


if strip(HHNAME) = strip(HH74) and curocc ()=1 then

  MX2 =   strip(HHNAME) ;
  
  
   if HH75="F" or HH75="2"  then  MX4 = 2  endif;
   if HH75="M" or HH75="1"  then  MX4 = 1  endif;   
   
endif ;
PROC MX2

preproc

if curocc(MODHX000) = 1 and !xmodcent and !xmodify and !xmodify and !xpartial then
   $ = HHNAME;
endif;

postproc

if !pos($[1:1],alphalst) then
   errmsg( 9991 );
   reenter
endif;
  
  

PROC MX3

onfocus

  if curocc() = 1 then
    clear_labels();
    codes(1) = 1;
    labels(1) = "Chef de ménage"
  endif;

postproc

{ Head of household must be on first line }
if ($ = 1) <=> (MX1 <> 1) then
  errmsg(0070,strip(MX2),strip(getlabel($,$)));
  reenter;
endif;

PROC MX4


postproc

if strip(HHNAME) = strip(HH74) and curocc ()=1 then
   
   
   if (HH75="F" or HH75="2") and MX4 <> 2 then 
   	 errmsg("Il me semble que %s était une femme ! ",strip(HH74) )
   	 select("Revenir ", MX4,"Continuer", continue ) ;
   endif;
   
   if (HH75="M" or HH75="1") and MX4 <> 1 then 
   	 errmsg("Il me semble que %s était un homme ! ",strip(HH74) )
   	 select("Revenir ", MX4,"Continuer", continue ) ;
   endif;
   
endif ;


if strip(HHNAME) <> strip(HH74) and curocc ()=1 then

   if(HH75="F" or HH75="2") and MX4 <> 2 then 
     errmsg("Vous avez changé le nom du chef de menage et aussi le sexe! ")
   	 select("Revenir ", MX4,"Continuer", continue ) ;
    endif;
    
   if(HH75="M" or HH75="1") and MX4 <> 1 then 
	     errmsg("Vous avez changé le nom du chef de menage et aussi le sexe! " )
	   	 select("Revenir ", MX4,"Continuer", continue ) ;
    endif;
    
endif ;

if MX1 > 1 & MX3 =2 & $ = $(1) then
	errmsg( 0060, strip(MX2), getlabel( $, $ ), strip(MX2(1)), getlabel( $, $(1) ) )
	select( "Sexe du conjoint/partenaire", $, "Sexe du chef de ménage", $(1),  "Continuer", continue );               {FR}                      
	reenter;
endif;
 
 
if curocc () = 1 and  ( ((HH75="M" or HH75="1") and MX4 <> 1 ) or ( (HH75="F" or HH75="2") and MX4 <> 2) ) then
     errmsg("Vous avez changé le sexe du chef de menage, justifier ");
   
	 editnote ();
	 if length (strip (editnote())) < 10 then
		 errmsg (" Donner plus de précision ");
		 reenter;
	 endif; 


endif;


  rp = MX3;
  n  = MX4;
  

PROC MX0

postproc

if $ <> 1 then
  endgroup;
endif;

PROC HHAUX

if $ = 1 then
  reenter MX0(totocc(MODHX000))
endif;
  
PROC HH48


preproc
$ = totocc(MODHX000); noinput ;


postproc
	if strip(HHNAME) = strip(HH74) and HH48 < HH76 then
		 errmsg(" La taille du ménage est inférieure à celle declarée pendant la cartographie ")
		 select("Autre membre du ménage ", HHAUX,"Continuer", continue ) ;
	endif; 


	if strip(HHNAME) <> strip(HH74) and HH48 < HH76 then
		 errmsg(" Bien que le nom du chef de menage ait changé, nous constatons que la taille du ménage est inférieure à celle de la cartographie")
		 select("Autre membre du ménage ", HHAUX,"Continuer", continue ) ;
	endif; 
	
	
	if HH48 < HH76 then 
		errmsg (" La taille du ménage a diminué,  justifier ");
		
		
		 editnote ();
		 if length (strip (editnote())) < 10 then
		 errmsg (" Donner plus de précision ");
		 reenter HHAUX;
		 endif; 

	endif;



PROC DEMO000

preproc
 do varying i=1 until i> HH48
  M01(i) = MX1(i);
  M02(i) = MX2(i);
  M03(i) = MX3(i);
  M04(i) = MX4(i);
enddo;


PROC M02


preproc

  if addmode then
    savepartial();
  endif;
  
PROC M05


if M05 = 3 and M03 = 1 then
		errmsg("%s(Chef de ménage) ne peut pas être visiteur",strip(M02));
		reenter;		
endif;
PROC M06A

if $ = 2 then
	skip to M07J
endif;
PROC M07M


if M07J > 30 and M07M in 4,6,8,9,10 then
	errmsg("Le mois de %s ne peut avoir plus de 30 jours", strip(getlabel($,$)))
	select("Modifier le jour",M07J,"Modifier le mois",M07M);
endif;

if M07J > 31 and M07M in 1,3,5,7,8,10,12 then
	errmsg("Le mois de %s ne peut avoir plus de 31 jours", strip(getlabel($,$)))
	select("Modifier le jour",M07J,"Modifier le mois",M07M);
endif;

if M07J > 29 and M07M = 2 then
	errmsg("Le mois de %s ne peut avoir plus de 29 jours", strip(getlabel($,$)))
	select("Modifier le jour",M07J,"Modifier le mois",M07M);
endif;
PROC M07A


preproc
  numeric  dnais , djour , xage jjmm,  jj,  mm,  aaaa ;
  
  
Postproc

if !(M07J in 98,missing) & !(M07M in 98,missing) & !(M07A in 9998,missing) then
         
    dnais =( ((M07A*100) + M07M )  * 100) +   M07J   ;
	 jjmm =  int(HH5 / 10000)  ;
	 jj =  int(jjmm / 100)  ;
	 mm =  int(jjmm %  100)  ;
	 aaaa =  int(HH5 % 10000)  ;
    djour = ( ((aaaa*100) + mm )  * 100) +   jj   ;
    
    //personne pour lesquelles la date de naissance entrée corespond à une date ilterieure à celle de l'enquête
    
    if M07M > mm and M07A >= aaaa then 
	    errmsg(" %s ne peut être né après l'enquête ",strip(M02) )
	    select("Modifier le mois de naissance",M07M , "Modifier l'année de naissance", M07A);
    endif;
    
    
endif;
PROC M08

preproc
  numeric  dnais , djour , xage jjmm,  jj,  mm,  aaaa, xageM ;

if !(M07J in 98,missing) & !(M07M in 98,missing) & !(M07A in 9998,missing) then
         
    dnais =( ((M07A*100) + M07M )  * 100) +   M07J   ;
	 jjmm =  int(HH5 / 10000)  ;
	 jj =  int(jjmm / 100)  ;
	 mm =  int(jjmm %  100)  ;
	 aaaa =  int(HH5 % 10000)  ;
    djour = ( ((aaaa*100) + mm )  * 100) +   jj   ;
    
    xage =  datediff(dnais,djour,"y");  
    
    if xage < 5 then
		M08 = xage;
		advance to M08A;
	endif;   
    
endif;

sav();

postproc

if $ = notappl or $ = missing then
   errmsg (0031);
   reenter;
endif;

//Contrôle de l'age du chef de ménage

if M03 = 1 and M08 < 15 then
    errmsg(0075,strip(M02),M08);
    reenter;
endif;
  
// Calcul de L"age

if !(M07J in 98,missing) & !(M07M in 98,missing) & !(M07A in 9998,missing) then
                      
    if  abs(xage - M08) = 0 then 
        
    // Personne agé de 95 ans et plus
    elseif xage > 95 then
     	M08 = 95;    
    else
    	errmsg("L'âge calculé de %S est %02d ans, mais vous avez saisi %02d ans",strip(M02), xage , M08 ) ;
    	reenter ;
    endif ;
    
else

	xage =  2018 - M07A ;
	
	if abs(xage - M08) <> 0 then
		errmsg("L'âge calculé de %S est %02d, mais vous avez saisi %02d ",strip(M02), xage , M08 ) ;
    	reenter ;
    endif;
	 
endif;



//Conjoint du chef	2

if M03 = 2 then

  if M04 = 1 and M08  < 15 then 
  	errmsg(" Age du conjoint incorrect ") select ("Modifier l'age",M08,"continuer",continue);
  endif ;
  if M04 = 2 and M08  < 12 then 
  	errmsg("  Age de la conjointe incorrect  ")select ("Modifier l'age",M08,"continuer",continue);
  endif ;
  
endif ;
	
	
//Enfant du chef de Ménage	3

if M03 = 3 then

  if M04(1)=1 and ( M08(1) - M08) < 15 then 
  	errmsg(" Différence d'ages entre l'enfant et son père est incorrecte ")select ("Modifier l'année de naissance",M07A,"Modifier l'âge",M08);; 
  endif ;
  if M04(1)=2 and ( M08(1) - M08) < 12 then 
  	errmsg(" Différence d'ages entre l'enfant et sa mère est incorrecte ")select ("Modifier l'année de naissance",M07A,"Modifier l'âge",M08);; 
  endif ;
  
endif ;
	
	
//Père ou mère du chef 	5

if M03 = 5 then

  if M04 = 1 and (M08 - M08(1)) < 15 then 
  	errmsg(" Différence d'ages entre le père et le chef de ménage est incorrecte "); 
  	reenter ; 
  endif ;
  if M04 = 2 and (M08 - M08(1)) < 12 then 
  	errmsg(" Différence d'ages entre la mère et le chef de ménage est incorrecte "); 
  	reenter ; 
  endif ;
  
endif ;

if M08 >= 5 then
	skip to M09;
endif; 
PROC M08A




// Calculer l'age en mois pour les enfants de moins de 5 ans
// ---------------------------------------------------------



preproc
  numeric  Mdnais , Mdjour, Mjjmm,  Mjj,  Mmm,  Maaaa, xageM ;
  
// Calcul de L"age en mois

if M07A >= 2013 then
		
		if !(M07J in 98,missing) & !(M07M in 98,missing) & !(M07A in 9998,missing) then
		         
		    Mdnais =( ((M07A*100) + M07M )  * 100) +   M07J   ;
		    Mdjour =( ((HH5Y*100) + HH5M )  * 100) +   HH5D   ;


		     M08A = datediff(Mdnais,Mdjour,"m"); 
		 else
		   errmsg("Enfant 5 ans ou moins, Veuilez saisir le Jours Mois et Année  ");     
		   Reenter M07J ;
		endif;
else 

 skip to M09 ;
 		
endif  ;

PROC M09

Preproc

if M03 = 3 and M04(1) = 1 then 
	M09 = 1;
	M10 = 1;
	M11 = 1;
	advance to M12;   
endif;

postproc

	a = count(MODHX000 where (MX3 = 5 and MX4 = 1));  //père du chef
	b = count(MODHX000 where (MX3 = 6 and MX4 = 1));  // Mère du conjoint
	c = count(MODHX000 where (MX3 = 1 and MX4 = 1));  // Chef de ménage
	d = count(MODHX000 where (MX3 = 2 and MX4 = 1));  //Conjoint du chef ayant un enfant
	e = count(MODHX000 where (MX3 = 7 and MX4 = 1));  // Grand père du chef
	f = count(MODHX000 where (MX3 = 8 and MX4 = 1));  //Grand père du conjoint
	g = count(MODHX000 where (MX3 in 3,5,7 and MX4 = 1)); // Père d'autre parent du chef
	h = count(MODHX000 where (MX3 in 4,6,8 and MX4 = 1)); // Père d'autre parent du conjoint
	k = count(MODHX000 where (MX3 in 9,10 and MX4 = 1));  // Autres
	

if M09 <> 1 then
		skip to M11;
else 

	if (M03 = 1 and a = 0) or (M03 = 2 and b = 0) or (M03 = 3 and d = 0 and M04(1) <> 1) or (M03 = 4 and d = 0) or (M03 = 5 and e = 0) or (M03 = 6 and f = 0) or (M03 = 7 and g = 0) or (M03 = 8 and h = 0) or (M03 in 9,10  and k = 0) then
		errmsg("Le père de %s ne vit pas dans le ménage", strip(M02));
		reenter ;
	endif;

endif;
PROC M10

Preproc

clear_labels(); 


Onfocus

	j = 1;
    
  	//Père du chef de ménage
  	
  	if M03 = 1 then
	  	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX3(i) = 5 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;
						 
		enddo;
	
	// Père du(de la) conjoint(e)
		
    elseif M03 = 2 then
	  	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX3(i) = 6 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
		
	//Père de l'enfant du chef de ménage
	
	elseif M03 = 3 then
	  	do varying i=1 until i> HH48
					
			if MX4(i) = 1 and (MX3(i) = 1 or MX3(i) = 2) then
				   codes(j) = MX1(i);
				   labels(j) = strip(MX2(i));
				   j = j + 1;
			endif;
			
		enddo;
		
	//Conjoint ayant un fils dans le ménage
		
	elseif M03 = 4 then
	  	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX3(i) = 2 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
	
	//Grand-père du chef de ménage
	
	 elseif M03 = 5 then
	  	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX3(i) = 7 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
		
	// Grand père du(de la) conjoint(e)
	
	elseif M03 = 6 then
	  	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX3(i) = 8 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
	
	//Père d'autre parent du chef de ménage
	
	elseif M03 = 7 then
	  	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX1(i) <> M01 and MX3(i) in 3,5,7 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
	
	//Père d'autre parent du(de la) conjoint(e)
	
	elseif M03 = 8 then
	  	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX1(i) <> M01 and MX3(i) in 4,6,8 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;	
	
	else
	  	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX1(i) <> M01 and MX3(i) in 9,10 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
		
    endif;
    
    SetValueSet( @GetSymbol(),codes,labels);
    setcapturetype(M10,3);
   


//********************************************************************************************************************************************************************************************************************************************************
postproc

if (M08(M10) - M08(M01)) < 15 then
	errmsg("%s ne peut être le père de %s car la difference d'âge n'est pas respecté",Strip(M02(M10)),strip(M02(M01)));
 	reenter;
endif;
	

M11 = 1 ;
advance to M12;
PROC M11

if M03 = 3 and M04(1) = 1 and M11 <> 1 then 
	errmsg("le lien de parenté de %S avec le Chef de ménage pause problème", M02); 
	reenter;
endif; 
PROC M12

Preproc
if M03 = 3 and M04(1) = 2 then 
	M12 = 1;
	M13 = 1;
	M14 = 1;
	advance to M15   
endif;


postproc

	a = count(MODHX000 where (MX3 = 5 and MX4 = 2));  //Mère du chef
	b = count(MODHX000 where (MX3 = 6 and MX4 = 2));  //Mère du conjoint
	c = count(MODHX000 where (MX3 = 1 and MX4 = 2));  //Chef de ménage
	d = count(MODHX000 where (MX3 = 2 and MX4 = 2));  //Conjoint du chef ayant un enfant
	e = count(MODHX000 where (MX3 = 7 and MX4 = 2));  //Grand mère du chef
	f = count(MODHX000 where (MX3 = 8 and MX4 = 2));  //Grand mère du conjoint
	g = count(MODHX000 where (MX3 in 3,5,7 and MX4 = 2));  //Mère d'autre parent du chef
	h = count(MODHX000 where (MX3 in 4,6,8 and MX4 = 2));  //Mère d'autre parent du conjoint
	k = count(MODHX000 where (MX3 in 9,10 and MX4 = 2));  //Autres
	

if $ <> 1 then
	skip to M14

else
	
	if (M03 = 1 and a = 0) or (M03 = 2 and b = 0) or (M03 = 3 and d = 0 and M04(1) <> 2) or (M03 = 4 and d = 0) or (M03 = 4 and d = 0) or (M03 = 5 and e = 0) or (M03 = 6 and f = 0) or (M03 = 7 and g = 0) or (M03 = 8 and h = 0) or (M03 in 9,10  and k = 0) then
		errmsg("La mère de %s ne vit pas dans le ménage", strip(M02));
		reenter ;
	endif;

endif;



// Si c'est l'enfant du conjoint est que la mère ne vit pas dans le ménage vérifier

if M03 = 4 and M12 = 2 then
		errmsg("Enfant du conjoit dont la mère n'est pas dans le ménage ! vérifier " );

endif;
PROC M13

Preproc

clear_labels();    


onfocus

    j = 1;
    	
	// Mère du chef de ménage
	
	if M03 = 1 then
	  	do varying i=1 until i> HH48
			if MX4(i) = 2 and MX3(i) = 5 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
	
	// Mère du(de la) conjoint(e) du chef
		
    elseif M03 = 2 then
	  	do varying i=1 until i> HH48
			if MX4(i) = 2 and MX3(i) = 6 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
		
	// Mère de l'enfant du chef de ménage
	
	elseif M03 = 3 then
	  	do varying i=1 until i> HH48
			if MX4(i) = 2 and MX3(i) in 1,2 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif; 
			 
		enddo;
	
	// Mère de l'enfant du conjoint
		
	elseif M03 = 4 then
	  	do varying i=1 until i> HH48
			if MX4(i) = 2 and MX3(i) = 2 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
	
	// Grand-mère du chef de ménage
		
	elseif M03 = 5 then
	  	do varying i=1 until i> HH48
			if MX4(i) = 2 and MX3(i) = 7 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
		
	// Grand-mère du(de la) conjoint(e)
	
	elseif M03 = 6 then
	  	do varying i=1 until i> HH48
			if MX4(i) = 2 and MX3(i) = 8 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
		
	// Mère d'autre parent du chef de ménage	
		
	elseif M03 = 7 then
		
		do varying i=1 until i> HH48
			if MX4(i) = 2 and MX1(i) <> M01 and MX3(i) in 3,5,7 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
	
	// Mère d'autre parent du(de la) conjoint(e)
	
	elseif M03 = 8 then
		
		do varying i=1 until i> HH48
			if MX4(i) = 2 and MX1(i) <> M01 and MX3(i) in 4,6,8 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
		
	else
	
	
	  	do varying i=1 until i> HH48
			if MX4(i) = 2 and MX1(i) <> M01 and MX3(i) in 9,10 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
		
    endif;
        
    SetValueSet(@GetSymbol(),codes,labels);
    setcapturetype(M13,3);


//******************************************************************************************************************************************************************************************************************************************
postproc

if (M08(M13) - M08(M01)) <= 12 then
	errmsg("%s ne peut être la mère de %s car la difference d'âge n'est pas respecté",Strip(M02(M13)),strip(M02(M01)));
 	reenter;
endif;


M14 = 1 ;
advance to M15;
PROC M14

sav();

if M03 = 3 and M04(1) = 2 and M14 <> 1 then 
	errmsg("le lien de parenté de %S avec le Chef de ménage pause problème", M02); 
	reenter;
endif;
PROC M16A

if $ = 1 then
	skip to M19
endif;
PROC M16B

preproc

clear_labels();


Onfocus


do varying i=1 until i > M08+1

	if i-1 = 0  then
		
		codes(i)= i-1 ;  
		labels(i)= "Moins d'un an" ;
	
	elseif i-1 = 1 then
		
		codes(i)= i-1 ;  
		labels(i)= maketext("%d  an",i-1);
	
	else
	
		codes(i)= i-1;  
		labels(i)= maketext("%d  ans",i-1);
		
	endif;
	
enddo;

setvalueset(@getsymbol(), codes, labels);
setcapturetype($,1);
PROC M17A

sav();

if M17A in 1,2,3 then
	skip to M18;
endif;

if M17A in 4,5 then
	skip to M17B;
endif;

if M17A = 6 then
	skip to M17C;
endif;

PROC M17B

skip to M18;
PROC M18

if $ = 8 then
   editnote();
   if length (strip(editnote()))< 10 then
  		errmsg("Raison de déplacement non valide");
    	reenter;
	endif;
endif;
PROC M19

preproc

if M08 in 0:9 or M08A in 0:59 then
	$ = 1;
	advance to M20;
Endif;


postproc

if curocc()>0 and  M03 = 2 and  M03 <> M03(1) then
	errmsg("La Situation matrimoniale du couple est différente ! ");
	
endif;



if M03 = 2 and  M19 in 1,5,6 then
	errmsg("%s ne peux etre %s",strip(M02),getlabel($,$));
	reenter;
endif;

Numeric compt;
compt = count(MODHX000 where MX3 = 2);

if compt <> 0 and M19(1) in 1,5,6 then
	errmsg("%s ne peut être %s",strip(M02),getlabel($,$));
	reenter;
endif;

if M08 < 12 and $ in 2:6 then
 errmsg("%s  est %s ? vérifier  ! ", m02 ,getlabel($,$) );
  reenter ;
endif;  



if $ in 1,5,6 then skip to M22 endif;

PROC M20

sav();

Numeric compt; 
compt = count(MODHX000 where MX3 = 2);

if compt <> 0 and M20(1) = 2 and M04 = 2 then
	errmsg("Le conjoint de %s(Chef de ménage) vit dans le ménage",strip(M02));
	reenter;
endif;

if compt <> 0 and M20(1) = 2 and M04 = 1 then
	errmsg("La conjointe de %s(Chef de ménage) vit dans le ménage",strip(M02));
	reenter;
endif;



if M03 = 2 and M20 = 2 and M04 = 2 then
	errmsg("Le conjoint de %s vit dans le ménage",strip(M02));
	reenter;
endif;

if M03 = 2 and M20 = 2 and M04 = 1 then
	errmsg("La conjointe de %s vit dans le ménage",strip(M02));
	reenter;
endif;



if M20 <> 1 then 
 	skip to M22 

else

//*************   EPOUSE DANS LE MENAGE  ******************************************************************************************************
		
	
    c = count(MODHX000 where (MX3 = 7 and MX4 = 2)); 
    d = count(MODHX000 where (MX3 = 8 and MX4 = 2));
    e = count(MODHX000 where (MX3 in 5,7 and MX4 = 2));
    f = count(MODHX000 where (MX3 in 6,8 and MX4 = 2));
    g = count(MODHX000 where (MX3 in 3,5,7 and MX4 = 2));
    h = count(MODHX000 where (MX3 in 4,6,8 and MX4 = 2));
    k = count(MODHX000 where (MX3 in 9,10 and MX4 = 2)); 
    
	
	if  (M03 = 3 and M04 = 1 and c = 0) or (M03 = 4 and M04 = 1 and d = 0) or (M03 = 5 and M04 = 1 and e = 0) or (M03 = 6 and M04 = 1 and f = 0) or (M03 = 7 and M04 = 1 and g = 0) or (M03 = 8 and M04 = 1 and h = 0) or ( M04 = 1 and not(M03 in 1:8) and k = 0) then 
		errmsg("L'épouse de %s ne vit pas dans le ménage", strip(M02));
		reenter M20;
	endif;
	   

//*************   EPOUX DANS LE MENAGE   ******************************************************************************************************	
	
	
	n = count(MODHX000 where (MX3 = 7 and MX4 = 1));
	o = count(MODHX000 where (MX3 = 8 and MX4 = 1));
	p = count(MODHX000 where (MX3 in 5,7 and MX4 = 1));
	q = count(MODHX000 where (MX3 in 6,8 and MX4 = 1));
	r = count(MODHX000 where (MX3 in 3,5,7 and MX4 = 1));
	s = count(MODHX000 where (MX3 in 4,6,8 and MX4 = 1));
	t = count(MODHX000 where (MX3 in 9,10 and MX4 = 1));
	
	
	if (M03 = 3 and M04 = 2 and n = 0) or (M03 = 4 and M04 = 2 and o = 0) or (M03 = 5 and M04 = 2 and p = 0) or (M03 = 6 and M04 = 2 and q = 0) or (M03 = 7 and M04 = 2 and r = 0) or (M03 = 8 and M04 = 2 and s = 0) or ( M04 = 2 and not(M03 in 1:8) and t = 0) then
		errmsg("L'époux de %s ne vit pas dans le ménage", strip(M02));
		reenter M20;
	endif ; 

endif;
PROC M21

preproc
    clear_labels();    
    
    
onfocus

	j = 1;
    
    //Code du Conjoint du chef de ménage
    
    if M04 = 1 and M03 = 1 then
    
	    do varying i=1 until i> HH48
			if MX4(i) = 2 and MX3(i) = 2 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
		
	elseif M04 = 2 and M03 = 1 then
    
	    do varying i=1 until i> HH48
			if MX4(i) = 1 and MX3(i) = 2 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;

	// Code du chef de ménage
	
	elseif M04 = 1 and M03 = 2 then
    		   
    	do varying i=1 until i> HH48
			if MX4(i) = 2 and MX3(i) = 1 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo; 
    
    elseif M04 = 2 and M03 = 2 then
    		   
    	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX3(i) = 1 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo; 
     
     //Code de l'époux(se) de l'enfant du chef de ménage
     
     elseif M04 = 1 and M03 = 3  then
    		   
    	do varying i=1 until i> HH48
			if MX4(i) = 2 and MX1(i) <> M13 and MX3(i) = 7 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo; 
    
    elseif M04 = 2 and M03 = 3 then
    		   
    	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX1(i) <> M13 and MX3(i) = 7 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo; 
     
     
     //Code de l'époux(se) de l'enfant du conjoint
     
     elseif M04 = 1 and M03 = 4  then
    		   
    	do varying i=1 until i> HH48
			if MX4(i) = 2 and MX1(i) <> M13 and MX3(i) = 8 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo; 
    
    elseif M04 = 2 and M03 = 4 then
    		   
    	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX1(i) <> M13 and MX3(i) = 8 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo; 
		
	// Code du Conjoint parent chef de ménage
     
      elseif M04 = 1 and M03 = 5  then
    		   
    	do varying i=1 until i> HH48
			if MX4(i) = 2 and MX1(i) <> M13 and MX3(i) in 5,7 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo; 
    
    elseif M04 = 2 and M03 = 5 then
    		   
    	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX1(i) <> M13 and MX3(i) in 5,7 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo; 
     
     
     // Code du Conjoint parent du conjoint
     
      elseif M04 = 1 and M03 = 6  then
    		   
    	do varying i=1 until i> HH48
			if MX4(i) = 2 and MX1(i) <> M13 and MX3(i) in 6,8 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo; 
    
    elseif M04 = 2 and M03 = 6 then
    		   
    	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX1(i) <> M13 and MX3(i) in 6,8 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo; 
    
    
    // Code du Conjoint d'autre parent du chef de ménage
     
      elseif M04 = 1 and M03 = 7  then
    		   
    	do varying i=1 until i> HH48
			if MX4(i) = 2 and MX1(i) <> M13 and MX3(i) in 3,5,7 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo; 
    
    elseif M04 = 2 and M03 = 7 then
    		   
    	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX1(i) <> M13 and MX3(i) in 3,5,7 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo; 
     
     
     // Code du Conjoint d'autre parent du conjoint
     
      elseif M04 = 1 and M03 = 8  then
    		   
    	do varying i=1 until i> HH48
			if MX4(i) = 2 and MX1(i) <> M13 and MX3(i) in 4,6,8 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo; 
    
    elseif M04 = 2 and M03 = 8 then
    		   
    	do varying i=1 until i> HH48
			if MX4(i) = 1 and MX1(i) <> M13 and MX3(i) in 4,6,8 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo; 
     
     
    // Code de l'époux(se) de x
    
    elseif M04 = 1 then
    
	    do varying i=1 until i> HH48
			if MX4(i) = 2 and MX1(i) <> M13 and MX3(i) in 9,10 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;    
   
    elseif M04 = 2 then
    
	    do varying i=1 until i> HH48
			if MX4(i) = 1 and MX1(i) <> M10 and MX3(i) in 9,10 then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;  
		enddo;
    endif;
    
    SetValueSet( @GetSymbol(), codes, labels );
    setcapturetype(M21,3);
PROC M23
// La question n'est posée qu'aux membres permanents du Ménage

Preproc

if M05 = 3 then
	skip to M25;
Endif;



postproc

Numeric nbremois;

if M22 in 1:12 then
nbremois = M22 * 30;
endif;

if M23 > nbremois  and   M22<> 0 then
	errmsg("Le nombre de jours saisis est supérieur au nombre de jours passés par %s dans le ménage",strip(M02));
	reenter;
endif;

if M22 =0 and M23>29 then
	errmsg("Le nombre de jours saisis equivaut à un mois d'absence, Regarder le temps passé !" );
endif;

if $ = 0 then
	skip to M25
endif;
PROC M24


preproc
{
if M22 = 12 then
	skip to M25;
endif;
}




postproc


if M24 = 8 then
   editnote();
    if length (strip(editnote()))< 10 then
  		errmsg("Principale raison d'absence non valide");
    	reenter;
	endif;
Endif;
PROC M25

if $ <> 1 then
   skip to M27
endif;
PROC M27

sav();

if M27 = 11 then
   editnote();
    if length (strip(editnote()))< 10 then
  		errmsg("Nom de la réligion non valide");
    	reenter;
	endif;
Endif;


PROC REPCAR

Preproc

clear_labels(); 


Onfocus

	j = 1;
    
	do varying i=1 until i> HH48
		
		if M08(i) >= 5 then
			codes(j) = MX1(i);
			labels(j) = strip(MX2(i));
			j = j + 1;	
		endif;
							 
	enddo;
    
    SetValueSet( @GetSymbol(),codes,labels);
    setcapturetype(REPCAR,3);
PROC HH53
Preproc
 HH53 = count(DEMO000 where M08 >= 10);

PROC HH50
Preproc
 HH50 = count(DEMO000 where M08 >= 5);
PROC HH51
Preproc
 HH51 = count(DEMO000 where M08 >= 18);

PROC HH54
Preproc
 HH54 = count(DEMO000 where M08 >= 7);
 
PROC HH52
Preproc
 HH52 = count(DEMO000 where M04 = 2 and M08 in 12:49 );

PROC HH49

Preproc
 HH49 = count(DEMO000 where  M08 >= 3 );
PROC HH60


Preproc
 HH60 = count(DEMO000 where  M08 >= 15 );
PROC MODED000

preproc

j = 1;
 do varying i = 1 until i > HH48
	if M08(i) >= 3 then
		ED00(j) = M01(i);
		EDNOM(j) = M02(i);
		j = j + 1;
	endif;
enddo;


PROC ED00

xxage = ED00 ;
PROC EDNOM


preproc

  if addmode then
    savepartial();
  endif;
PROC ED01

sav();
PROC ED04B

//  1 = Oui --> ED.06       2 = Non


if ED04B = 1 then skip to ED06A endif ;

//Si, ED04A = 2 et ED04B = 2 , passer à ED05

if ED04A = 1 and ED04B = 1 then skip to ED06A Endif;

// si ED04A = 1 et ED04B = 2, passer ED12										

if ED04A = 1 and ED04B = 2 then skip to ED12 endif



PROC ED05

sav();

// '---►ED,36

if ED05 = 17 then
   editnote();
    if length (strip(editnote()))< 10 then
  		errmsg("Raison non valide");
    	reenter;
	endif;
Endif;

skip to ED36 ;
PROC ED08

sav();

// 2 = Non ==> ED12

if  ED08 = 2 then skip to ED12  endif;


// si ED04B = 1 et ED08 = 2  '==>ED12

if ED04B = 1 and ED08 = 2 then skip to ED12 endif;

// si ED04 = 2 et ED08 = 2  '==>ED34

if ED04B = 2  and ED08 = 2 then skip to ED34 endif;


PROC ED09A


if ED09A = 4 then

	k = 0;

	do varying i=1 until i> HH48
		if M08(i) >= 5 and MX1(i) <> ED00 and MX1(i) <> M10(ED00) and MX1(i) <> M13(ED00) then
			k = k + 1;
		endif;
	enddo;
	
	if k = 0 then
	errmsg("Il n'existe pas d'autres membres dans le ménage");
	reenter;
	
    endif;
	
endif;


if ED09A = 8 then
    editnote();
    if length (strip(editnote()))< 10 then
  		errmsg("Personne non valide");
    	reenter;
	endif;
endif;
PROC ED09B

preproc
    clear_labels(); 
    
    if ED09A = 7 then
	ED09B = ED00;
	advance to ED10;
    endif;

	if ED09A in 5,6,8 or (M09(ED00) = 2 and ED09A = 1) or (M12(ED00) = 2 and ED09A = 2) or (M12(ED00) = 2 and M09(ED00) = 2  and ED09A = 3) then
		ED09B = 0;
		advance to ED10;
	elseif M09(ED00) = 1 and ED09A = 1 then
		ED09B = M10(ED00);
		advance to ED10;
	elseif M12(ED00) = 1 and ED09A = 2 then
		ED09B = M13(ED00);
		advance to ED10;
	elseif M12(ED00) = 1 and M09(ED00) = 1 and ED09A = 3 then
		ED09B = M10(ED00);
		advance to ED10;
	endif;

    
//Afficher le code du membre du ménage qui paie la formation
onfocus
	
	clear_labels();
	
	j = 1;
  			
	if M09(ED00) = 1 and ED09A = 1 then
		do varying i=1 until i> HH48
	  		if M08(i) >= 5 and M10(ED00) = MX1(i) then
	  		   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			 endif;
		enddo;
		
	elseif M12(ED00) = 1 and ED09A = 2 then
		do varying i=1 until i> HH48
	  		if M08(i) >= 5 and M13(ED00) = MX1(i) then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;
		enddo;
		
	elseif M12(ED00) = 1 and M09(ED00) = 1  and ED09A = 3 then
		do varying i=1 until i> HH48
	  		if M08(i) >= 5 and M10(ED00) = MX1(i) then
	  		   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			 endif;
		enddo;
		
	elseif ED09A = 4 then
  	  
	  	do varying i=1 until i> HH48
	  		if M08(i) >= 5 and M10(ED00) <> MX1(i) and M13(ED00) <> MX1(i) and ED00 <> MX1(i) then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;
		enddo;
	
	elseif ED09A in 5,6,8 or (M09(ED00) = 2 and ED09A = 1) or (M12(ED00) = 2 and ED09A = 2) or (M12(ED00) = 2 and M09(ED00) = 2  and ED09A = 3) then
		codes(1) = 0;
		labels(1) = "Pas dans le ménage";
		
	elseif ED09A = 7 then
	
		do varying i=1 until i> HH48
			   codes(1) = ED00;
			   labels(1) = strip(EDNOM);
		enddo;
		
	endif;
			
	SetValueSet( @GetSymbol(), codes, labels);
	setcapturetype(ED09B,3);

postproc

	if ED09B > 0 and M08(ED09B) < 15 then
		errmsg("La formation de %s a-t-elle réellement été payée par %s (agé de %d ans) ?",strip(EDNOM(ED09B)),strip(M02(ED09B)),M08(ED09B))
		select("Oui",continue,"Non",ED09B);
	endif
PROC ED10

if  ED10 = 1 and ED04A = 1 then skip to ED12 Endif;
if  ED10 = 1 and ED04A = 2 then skip to ED34 Endif;
	
PROC ED11


if demode()= modify or demode()= add then
		
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;


if ED11 > 10000000 then
	errmsg(" Le montant de %d semble etre elevé !! ",ED11)
	select("Modifier ",ED11,"Continuer",continue);
endif;

// Allez 

if ED04B = 2 then 
   skip to ED36 ;
Endif;
PROC ED12

sav();

if ED12 > M08(xxage) Then
	errmsg("%s ne peut avoir commencé l'école à %d ans alors qu'il a %d ans actuellement",strip(EDNOM),ED12,M08(xxage));
	reenter;
endif;


if ED12 > 11 Then
	errmsg("vérifier l'âge d'entrée à l'école (%d ans)", ED12)
	select("Modifier ",ED12,"Continuer",continue);
endif;
PROC ED13

// 2 = Non ==> ► ED18

if ED13 = 2 then skip to ED18 endif ;
PROC ED15

if ED15 in 7:8 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Niveau d'instruction non valide");
    	reenter;
	endif;
Endif;



//********************  NAB DRC

er = 1;
recode ED15 : M08(xxage)   => er; { Fix maximum grade/year for each possible level }
			0 : 3 - 99 => 0;   {  Maternelle   }
			1 : 5 - 99 => 0;   {  Primaire   }
			2 : 11 - 99 => 0;   {  Secondaire   }
			3 : 5 - 99 => 0;   {  Programme non formel   }
			4 : 17 - 99 => 0;   {  Universitaire   }
			5 : 23 - 99 => 0;   {  Post Universitaire   }
			6 : 9 - 99 => 0;   {  INPP   }
			7 : 9 - 99 => 0;   {  Autre Professionnel   }
			8 : 9 - 99 => 0;   {  Autre   }
           :        => 1;
endrecode;

if er then
  errmsg("Problème : %s à %d ans  ",strip(getlabel($,$)),M08(xxage) ) 
  select( "Niveau d'instruction",ED15,
                       "Age ", M08(xxage), "continuer", continue );
endif;



// si  0 passer à ED19
if ED15 = 0 then skip to ED19 endif ;
PROC ED16

Preproc

sav();

if ED15 = 0 then
	Setvalueset(ED16, ED16_VS0);
elseif ED15 =1 then
	Setvalueset(ED16, ED16_VS1);
elseif ED15 =2 then
	Setvalueset(ED16, ED16_VS2);
elseif ED15 =3 then
	Setvalueset(ED16, ED16_VS3);
elseif ED15 =4 then
	Setvalueset(ED16, ED16_VS4);
elseif ED15 =5 then
	Setvalueset(ED16, ED16_VS5);
elseif ED15 =6 then
	Setvalueset(ED16, ED16_VS6);
elseif ED15 =7 then
	Setvalueset(ED16, ED16_VS7);
else
	Setvalueset(ED16, ED16_VS1);
endif;




Postproc


//********************  NAB DRC

er = 1 ;

if ED15 = 0 then
	recode ED16 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				0 : 3 - 99 => 0;   {  Maternelle   }
				1 : 3 - 99 => 0;   {  Primaire   }
				2 : 4 - 99 => 0;   {  Secondaire   }
				3 : 5 - 99 => 0;   {  Programme non formel   }
				8,9 : 3 - 99 => 0;   {  Universitaire   }
	           :        => 1;
	endrecode;
endif ;


if ED15 = 1 then  // PRIMAIRE
	recode ED16 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				1 : 5 - 99 => 0;   {  Primaire   }
				2 : 6 - 99 => 0;   {  Secondaire   }
				3 : 7 - 99 => 0;   {  Programme non formel   }
				4 : 8 - 99 => 0;   {  Universitaire   }
				5 : 9 - 99 => 0;   {  Post Universitaire   }
				6 : 10 - 99 => 0;   {  INPP   }
				8,9 : 5 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
endif ;


if ED15 = 2 then  // SECONDAIRE
	recode ED16 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				1 : 11 - 99 => 0;   {  Primaire   }
				2 : 12 - 99 => 0;   {  Secondaire   }
				3 : 13 - 99 => 0;   {  Programme non formel   }
				4 : 14 - 99 => 0;   {  Universitaire   }
				5 : 15 - 99 => 0;   {  Post Universitaire   }
				6 : 16 - 99 => 0;   {  INPP   }
				8,9 :11 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
endif ;


if ED15 = 3 then  // Programme non formel
	recode ED16 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				1 : 5 - 99 => 0;   {  Primaire   }
				2 : 6 - 99 => 0;   {  Secondaire   }
				3 : 7 - 99 => 0;   {  Programme non formel   }
				4 : 8 - 99 => 0;   {  Universitaire   }
				5 : 9 - 99 => 0;   {  Post Universitaire   }
				6 : 10 - 99 => 0;   {  INPP   }
				8,9 :11 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
endif ;





if ED15 = 4 then  // UNIVERSITAIRE
	recode ED16 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				0,1 : 17 - 99 => 0;   {  Primaire   }
				2 : 18 - 99 => 0;   {  Secondaire   }
				3 : 19 - 99 => 0;   {  Programme non formel   }
				4 : 20 - 99 => 0;   {  Universitaire   }
				5 : 21 - 99 => 0;   {  Post Universitaire   }
				8,9 :17 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
endif ;




if ED15 = 5 then  // POST-UNIVERSITAIRE
	recode ED16 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				1 : 22 - 99 => 0;   {  Primaire   }
				2 : 23 - 99 => 0;   {  Secondaire   }
				3 : 24 - 99 => 0;   {  Programme non formel   }
				4 : 25 - 99 => 0;   {  Universitaire   }
				5 : 26 - 99 => 0;   {  Post Universitaire   }
				8,9 :22 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
endif ;




if ED15 = 6 then  // INPP
	recode ED16 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
			   0 : 9 - 99 => 0;   {  Primaire   }
				1 : 9 - 99 => 0;   {  Primaire   }
				2 : 9 - 99 => 0;   {  Secondaire   }
				3 : 9 - 99 => 0;   {  Programme non formel   }
				4 : 9 - 99 => 0;   {  Universitaire   }
				5 : 9 - 99 => 0;   {  Post Universitaire   }
	           :        => 1;
	endrecode;
endif ;





if ED15 = 7 then  // AUTRE
	recode ED16 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
			   0 : 9 - 99 => 0;   {  Primaire   }
				1 : 9 - 99 => 0;   {  Primaire   }
				2 : 9 - 99 => 0;   {  Secondaire   }
				3 : 9 - 99 => 0;   {  Programme non formel   }
				4 : 9 - 99 => 0;   {  Universitaire   }
				5 : 9 - 99 => 0;   {  Post Universitaire   }
	           :        => 1;
	endrecode;
endif ;






if ED15 = 1 then
	recode ED16 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				1 : 5 - 99 => 0;   {  Primaire   }
				2 : 6 - 99 => 0;   {  Secondaire   }
				3 : 7 - 99 => 0;   {  Programme non formel   }
				4 : 8 - 99 => 0;   {  Universitaire   }
				5 : 9 - 99 => 0;   {  Post Universitaire   }
				6 : 10 - 99 => 0;   {  INPP   }
				7 : 9 - 99 => 0;   {  Autre Professionnel   }
				8 : 9 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
endif ;



if ED15 = 1 then
	recode ED16 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				1 : 5 - 99 => 0;   {  Primaire   }
				2 : 6 - 99 => 0;   {  Secondaire   }
				3 : 7 - 99 => 0;   {  Programme non formel   }
				4 : 8 - 99 => 0;   {  Universitaire   }
				5 : 9 - 99 => 0;   {  Post Universitaire   }
				6 : 10 - 99 => 0;  {  INPP   }
				7 : 9 - 99 => 0;   {  Autre Professionnel   }
				8 : 9 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
endif ;



if er then
  errmsg("Problème : %s à %d ans  ",strip(getlabel($,$)),M08(xxage) ) 
  select( "Classe avec succès",ED16,
                       "Age ", M08(xxage),
                       "Continuer", continue );
endif;

PROC ED17

if ED17 = 2 and ED16 <> 3 and ED15 = 0 then

	errmsg("%s ne peut déjà avoir obtenu un diplôme de fin de cycle (%s)",strip(EDNOM),strip(getlabel(ED15_VS1,ED15)));
	
endif;

if ED17 = 2 and ED16 <> 6 and ED15 in 1:2 then

	errmsg("%s ne peut déjà avoir obtenu un diplôme de fin de cycle (%s)",strip(EDNOM),strip(getlabel(ED15_VS1,ED15)));
	
endif;

if ED17 = 2 and not(ED16 in 3,5,8) and ED15 = 4 then

	errmsg("%s ne peut déjà avoir obtenu un diplôme de fin de cycle (%s)",strip(EDNOM),strip(getlabel(ED15_VS1,ED15)));
	
endif;

if ED15 = 0 and ED16 in 3 and ED17 = 4 then

	errmsg("%s était dans la dernière classe du cycle %s (%d année %s)",strip(EDNOM),strip(getlabel(ED15_VS1,ED15)),ED16,strip(getlabel(ED15_VS1,ED15)));
	
endif;

if ED15 in 1:2 and ED16 in 6 and ED17 = 4 then

	errmsg("%s était dans la dernière classe du cycle %s (%d année %s)",strip(EDNOM),strip(getlabel(ED15_VS1,ED15)),ED16,strip(getlabel(ED15_VS1,ED15)));
	
endif;

if ED15 = 4 and ED16 in 3,5,8 and ED17 = 4 then

	errmsg("%s était dans une classe finissante (%d année de l'université)",strip(EDNOM),ED16);
	
endif;


// Pour toute réponse ---►ED,19

skip to ED19  ;
PROC ED18
if $ = 20 then
   editnote();
   if length (strip(editnote()))< 10 then
  		errmsg("Raison de non valide");
    	reenter;
	endif;
endif;
PROC ED19

// 2 = Non  --► ED22 

if ED19 = 2 then skip to ED22 endif ;
PROC ED20

if ED20 in 7:8 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Niveau d'instruction non valide");
    	reenter;
	endif;
Endif;



	//********************  NAB DRC
	
	er = 1;
	recode ED20 : M08(xxage)   => er; { Fix maximum grade/year for each possible level }
				0 : 3 - 99 => 0;   {  Maternelle   }
				1 : 5 - 99 => 0;   {  Primaire   }
				2 : 11 - 99 => 0;   {  Secondaire   }
				3 : 5 - 99 => 0;   {  Programme non formel   }
				4 : 17 - 99 => 0;   {  Universitaire   }
				5 : 23 - 99 => 0;   {  Post Universitaire   }
				6 : 9 - 99 => 0;   {  INPP   }
				7 : 9 - 99 => 0;   {  Autre Professionnel   }
				8 : 9 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
	
	if er then
	  errmsg("Problème : %s à %d ans  ",strip(getlabel($,$)),M08(xxage) ) 
	  select( "Niveau d'instruction",ED20,
	                       "Age ", M08(xxage) );
	endif;

PROC ED21

Preproc

sav();

if ED20 = 0 then
	Setvalueset(ED21, ED21_VS0);
elseif ED20 =1 then
	Setvalueset(ED21, ED21_VS1);
elseif ED20 =2 then
	Setvalueset(ED21, ED21_VS2);
elseif ED20 =3 then
	Setvalueset(ED21, ED21_VS3);
elseif ED20 =4 then
	Setvalueset(ED21, ED21_VS4);
elseif ED20 =5 then
	Setvalueset(ED21, ED21_VS5);
elseif ED20 =6 then
	Setvalueset(ED21, ED21_VS6);
elseif ED20 =7 then
	Setvalueset(ED21, ED21_VS7);
else
	Setvalueset(ED21, ED21_VS1);
endif;






postproc


//Classe actuelle par rapport à celui de l'annéée passée


if ED15 = 1  then 

er = 1 ;

if  ED20 = 0 then // Maternelle

	recode  ED15 : ED16  : ED20 : ED21  => er; { Fix maximum grade/year for each possible level }
				  0 : 0 - 3,8 : 0    : 0 - 3 => 0;   {  Maternelle   }

	             :       :	    :	 => 1;
	endrecode;
endif ;


if  ED20 = 1 then  // PRIMAIRE
	recode  ED15 : ED16  : ED20 : ED21  => er; { Fix maximum grade/year for each possible level }
				  0 : 0 - 3 : 1    : 1  => 0;   {  Maternelle  et primaire  }
				  1 : 8     : 1    : 1  => 0;   {  je viens de comencer  }				  
				  1 : 1     : 1    : 2  => 0;   {  primaire  }
				  1 : 2     : 1    : 3  => 0;   {  primaire  }	
				  1 : 3     : 1    : 4  => 0;   {  primaire  }		
				  1 : 4     : 1    : 5  => 0;   {  primaire  }	
				  1 : 5     : 1    : 6  => 0;   {  primaire    }	
	  	  			  
	             :       :	    :	 => 1;
	endrecode;
endif ;



if  ED20 = 2 then  // SECONDAIRE
	recode  ED15 : ED16  : ED20 : ED21  => er; { Fix maximum grade/year for each possible level }				  
				  1 : 6     : 2    : 1 => 0;   {  primaire  secondaire }
				  2 : 8     : 2    : 1  => 0;   {  Maternelle  primaire  }				  
				  2 : 1     : 2    : 2  => 0;   {  Maternelle  primaire  }
				  2 : 2     : 2    : 3  => 0;   {  primaire  }	
				  2 : 3     : 2    : 4  => 0;   {  primaire  }		
				  2 : 4     : 2    : 5  => 0;   {  primaire  }	
				  2 : 5     : 2    : 6  => 0;   {  primaire    }		  	  			  
	             :       :	    :	 => 1;
	endrecode;
endif ;




if  ED20 = 3 then  // Programme non formel
	recode  ED15 : ED16  : ED20 : ED21  => er; { Fix maximum grade/year for each possible level }		
				  3 : 8    : 3    : 1  => 0;   {  Programme non formel  }			  
				  3 : 1    : 3    : 2  => 0;   {  Programme non formel  }
				  3 : 2     : 3    : 3  => 0;   {   Programme non formel   }	
				  3 : 3     : 3    : 4  => 0;   {   Programme non formel   }		
				  3 : 4     : 3    : 5  => 0;   {   Programme non formel   }	
				  3 : 5     : 3    : 6  => 0;   {   Programme non formel     }		  	  
				  3 : 6     : 3    : 7  => 0;   {   Programme non formel     }		
				  3 : 7     : 3    : 8  => 0;   {   Programme non formel     }						    				  			  
	             :       :	    :	 => 1;
	endrecode;
endif ;




if  ED20 = 4 then  // UNIVERSITE
	recode  ED15 : ED16  : ED20 : ED21  => er; { Fix maximum grade/year for each possible level }				  
				  2 : 6     : 4    : 0,1  => 0;   {  primaire  secondaire }
				  4 : 8     : 4    : 1  => 0;   {  Maternelle  primaire  }  
				  4 : 1     : 4    : 2  => 0;   {  Maternelle  primaire  }
				  4 : 2     : 4    : 3  => 0;   {  primaire  }	
				  4 : 3     : 4    : 4  => 0;   {  primaire  }		
				  4 : 4     : 4    : 5  => 0;   {  primaire  }	
				  4 : 5     : 4    : 6  => 0;   {  primaire    }	
				  4 : 6     : 4    : 7  => 0;   {  primaire  }				  	  	  			  
	             :       :	    :	 => 1;
	endrecode;
endif ;





if  ED20 = 5 then  // POST - UNIVERSITE
	recode  ED15 : ED16  : ED20 : ED21  => er; { Fix maximum grade/year for each possible level }				  
				  4 : 5     : 5    : 1  => 0;   {  primaire  secondaire }
				  5 : 8     : 5    : 1  => 0;   {  Maternelle  primaire  }				  
				  5 : 1     : 5    : 2  => 0;   {  Maternelle  primaire  }
				  5 : 2     : 5    : 3  => 0;   {  primaire  }	
				  5 : 3     : 5    : 4  => 0;   {  primaire  }		
				  5 : 4     : 5    : 5  => 0;   {  primaire  }	
				  5 : 5     : 5    : 6  => 0;   {  primaire    }		  	  			  
	             :       :	    :	 => 1;
	endrecode;
endif ;






if  ED20 = 6 then  // Programme non formel
	recode  ED15 : ED16  : ED20 : ED21  => er; { Fix maximum grade/year for each possible level }				  
				  6 : 0     : 6    : 1  => 0;   {  Programme non formel  }
				  6 : 8     : 6    : 1  => 0;   {   Programme non formel   }					  
				  6 : 1     : 6    : 2  => 0;   {   Programme non formel   }	
				  6 : 2     : 6    : 3  => 0;   {   Programme non formel   }		
				  6 : 3     : 6    : 4  => 0;   {   Programme non formel   }	
				  6 : 4     : 3    : 5  => 0;   {   Programme non formel     }		  	  				    				  			  
	             :       :	    :	 => 1;
	endrecode;
endif ;





if  ED20 = 6 then  //  AutreProgramme non formel
	recode  ED15 : ED16  : ED20 : ED21  => er; { Fix maximum grade/year for each possible level }				  
				  7 : 0     : 7    : 1  => 0;   {  Programme non formel  }
				  7 : 8     : 7    : 1  => 0;   {   Programme non formel   }					  
				  7 : 1     : 7    : 2  => 0;   {   Programme non formel   }	
				  7 : 2     : 7    : 3  => 0;   {   Programme non formel   }		
				  7 : 3     : 7    : 4  => 0;   {   Programme non formel   }	
				  7 : 4     : 7    : 5  => 0;   {   Programme non formel     }		  	  				    				  			  
	             :       :	    :	 => 1;
	endrecode;
endif ;



if er then
  errmsg("Incohérence entre la classe actuelle  (%s) et celle passée avec succès (%s)  ",strip(getlabel(ed21_vs1,ed21)),  strip(getlabel(ed16_vs1,ed16)) ) 
  select( " Classe Actuelle", ED20,
                       "Classe avec succès ", M08(xxage),
                       "Continuer", continue );
endif;









//********************  NAB DRC

er = 1 ;

if  ED20 = 0 then
	recode  ED21 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				0 : 3 - 99 => 0;   {  Maternelle   }
				1 : 3 - 99 => 0;   {  Primaire   }
				2 : 4 - 99 => 0;   {  Secondaire   }
				3 : 5 - 99 => 0;   {  Programme non formel   }
				8,9 : 3 - 99 => 0;   {  Universitaire   }
	           :        => 1;
	endrecode;
endif ;


if  ED20 = 1 then  // PRIMAIRE
	recode  ED21 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				1 : 5 - 99 => 0;   {  Primaire   }
				2 : 6 - 99 => 0;   {  Secondaire   }
				3 : 7 - 99 => 0;   {  Programme non formel   }
				4 : 8 - 99 => 0;   {  Universitaire   }
				5 : 9 - 99 => 0;   {  Post Universitaire   }
				6 : 10 - 99 => 0;   {  INPP   }
				8,9 : 5 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
endif ;


if  ED20 = 2 then  // SECONDAIRE
	recode  ED21 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				1 : 11 - 99 => 0;   {  Primaire   }
				2 : 12 - 99 => 0;   {  Secondaire   }
				3 : 13 - 99 => 0;   {  Programme non formel   }
				4 : 14 - 99 => 0;   {  Universitaire   }
				5 : 15 - 99 => 0;   {  Post Universitaire   }
				6 : 16 - 99 => 0;   {  INPP   }
				8,9 :11 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
endif ;


if  ED20 = 3 then  // Programme non formel
	recode  ED21 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				1 : 5 - 99 => 0;   {  Primaire   }
				2 : 6 - 99 => 0;   {  Secondaire   }
				3 : 7 - 99 => 0;   {  Programme non formel   }
				4 : 8 - 99 => 0;   {  Universitaire   }
				5 : 9 - 99 => 0;   {  Post Universitaire   }
				6 : 10 - 99 => 0;   {  INPP   }
				8,9 :11 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
endif ;





if  ED20 = 4 then  // UNIVERSITAIRE
	recode  ED21 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				0,1 :17 - 99 => 0;   {  Primaire   }
				2 : 18 - 99 => 0;   {  Secondaire   }
				3 : 19 - 99 => 0;   {  Programme non formel   }
				4 : 20 - 99 => 0;   {  Universitaire   }
				5 : 21 - 99 => 0;   {  Post Universitaire   }
				8,9 :17 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
endif ;




if  ED20 = 5 then  // POST-UNIVERSITAIRE
	recode  ED21 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				1 : 22 - 99 => 0;   {  Primaire   }
				2 : 23 - 99 => 0;   {  Secondaire   }
				3 : 24 - 99 => 0;   {  Programme non formel   }
				4 : 25 - 99 => 0;   {  Universitaire   }
				5 : 26 - 99 => 0;   {  Post Universitaire   }
				8,9 :22 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
endif ;




if  ED20 = 6 then  // INPP
	recode  ED21 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
			   0 : 9 - 99 => 0;   {  Primaire   }
				1 : 9 - 99 => 0;   {  Primaire   }
				2 : 9 - 99 => 0;   {  Secondaire   }
				3 : 9 - 99 => 0;   {  Programme non formel   }
				4 : 9 - 99 => 0;   {  Universitaire   }
				5 : 9 - 99 => 0;   {  Post Universitaire   }
	           :        => 1;
	endrecode;
endif ;





if  ED20 = 7 then  // AUTRE
	recode  ED21 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
			   0 : 9 - 99 => 0;   {  Primaire   }
				1 : 9 - 99 => 0;   {  Primaire   }
				2 : 9 - 99 => 0;   {  Secondaire   }
				3 : 9 - 99 => 0;   {  Programme non formel   }
				4 : 9 - 99 => 0;   {  Universitaire   }
				5 : 9 - 99 => 0;   {  Post Universitaire   }
	           :        => 1;
	endrecode;
endif ;



if  ED20 = 1 then
	recode  ED21 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				1 : 5 - 99 => 0;   {  Primaire   }
				2 : 6 - 99 => 0;   {  Secondaire   }
				3 : 7 - 99 => 0;   {  Programme non formel   }
				4 : 8 - 99 => 0;   {  Universitaire   }
				5 : 9 - 99 => 0;   {  Post Universitaire   }
				6 : 10 - 99 => 0;   {  INPP   }
				7 : 9 - 99 => 0;   {  Autre Professionnel   }
				8 : 9 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
endif ;



if  ED20 = 1 then
	recode  ED21 : M08(xxage)  => er; { Fix maximum grade/year for each possible level }
				1 : 5 - 99 => 0;   {  Primaire   }
				2 : 6 - 99 => 0;   {  Secondaire   }
				3 : 7 - 99 => 0;   {  Programme non formel   }
				4 : 8 - 99 => 0;   {  Universitaire   }
				5 : 9 - 99 => 0;   {  Post Universitaire   }
				6 : 10 - 99 => 0;  {  INPP   }
				7 : 9 - 99 => 0;   {  Autre Professionnel   }
				8 : 9 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
endif ;



if er then
  errmsg("Problème : %s à %d ans  ",strip(getlabel($,$)),M08(xxage) ) 
  select( " Classe actuelle", ED20,
                       "Age ", M08(xxage),
                       "Continuer", continue );
endif;


endif ;


  skip to ED23;
PROC ED22


if ED22 = 20 then
      editnote();
    if length (strip(editnote()))< 10 then
  		errmsg("Raison non valide");
    	reenter;
	endif;
endif;

savepartial();

// Pour toute réponse ---►ED,34

skip to ED34  ;
PROC ED24

sav();
PROC ED26

sav();
PROC ED27A

postproc
if demode()= modify or demode()= add then
		
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;


if $ > 10000000 then
	errmsg("Le montant de %d semble être élevé !! vérifier bien  ",$)
	select("Modifier ",ED27A,"Continuer",continue);	
endif;
PROC ED27B

postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;


if $ > 10000000 then
	errmsg("Le montant de %d semble être élevé !! vérifier bien  ",$);
endif;
PROC ED27C


postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;



if $ > 10000000 then
	errmsg("Le montant de %d semble être élevé !! vérifier bien  ",$);
endif;
PROC ED28A


postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;



if $ > 10000000 then
	errmsg("Le montant de %d semble être élevé !! vérifier bien  ",$);
endif;
PROC ED28B


postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;


if $ > 10000000 then
	errmsg("Le montant de %d semble être élevé !! vérifier bien  ",$);
endif;
PROC ED29


postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;


if $ > 10000000 then
	errmsg("Le montant de %d semble être élevé !! vérifier bien  ",$);
endif;
PROC ED30


postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;


if $ > 10000000 then
	errmsg("Le montant de %d semble être élevé !! vérifier bien  ",$);
endif;
PROC ED31


postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;


if $ > 10000000 then
	errmsg("Le montant de %d semble être élevé !! vérifier bien  ",$);
endif;
PROC ED32A

postproc

if ED32A = 4 then

	k = 0;

	do varying i=1 until i> HH48
		if M08(i) >= 5 and MX1(i) <> ED00 and MX1(i) <> M10(ED00) and MX1(i) <> M13(ED00) then
			k = k + 1;
		endif;
	enddo;
	
	if k = 0 then
	errmsg("Il n'existe pas d'autres membres dans le ménage");
	reenter;
	endif;
	
endif;

if $ = 8 then
   editnote();
    if length (strip(editnote()))< 2 then
  		errmsg("Nom de la personne non valide");
    	reenter;
	endif;
endif;
PROC ED32B
//PROC ED32B

Preproc

    clear_labels(); 
    
    if ED32A = 7 then
	ED32B = ED00;
	advance to ED33;
    endif;

	if ED32A in 5,6,8 or (M09(ED00) = 2 and ED32A = 1) or (M12(ED00) = 2 and ED32A = 2) or (M12(ED00) = 2 and M09(ED00) = 2  and ED32A = 3) then
		ED32B = 0;
		advance to ED33;
	elseif M09(ED00) = 1 and ED32A = 1 then
		ED32B = M10(ED00);
		advance to ED33;
	elseif M12(ED00) = 1 and ED32A = 2 then
		ED32B = M13(ED00);
		advance to ED33;
	elseif M12(ED00) = 1 and M09(ED00) = 1 and ED32A = 3 then
		ED32B = M10(ED00);
		advance to ED33;
	endif;

    
    
//Afficher le code du membre du ménage qui paie la formation
onfocus
	
	clear_labels();
	
	j = 1;
  			
	if M09(ED00) = 1 and ED32A = 1 then
		do varying i=1 until i> HH48
	  		if M08(i) >= 5 and M10(ED00) = MX1(i) then
	  		   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			 endif;
		enddo;
		
	elseif M12(ED00) = 1 and ED32A = 2 then
		do varying i=1 until i> HH48
	  		if M08(i) >= 5 and M13(ED00) = MX1(i) then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;
		enddo;
		
	elseif M12(ED00) = 1 and M09(ED00) = 1  and ED32A = 3 then
		do varying i=1 until i> HH48
	  		if M08(i) >= 5 and M10(ED00) = MX1(i) then
	  		   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			 endif;
		enddo;
		
	elseif ED32A = 4 then
  	  
	  	do varying i=1 until i> HH48
	  		if M08(i) >= 5 and M10(ED00) <> MX1(i) and M13(ED00) <> MX1(i) and ED00 <> MX1(i) then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;
		enddo;
	
	elseif ED32A in 5,6,8 or (M09(ED00) = 2 and ED32A = 1) or (M12(ED00) = 2 and ED32A = 2) or (M12(ED00) = 2 and M09(ED00) = 2  and ED32A = 3) then
		codes(1) = 0;
		labels(1) = "Pas dans le ménage";
		
	elseif ED32A = 7 then
	
		do varying i=1 until i> HH48
			   codes(1) = ED00;
			   labels(1) = strip(EDNOM);
		enddo;
		
	endif;
		
	SetValueSet( @GetSymbol(), codes, labels);
	setcapturetype(ED32B,3);
	
	
	
postproc

	if ED32B > 0 and M08(ED32B) < 15 then
		errmsg("Les dépenses d'éducation de %s ont-elles réellement été payées par %s (agé de %d ans) ?",strip(EDNOM(ED32B)),strip(M02(ED32B)),M08(ED32B))
		select("Oui",continue,"Non",ED32B);
	endif
PROC ED33


postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
				errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
					errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;



if $ > 10000000 then
	errmsg("Le montant de %d semble être élevé !! vérifier bien  ",$)
	select("Modifier ",ED33,"Continuer",continue);
endif;
PROC ED34


sav();

// iiiiiiiiiiiiiiiii

if ED13 = 1  and   ED34 <> ED15  then

  errmsg(" Niveau d'instruction le plus elevé (ED34) est différent du niveau d'instruction (ED15) ");
  reenter ;

endif;


	//********************  NAB DRC
	
	er = 1;
	recode ED34 : M08(xxage)   => er; { Fix maximum grade/year for each possible level }
				0 : 3 - 99 => 0;   {  Maternelle   }
				1 : 5 - 99 => 0;   {  Primaire   }
				2 : 11 - 99 => 0;   {  Secondaire   }
				3 : 5 - 99 => 0;   {  Programme non formel   }
				4 : 17 - 99 => 0;   {  Universitaire   }
				5 : 23 - 99 => 0;   {  Post Universitaire   }
				6 : 9 - 99 => 0;   {  INPP   }
				7 : 9 - 99 => 0;   {  Autre Professionnel   }
				8 : 9 - 99 => 0;   {  Autre   }
	           :        => 1;
	endrecode;
	
	if er then
	  errmsg("Problème : %s à %d ans  ",strip(getlabel($,$)),M08(xxage) ) 
	  select( "Niveau d'instruction",ED34,
	                       "Age ", M08(xxage),
	                       "Continuer ", continue
	                        );
	endif;




// si  0 passer à ED36

if ED34 = 0 then skip to ED36 endif ;
PROC ED35



Preproc

sav();

if ED34 = 0 then
	Setvalueset(ED35, ED35_VS0);
elseif ED34 =1 then
	Setvalueset(ED35, ED35_VS1);
elseif ED34 =2 then
	Setvalueset(ED35, ED35_VS2);
elseif ED34 =3 then
	Setvalueset(ED35, ED35_VS3);
elseif ED34 =4 then
	Setvalueset(ED35, ED35_VS4);
elseif ED34 =5 then
	Setvalueset(ED35, ED35_VS5);
elseif ED34 =6 then
	Setvalueset(ED35, ED35_VS6);
elseif ED34 =7 then
	Setvalueset(ED35, ED35_VS7);
else
	Setvalueset(ED35, ED35_VS1);
endif;



Postproc



//Classe actuelle par rapport à celui de l'annéée passée
if ED13 = 1  and   ED35 <> ED16  then

  errmsg(" Dernière classe (ED35) est différent de la dernière classe ED16) ");
  reenter ; 

endif;
PROC ED38

// 1 =  Oui ---► ED40

if ED38 = 1 then skip to ED40A endif ;
PROC ED39

sav();

//-	Revoir le saut sur la question ED39, passer a ED43
   skip to ED43 ;

PROC ED40F

sav();
PROC ED41M

sav();
PROC ED43

//-	Si ED43 = 2  ED48


if ED43 = 2 then skip to ED48 endif ;

PROC ED44

alphavar = $;
  if alphachk("ABCDEFGHX") then
    errmsg(9998);
    reenter;
  else
    $ = alphavar;
  endif;
  
if pos("X",$) then
  editnote ();
  if length (strip(editnote()))< 5 then
  		errmsg("Activité sportive non valide");
    	reenter;
  endif;

  if ED44 = "        X" then
  		skip to ED46;
  endif;
  
endif;
PROC ED45A

Preproc

	if strip(ED44) ="A" or  ED44 = "A       X" then  
		ED45A  = 1 ; 
		noinput;	
	endif ;
	
	if strip(ED44) =" B" or  ED44 = " B      X" then  
		ED45A  = 2 ;
		noinput;
	endif ;
	
	if strip(ED44) ="  C" or  ED44 = "  C     X" then  
		ED45A  = 3 ;
		noinput;
	endif ;
	
	if strip(ED44) ="   D" or  ED44 = "   D    X" then  
		ED45A  = 4 ; 
		noinput;
	endif ;
	
	if strip(ED44) ="    E" or  ED44 = "    E   X" then  
		ED45A  = 5 ;
		noinput; 
	endif ;
	
	if strip(ED44) ="     F" or  ED44 = "     F  X" then  
		ED45A  = 6 ; 
		noinput;
	endif ;
	
	if strip(ED44) ="      G" or  ED44 = "      G X" then  
		ED45A  = 7 ; 
		noinput;
	endif ;

	if strip(ED44) ="       H" or  ED44 = "       HX" then  
		ED45A  = 8 ; 
		noinput;
	endif ;
		

postproc
	
	
		if !pos("A",ED44) and (ED45A = 1) then 
			errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
			reenter;
		endif;
		
		if !pos("B",ED44) and (ED45A = 2) then 
			errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
			reenter;
		endif;
		
		if !pos("C",ED44) and (ED45A = 3) then 
			errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
			reenter;
		endif;
		
		if !pos("D",ED44) and (ED45A = 4) then 
			errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
			reenter;
		endif;
		
		if !pos("E",ED44) and (ED45A = 5) then 
			errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
			reenter;
		endif;
		
		if !pos("F",ED44) and (ED45A = 6) then 
			errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
			reenter;
		endif;
		
		if !pos("G",ED44) and (ED45A = 7) then 
			errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
			reenter;
		endif;


		if !pos("H",ED44) and (ED45A = 8) then 
			errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
			reenter;
		endif;
PROC ED45B

Preproc

	if strip(ED44) ="A" or strip(ED44) =" B" or strip(ED44) ="  C" or strip(ED44) ="   D" or strip(ED44) ="    E" or strip(ED44) ="     F" or strip(ED44) ="      G" or strip(ED44) ="       H" then  
		skip to ED46 ;
	endif ;
	
	if strip(ED44) ="A       X" or strip(ED44) =" B      X" or strip(ED44) ="  C     X" or strip(ED44) ="   D    X" or strip(ED44) ="    E   X" or strip(ED44) ="     F  X" or strip(ED44) ="      G X" or strip(ED44) ="       HX" then  
		skip to ED46 ;
	endif ;
	
postproc

	if ED45B = ED45A then
		errmsg(" %s a été déjà choisi comme activité sportive principale, choisissez une autre", getlabel($,$));
		reenter ;
	endif;
	 
	if !pos("A",ED44) and (ED45B = 1) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("B",ED44) and (ED45B = 2) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("C",ED44) and (ED45B = 3) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("D",ED44) and (ED45B = 4) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("E",ED44) and (ED45B = 5) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("F",ED44) and (ED45B = 6) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("G",ED44) and (ED45B = 7) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("H",ED44) and (ED45B = 8) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif
PROC ED46
sav();
PROC ED47

if $ = 6 then
   editnote();
    if length (strip(editnote()))< 10 then
  		errmsg("Lieu non valide");
    	reenter;
	endif;
endif;

skip to ED49 ;  // ceci permet de sauter le ED48
PROC ED48

if $ = 5 then
   editnote();
    if length (strip(editnote()))< 10 then
  		errmsg("Raison non valide");
    	reenter;
	endif;
endif;
PROC ED49

//-	Si ED49 = 2  ED51
if ED49 = 2 then skip to ED54 endif ;
PROC ED50
alphavar = $;
  if alphachk("ABCDEFGX") then
    errmsg(9998);
    reenter
  else
    $ = alphavar;
  endif;
  
if pos("X",$) then
     editnote();
    if length (strip(editnote()))<5 then
  		errmsg("Activité artistique non valide");
    	reenter;
	endif;
	
	if ED50 = "       X" then
  		skip to ED52;
  	endif;
		
endif;
PROC ED51A

Preproc

	if strip(ED50) ="A" or  ED50 = "A      X" then  
		ED51A  = 1 ; 
		noinput;	
	endif ;
	
	if strip(ED50) =" B" or  ED50 = " B     X" then  
		ED51A  = 2 ;
		noinput;
	endif ;
	
	if strip(ED50) ="  C" or  ED50 = "  C    X" then  
		ED51A  = 3 ;
		noinput;
	endif ;
	
	if strip(ED50) ="   D" or  ED50 = "   D   X" then  
		ED51A  = 4 ; 
		noinput;
	endif ;
	
	if strip(ED50) ="    E" or  ED50 = "    E  X" then  
		ED51A  = 5 ;
		noinput; 
	endif ;
	
	if strip(ED50) ="     F" or  ED50 = "     F X" then  
		ED51A  = 6 ; 
		noinput;
	endif ;
	
	if strip(ED50) ="      G" or  ED50 = "      GX" then  
		ED51A  = 7 ; 
		noinput;
	endif ;
 
  
postproc

	if !pos("A",ED50) and (ED51A =1) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("B",ED50) and (ED51A =2) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("C",ED50) and (ED51A =3) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("D",ED50) and (ED51A =4) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("E",ED50) and (ED51A =5) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("F",ED50) and (ED51A =6) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("G",ED50) and (ED51A = 7) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
PROC ED51B


preproc 

	if strip(ED50) ="A" or strip(ED50) =" B" or strip(ED50) ="  C" or strip(ED50) ="   D" or strip(ED50) ="    E" or strip(ED50) ="     F" or strip(ED50) ="      G" then  
		skip to ED52 ;
	endif ;

	if strip(ED50) ="A      X" or strip(ED50) =" B     X" or strip(ED50) ="  C    X" or strip(ED50) ="   D   X" or strip(ED50) ="    E  X" or strip(ED50) ="     F X" or strip(ED50) ="      GX" then  
		skip to ED52 ;
	endif ;



postproc


	if ED51B = ED51A then
		errmsg(" %s a été déjà choisi comme activité artistique principa, choisissez une autre", getlabel($,$));
		reenter ;
	endif;

	if !pos("A",ED50) and (ED51B = 1) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("B",ED50) and (ED51B = 2) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("C",ED50) and (ED51B = 3) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("D",ED50) and (ED51B = 4) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("E",ED50) and (ED51B = 5) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("F",ED50) and (ED51B = 6) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
	
	if !pos("G",ED50) and (ED51B = 7) then 
		errmsg("%s ne pratique pas %s",strip(EDNOM),getlabel($,$));
		reenter;
	endif;
PROC ED52

sav();
PROC ED53

if $ = 7 then
   editnote();
    if length (strip(editnote()))< 10 then
  		errmsg("Lieu non valide");
    	reenter;
	endif;
endif;

skip to next ED01 ;
PROC ED54

sav();

if $ = 5 then
   editnote();
    if length (strip(editnote()))< 10 then
  		errmsg("Raison non valide");
    	reenter;
	endif;
endif;

PROC REPED


Preproc

clear_labels(); 


Onfocus
	
	clear_labels();
	j = 1;
    
	do varying i=1 until i> HH48
	
		if M08(i) >= 5 then
			codes(j) = MX1(i);
			labels(j) = strip(MX2(i));
			j = j + 1; 
		endif;
		
	enddo;
    
    SetValueSet( @GetSymbol(),codes,labels);
    setcapturetype(REPED,3);
PROC H1

sav();

if $ = 8 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Type d'hanitat non valide");
    	reenter;
	endif;
endif;
PROC H2
if $ = 7 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Statut d'occupation non valide");
    	reenter;
	endif;
endif;


// 1 = Propriétaire  ►H4

if H2 = 1 then 
skip to H4;
endif;
PROC H3
if $ = 6 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Proprietaire du logement Non valide");
    	reenter;
	endif;
endif;
PROC H5
if $ = 10 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Matériaux non valide");
    	reenter;
	endif;
endif;
PROC H6
if $ = 7 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Nature du sol non valide");
    	reenter;
	endif;
endif;
PROC H7
if $ = 9 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Nature du toit non valide");
    	reenter;
	endif;
endif;
PROC H8

if H8 <> 1 and H1=6  then
 errmsg("Un studio ne peut avoir qu'une seule pièce" ) ; 
 reenter ;
endif ; 

if H8 = 1 and H1 in 1:4  then
 errmsg("Type d'habitat : %s avec une pièce ", strip(getlabel(H1_VS1,h1)) ) ; 
 reenter ;
endif ; 

PROC H9


if H9 <> 1 and H1=6  then
 errmsg("Un studio ne peut avoir qu'une chambre à coucher" ) ; 
 reenter ;
endif ; 

if H8 = 1 and H1 in 2:4  then
 errmsg("Type d'habitat : %s   avec une chambre à coucher ", strip(getlabel(H1_VS1,h1)) ) ; 
 reenter ;
endif ; 
PROC H10A

preproc

// les non concernées 
if not(H2 in 2,5) then 
	skip to H18A;
endif;


postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC H10B


// 2 =  ►H13
postproc	
if H10B = 2 then 
   skip to H13;
endif;
PROC H11

sav();

if H11 = 7 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Non valide");
    	reenter;
	endif;
endif;
PROC H12


if H12 > H10A then
	
		errmsg("Le loyer payé par le tiers ne peut etre superieur au loyer payé par le ménage");
		reenter;
		
endif;

if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC H13


// Quotidien	1	

if $ = 1 then

	errmsg("Le loyer est payé au quotidien ? vérifier s'il vous plait !")
	select("Modifier ",H13,"Continuer",continue);	

endif; 
PROC H14


// 1 =  ►H16

if H14 = 1 then 
	skip to H16;
endif;
PROC H16


// 2 =  ►Section 3

if H16 = 2 then 
	skip to H18A;
endif;
PROC H17


postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC H18A
if H18A = 19 then
      editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Source d'approvisionnement non valide");
    	reenter;
	endif;
endif;

savepartial();
PROC H18B
if H18B = 19 then
      editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Source d'approvisionnement non valide");
    	reenter;
	endif;
endif;
PROC H19A_1

sav();

if H18A in 1:2 and H19A_1 <> 0 then
	errmsg("Ce lieu d'approvisionnement (%s) ne peut etre que dans la parcelle où se trouve le ménage",getlabel(H18A_VS1,H18A))
	select("Modifier la distance",H19A_1,"Continuer",continue);
endif
PROC H19A_2

if H18B in 1:2 and H19A_2 <> 0 then
	errmsg("Ce lieu d'approvisionnement (%s) ne peut etre que dans la parcelle où se trouve le ménage",getlabel(H18B_VS1,H18B))
	select("Modifier le temps",H19A_2,"Continuer",continue);
endif
PROC H19B_1

if H18A in 1:2 and H19B_1 <> 0 then
	errmsg("Ce lieu d'approvisionnement (%s) ne peut etre que dans la parcelle où se trouve le ménage",getlabel(H18A_VS1, H18A))
	select("Modifier la distance",H19B_1,"Continuer",continue);
endif; 


if  H19B_1 > 500 then
	errmsg("Confirmez-vous que c'est à %d m",$)
	select("Modifier la distance",H19B_1,"Continuer",continue);
endif;
PROC H19B_2

if H18B in 1:2 and H19B_2 <> 0 then
	errmsg("Ce lieu d'approvisionnement (%s) ne peut etre que dans la parcelle où se trouve le ménage",getlabel(H18B_VS1, H18B))
	select("Modifier la distance",H19B_2,"Continuer",continue);
endif ;

if  H19B_2 > 500 then
	errmsg("Confirmez-vous que c'est à %d m",$)
	select("Modifier la distance",H19B_2,"Continuer",continue);
endif;
PROC H20
if H20 = 5 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Fréquence non valide");
    	reenter;
	endif;
endif;
PROC H21
if H21 = 6 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Mode de gestion non valide");
    	reenter;
	endif;
endif;


if H21 = 1 then skip to H23 endif;
PROC H22

if H22 = 2 then
   skip to H22_2 ;
endif;

if H22 = 9 then
   skip to H23 ;
endif;

PROC H22_1


if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;


// ==>H23
 skip to H23 ;
 
PROC H22_2


if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC H23

sav();

// 2 = Non   ==> H26

if H23 in 2,9 then 
	skip to H26;
endif;
PROC H24_1

postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;

skip to H26 ;
PROC H24_2


postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC H24_3


postproc
if demode()= modify or demode()= add then

		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC H24_4


postproc
if demode()= modify or demode()= add then
		
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC H25


postproc
if demode()= modify or demode()= add then
		
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC H26

sav();

if H26 = 2 then 
	skip to H28; 
endif;
PROC H27G

sav();

if H27G = 1 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Methode de traitement d'eau non valide");
    	reenter;
	endif;
endif;

PROC H28

sav();

// si H28≠1►H37

savepartial();

if H28 <> 1 then 
	skip to H37;
endif;

PROC H29


// Oui ==> H31
if H29 = 1 then skip to H31 endif;
PROC H30

if H30 = 4 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Mode d'alimentation non valide");
    	reenter;
	endif;
endif;
PROC H31

postproc
// 1 = Oui   ==> H33

if H31 = 1 then skip to H33 endif;

if H31 = 3 then skip to H37 endif;
PROC H32


postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<15 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC H33

sav();
PROC H35

// 2 =     ==> H37
if H35 = 2 then skip to H37 endif;
PROC H36


if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC H37


sav();

if H37 = 12 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Energie de cuisson non valide");
    	reenter;
	endif;
endif;
PROC H38

if H38 = 10 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Mode d'evacuation non valide");
    	reenter;
	endif;
endif;

if H38 in 5:10 then
	skip to H40;
Endif;

PROC H39A


postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC H40

if H40 = 7 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Type de sanitaire non valide");
    	reenter;
	endif;
endif;


if H40 = 4 then skip to H45 endif ; // 4 = Latrines aménagées publiques  ==> H45
if H40 = 6 then skip to H43 endif ; // 6= pas de toilettes    ==> H43	
if H40 = 7 then skip to H43 endif ; // 7 = Autre       	  ==> H43	
PROC H41


if H41 = 2 then
	skip to H43;
Endif;
PROC H42

sav();
PROC H43

if H43 = 9 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Mode d'evacuation non valide");
    	reenter;
	endif;
endif;


if H43 <> 2 then
	skip to H46;
Endif;
PROC H44

if $ = 4 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Mode d'evacuation non valide");
    	reenter;
	endif;
endif;

skip to H46;
PROC H45

sav();

if demode()= modify or demode()= add then

	if $%50 <> 0 then
			j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
				select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
					
				if j=2 then
				errmsg("Justifier");
				editnote();
					
					if length(strip(editnote()))<10 then
					errmsg(" Veuillez entrer plus de précision");
						reenter;
					endif;
					
				endif;
				
			endif;
	endif;
PROC H46

if H46 = 8 then
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Mode non valide");
    	reenter;
	endif;
endif;
PROC H47

if H47 = 9 then  // Autre
   editnote();
    if length (strip(editnote()))< 5 then
  		errmsg("Mode d'evacuation non valide");
    	reenter;
	endif;
endif;
PROC H48


if H48 = 2 then skip to H52 endif ;
PROC H49


if H49 = 1 then skip to H52 endif ;
PROC H50


postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC H51


if H51 = 9 then
   editnote();
    if length (strip(editnote()))< 2 then
  		errmsg("Reseau non valide");
    	reenter;
	endif;
endif;
PROC H52

if H52 = 2 then skip to ACTIFS_FORM endif ;
PROC H53

if H53 = 1 then skip to ACTIFS_FORM endif ;
PROC H54

sav();

if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC REPHAB


Preproc

clear_labels(); 


Onfocus

	j = 1;
    
	do varying i=1 until i> HH48
		
		if M08(i) >= 5 then
			codes(j) = MX1(i);
			labels(j) = strip(MX2(i));
			j = j + 1;	
		endif;
							 
	enddo;
    
    SetValueSet( @GetSymbol(),codes,labels);
    setcapturetype(REPHAB,3);
PROC ACTIFS000

preproc

do varying i = 1 while i <= 41
		if i =  1 then AC00(i) = i ; AC01(i) = 51113 ; AC01A(i) = "Fauteuil" ; endif;
		if i =  2 then AC00(i) = i ; AC01(i) = 51103 ; AC01A(i) = "Chaise en plastique/en bois" ; endif;
		if i =  3 then AC00(i) = i ; AC01(i) = 51105 ; AC01A(i) = "Lit" ; endif;
		if i =  4 then AC00(i) = i ; AC01(i) = 51106 ; AC01A(i) = "Matelas" ; endif;
		if i =  5 then AC00(i) = i ; AC01(i) = 53213 ; AC01A(i) = "Fer à repasser électrique" ; endif;
		if i =  6 then AC00(i) = i ; AC01(i) = 54127 ; AC01A(i) = "Fer à repasser à Charbon" ; endif;
		if i =  7 then AC00(i) = i ; AC01(i) = 531041 ; AC01A(i) = "Réchaud à Gaz" ; endif;
		if i =  8 then AC00(i) = i ; AC01(i) = 531042 ; AC01A(i) = "Réchaud à pétrole" ; endif;
		if i =  9 then AC00(i) = i ; AC01(i) = 531043 ; AC01A(i) = "Réchaud électrique" ; endif;
		if i =  10 then AC00(i) = i ; AC01(i) = 53101 ; AC01A(i) = "Cuisinière électrique" ; endif;
		if i =  11 then AC00(i) = i ; AC01(i) = 53109 ; AC01A(i) = "Machine à laver électrique" ; endif;
		if i =  12 then AC00(i) = i ; AC01(i) = 53106 ; AC01A(i) = "Machine à coudre" ; endif;
		if i =  13 then AC00(i) = i ; AC01(i) = 53108 ; AC01A(i) = "Réfrigérateur" ; endif;
		if i =  14 then AC00(i) = i ; AC01(i) = 53103 ; AC01A(i) = "Congélateur" ; endif;
		if i =  15 then AC00(i) = i ; AC01(i) = 53107 ; AC01A(i) = "Ventilateur" ; endif;
		if i =  16 then AC00(i) = i ; AC01(i) = 53110 ; AC01A(i) = "Climatiseur" ; endif;
		if i =  17 then AC00(i) = i ; AC01(i) = 91104 ; AC01A(i) = "Radio simple" ; endif;
		if i =  18 then AC00(i) = i ; AC01(i) = 91101 ; AC01A(i) = "Radio cassette/chaine musicale" ; endif;
		if i =  19 then AC00(i) = i ; AC01(i) = 91102 ; AC01A(i) = "Téléviseur" ; endif;
		if i =  20 then AC00(i) = i ; AC01(i) = 91106 ; AC01A(i) = "Lecteur VCD/DVD" ; endif;
		if i =  21 then AC00(i) = i ; AC01(i) = 91103 ; AC01A(i) = "Lecteur CD" ; endif;
		if i =  22 then AC00(i) = i ; AC01(i) = 92102 ; AC01A(i) = "Pirogue (Tous)" ; endif;
		if i =  23 then AC00(i) = i ; AC01(i) = 91303 ; AC01A(i) = "Micro-ordinateur/Lap-tops" ; endif;
		if i =  24 then AC00(i) = i ; AC01(i) = 71101 ; AC01A(i) = "Voiture" ; endif;
		if i =  25 then AC00(i) = i ; AC01(i) = 71103 ; AC01A(i) = "Automobile" ; endif;
		if i =  26 then AC00(i) = i ; AC01(i) = 71202 ; AC01A(i) = "Moto" ; endif;
		if i =  27 then AC00(i) = i ; AC01(i) = 71302 ; AC01A(i) = "Bicyclette" ; endif;
		if i =  28 then AC00(i) = i ; AC01(i) = 71402 ; AC01A(i) = "Calèche ou charrette" ; endif;
		if i =  29 then AC00(i) = i ; AC01(i) = 71501 ; AC01A(i) = "Bateau à moteur" ; endif;
		if i =  30 then AC00(i) = i ; AC01(i) = 82001 ; AC01A(i) = "Téléphone portable" ; endif;
		if i =  31 then AC00(i) = i ; AC01(i) = 55107 ; AC01A(i) = "Groupe électrogène" ; endif;
		if i =  32 then AC00(i) = i ; AC01(i) = 55103 ; AC01A(i) = "Motoculteur" ; endif;
		if i =  33 then AC00(i) = i ; AC01(i) = 552181 ; AC01A(i) = "Semoir" ; endif;
		if i =  34 then AC00(i) = i ; AC01(i) = 71401 ; AC01A(i) = "Charrue" ; endif;
		if i =  35 then AC00(i) = i ; AC01(i) = 552182 ; AC01A(i) = "Houe" ; endif;
		if i =  36 then AC00(i) = i ; AC01(i) = 552183 ; AC01A(i) = "Machette" ; endif;
		if i =  37 then AC00(i) = i ; AC01(i) = 552184 ; AC01A(i) = "Pelle/Beche" ; endif;
		if i =  38 then AC00(i) = i ; AC01(i) = 552185 ; AC01A(i) = "Brouette" ; endif;
		if i =  39 then AC00(i) = i ; AC01(i) = 552186 ; AC01A(i) = "Arrosoir" ; endif;
		if i =  40 then AC00(i) = i ; AC01(i) = 93204 ; AC01A(i) = "Filet de pêche" ; endif;
		if i =  41 then AC00(i) = i ; AC01(i) = 911108 ; AC01A(i) = "Antenne parabolique" ; endif;

enddo;


postproc

Numeric actif1 actif2;

actif1 = count(ACTIFS000 Where AC02 = 2);
actif2 = count(ACTIFS000 Where AC02 = 1);

if actif1 = 59 then 
	errmsg("Le ménage est sensé pocèdé au moins un de ses actifs, êtes-vous sûr(e) que ce ménage n'a aucun de ces actifs ? ")
	select("Oui, J'en suis sûr(e)",continue,"Non",AC02(1));
endif;

if actif2 = 59 then 
	errmsg("êtes-vous sûr(e) que ce ménage possède la totalité des actifs cités ? ")
	select("Oui, J'en suis sûr(e)",continue,"Non",AC02(1));
endif;
PROC AC01

AC01A = strip(getlabel($,$));

PROC AC01A


preproc

  if addmode then
    savepartial();
  endif;
PROC AC02

sav();

// 2 = Non  -->Article suivant

if AC02=2 then skip to next AC00 endif ;




PROC AC05


if demode()= modify or demode()= add then
		
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;


if $ > 10000000 then
	errmsg("Le montant de %d semble être élevé !! vérifier bien  ",$)
   select("Modifier ",AC05,"Continuer",continue);	
endif;

if $ =0 then
	errmsg("Confirmez-vous le 0 Fc !!  ")
	select("Modifier ",AC05,"Continuer",continue);	
endif;


if $ > 999999999995 then
	errmsg("Insistez s'il vous plait afin d'avoir la vraie valeur !! ")
	select("Modifier ",AC05,"Continuer",continue);	
endif;
PROC AC06

sav();

if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;



if $ > 10000000 then
	errmsg("Le montant de %d semble être élevé !! vérifier bien  ",$)
	select("Modifier ",AC06,"Continuer",continue);	
endif;

if $ =0 then
	errmsg("Confirmez-vous le 0 Fc !!  ")
   select("Modifier ",AC06,"Continuer",continue);	
endif;


if $ > 999999999995 then
	errmsg("Insistez s'il vous plait afin d'avoir la vraie valeur !! ")
	select("Modifier ",AC06,"Continuer",continue);	
endif;
PROC REPACT


Preproc

clear_labels(); 


Onfocus

	j = 1;
    
	do varying i=1 until i> HH48
	
		if M08(i) >= 5 then
			codes(j) = MX1(i);
		    labels(j) = strip(MX2(i));
			j = j + 1;	
		endif;
		 
	enddo;
	
    SetValueSet( @GetSymbol(),codes,labels);
    setcapturetype(REPACT,3);
    
PROC SANTEGE000

preproc
 do varying i=1 until i> HH48
  SA00(i) = MX1(i);
  SA001(i) = MX2(i);
enddo;
PROC SA001


preproc

  if addmode then
    savepartial();
  endif;
PROC SA01

sav();

if SA01 = 2 then skip to SA27 endif;
PROC SA02

if $ = 18 then
   editnote();
    if length (strip(editnote()))< 2 then
  		errmsg("Probleme de santé non valide");
    	reenter;
	endif;
endif;
PROC SA03

if SA03 = 2 then skip to SA05 endif;
PROC SA05

if SA05 = 1 then skip to SA07 endif;
PROC SA06

if $ = 8 then
   editnote();
   if length (strip(editnote()))< 10 then
  		errmsg("Raison de consultation non valide");
    	reenter;
	endif;
endif;

skip to SA27;

PROC SA07

if $ = 6 then
   editnote();
   if length (strip(editnote()))< 5 then
  		errmsg("Lieu de consultation non valide");
    	reenter;
	endif;
endif;
PROC SA09

sav();

if SA09 = 1 then skip to SA12 endif;
PROC SA12

if $ = 9 then
   editnote();
   if length (strip(editnote()))< 5 then
  		errmsg("Personnel de santé non valide");
    	reenter;
	endif;
endif;
PROC SA13

if SA13 = 1 then skip to SA15 endif;
PROC SA14H

sav();



PROC SA14X


if SA14X = 1 then 
   editnote();
   if length (strip(editnote()))< 5 then
  		errmsg("Probleme non valide");
    	reenter;
	endif;
endif;
PROC SA16

if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;



if $ > 10000000 then
	errmsg("Le montant de %d semble être élevé !! vérifier bien  ",$)
	select("Modifier ",SA16,"Continuer",continue);	
endif;

if $ =0 then
	errmsg("Confirmez-vous que la consultation est gratuite (0 FC) ?  ")
	select("Modifier ",SA16,"Continuer",continue);	
endif;


if $ > 999999999995 then
	errmsg("Insistez s'il vous plait afin d'avoir la vraie valeur !! ")
	select("Modifier ",SA16,"Continuer",continue);		
endif;

//consultation gratuite

if SA16 = 0 then
skip to SA18;
endif;
PROC SA17A

postproc

if SA17A = 4 then

	k = 0;

	do varying i=1 until i> HH48
		if M08(i) >= 5 and MX1(i) <> SA00 and MX1(i) <> M10(SA00) and MX1(i) <> M13(SA00) then
			k = k + 1;
		endif;
	enddo;
	
	if k = 0 then
		errmsg("Il n'existe pas d'autres membres dans le ménage");
		reenter;
	endif;
	
endif;
PROC SA17B

preproc

clear_labels();

if SA17A = 1 then
	SA17B = SA00;
	advance to SA18;
endif;

if SA17A in 5,6,7,8 or (M09(SA00) = 2 and SA17A = 2) or (M12(SA00) = 2 and SA17A = 3) then
	SA17B = 0;
	advance to SA18;
elseif M09(SA00) = 1 and SA17A = 2 then
	SA17B = M10(SA00);
	advance to SA18;
elseif M12(SA00) = 1 and SA17A = 3 then
	SA17B = M13(SA00);
	advance to SA18;
endif;
    
//Afficher le code du membre du ménage qui paie la formation
onfocus

  clear_labels();
  
  j = 1;
	
  	if SA17A = 1 then
		do varying i=1 until i> HH48
			   codes(1) = SA00;
			   labels(1) = strip(SA001);
		enddo;
		
	elseif M09(SA00) = 1 and SA17A = 2 then
		do varying i=1 until i> HH48
	  		if M08(i) >= 5 and M10(SA00) = MX1(i) then
	  		   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			 endif;
		enddo;
		
	elseif M12(SA00) = 1 and SA17A = 3 then
		do varying i=1 until i> HH48
	  		if M08(i) >= 5 and M13(SA00) = MX1(i) then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;
		enddo;
		
	elseif SA17A = 4 then
  	  
	  	do varying i=1 until i> HH48
	  		if M08(i) >= 5 and M10(SA00) <> MX1(i) and M13(SA00) <> MX1(i) and SA00 <> MX1(i) then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;
		enddo;
	
	elseif SA17A in 5,6,7,8 or (M09(SA00) = 2 and SA17A = 2) or (M12(SA00) = 2 and SA17A = 3) then
		codes(1) = 0;
		labels(1) = "Pas dans le ménage";
	endif;
		
	SetValueSet( @GetSymbol(), codes, labels);
	setcapturetype(SA17B,3);


postproc
	
	if SA17B > 0 and M08(SA17B) < 15 then
		errmsg("Les frais de consultation de %s ont-ils réellement été payés par %s (agé de %d ans) ?",strip(EDNOM(SA17B)),strip(M02(SA17B)),M08(SA17B))
		select("Oui",continue,"Non",SA17B);
	endif
PROC SA18

if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
				reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC SA19

postproc
if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;

if SA19 = 0 then
skip to SA21;
endif;

PROC SA20A

postproc

if SA20A = 4 then

	k = 0;

	do varying i=1 until i> HH48
		if M08(i) >= 5 and MX1(i) <> SA00 and MX1(i) <> M10(SA00) and MX1(i) <> M13(SA00) then
			k = k + 1;
		endif;
	enddo;
	
	if k = 0 then
		errmsg("Il n'existe pas d'autres membres dans le ménage");
		reenter;
	endif;
	
endif;
PROC SA20B

preproc

clear_labels();

if SA20A = 1 then
	SA20B = SA00;
	advance to SA21;
endif;

if SA20A in 5,6,7,8 or (M09(SA00) = 2 and SA20A = 2) or (M12(SA00) = 2 and SA20A = 3) then
	SA20B = 0;
	advance to SA21;
elseif M09(SA00) = 1 and SA20A = 2 then
	SA20B = M10(SA00);
	advance to SA21;
elseif M12(SA00) = 1 and SA20A = 3 then
	SA20B = M13(SA00);
	advance to SA21;
endif;
    
//Afficher le code du membre du ménage qui paie la formation
onfocus
	
  clear_labels();
  
  j = 1;
	
  	if SA20A = 1 then
		do varying i=1 until i> HH48
			   codes(1) = SA00;
			   labels(1) = strip(SA001);
		enddo;
		
	elseif M09(SA00) = 1 and SA20A = 2 then
		do varying i=1 until i> HH48
	  		if M08(i) >= 5 and M10(SA00) = MX1(i) then
	  		   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			 endif;
		enddo;
		
	elseif M12(SA00) = 1 and SA20A = 3 then
		do varying i=1 until i> HH48
	  		if M08(i) >= 5 and M13(SA00) = MX1(i) then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;
		enddo;
		
	elseif SA20A = 4 then
  	  
	  	do varying i=1 until i> HH48
	  		if M08(i) >= 5 and M10(SA00) <> MX1(i) and M13(SA00) <> MX1(i) and SA00 <> MX1(i) then
			   codes(j) = MX1(i);
			   labels(j) = strip(MX2(i));
			   j = j + 1;
			endif;
		enddo;
	
	elseif SA20A in 5,6,7,8 or (M09(SA00) = 2 and SA20A = 2) or (M12(SA00) = 2 and SA20A = 3) then
		codes(1) = 0;
		labels(1) = "Pas dans le ménage";
	endif;
	
	SetValueSet( @GetSymbol(), codes, labels);
	setcapturetype(SA20B,3);
	

postproc
	
	if SA20B > 0 and M08(SA20B) < 15 then
		errmsg("L'ordonance de %s a-t-elle réellement été payée par %s (agé de %d ans) ?",strip(EDNOM(SA20B)),strip(M02(SA20B)),M08(SA20B))
		select("Oui",continue,"Non",SA20B)
	endif
PROC SA21

 if $ = 2 then skip to SA27 endif;
 
PROC SA22

if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC SA23

 if $ = 2 then skip to SA27 endif;
PROC SA24

preproc

clear_labels();

Onfocus


do varying i = 1 until i > 99
	codes(i) = i;  
	labels(i)= edit("99",i);
enddo;

setvalueset(@getsymbol(), codes, labels);
setcapturetype($,1);
PROC SA25


 if $ = 2 then skip to SA27 endif;
PROC SA26

if demode()= modify or demode()= add then
	
		if $%50 <> 0 then
		j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
			select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
				
			if j=2 then
			errmsg("Justifier");
			editnote();
				
				if length(strip(editnote()))<10 then
				errmsg(" Veuillez entrer plus de précision");
					reenter;
				endif;
				
			endif;
			
		endif;
endif;
PROC SA27

if $ = 19 then
   editnote();
   if length (strip(editnote()))< 5 then
  		errmsg("Répas non valide");
    	reenter;
	endif;
endif;


PROC SA49

preproc

if M08(SA00) in 0:7 then skip to next endif;  // Engfant de 0 à 7 ans sauter

if M08(SA00) in 8:11 then skip to SA53 endif;   // Engfant de 8 à 11 ans sauter

if M04(SA00) = 2 and M08(SA00) > 49 then skip to SA53 endif;  // Femme de plus de 49 ans

if M04(SA00) = 1 and M08(SA00) > 59 then skip to SA53 endif;  // Homme de plus de 59 ans

if M04(SA00) = 2 and M08(SA00) < 12 then skip to SA53 endif; // Fille de moins de 12 ans  

if M04(SA00) = 1 and M08(SA00) < 15 then skip to SA53 endif; // Garçon de moins de 15 ans  



postproc
if SA49 = 2 then skip to SA51 endif;
PROC SA50

if $ = 12 then
   editnote();
   if length (strip(editnote()))< 5 then
  		errmsg("Méthode non valide");
    	reenter;
	endif;
endif;

skip to SA53;
PROC SA51

sav();

if $ = 9 then
   editnote();
   if length (strip(editnote()))< 10 then
  		errmsg("Raison non valide");
    	reenter;
	endif;
endif;


if M19(SA00) in 2,3,4 and SA51 in 1,2 then
	errmsg("Il semble que %s est %s, sa raison de non utilisation de méthodes contraceptives ne peut etre %s",strip(SA001),strip(getlabel(M19_VS1,M19(SA00))),strip(getlabel(SA51_VS1,SA51)));
endif;
PROC SA53

preproc

// 15 et et plus pour les hommes

// 12 ans et plus pour les femmes


if M08(SA00) < 12  then skip to next endif;


postproc

 if $ = 2 then skip to next SA00 endif;
PROC SA54_2


if $ = SA54_1 then
	errmsg("Entrer une autre Méthode");
	reenter ;
endif;
 

if $ = 0 then skip to SA55 endif ;
PROC SA54_3

if $ = SA54_1 or $ = SA54_2 then
	errmsg("Entrer une autre Méthode");
	reenter ;
endif;
 
if $ = 0 then skip to SA55 endif ;
PROC SA54_4

if $ = SA54_1 or $ = SA54_2 or $ = SA54_3 then
	errmsg("Entrer une autre Méthode");
	reenter ;
endif;
 
PROC SA56


 if $ <> 1 then skip to SA58 endif;
PROC SA58

sav();

if $ = 5 then
   editnote();
   if length (strip(editnote()))< 5 then
  		errmsg("Méthode non valide");
    	reenter;
	endif;
endif;

PROC REPSANT


Preproc

clear_labels(); 


Onfocus

	j = 1;
    
	do varying i=1 until i> HH48
		
		if M08(i) >= 5 then
			codes(j) = MX1(i);
			labels(j) = strip(MX2(i));
			j = j + 1;	
		endif;
							 
	enddo;
	
    SetValueSet( @GetSymbol(),codes,labels);
    setcapturetype(REPSANT,3);
    
PROC CODE_PAYS

Preproc

CODE_PAYS = "+243";
PROC NUM_TEL

if (NUM_TEL < 800000000 and NUM_TEL >= 830000000 ) or (NUM_TEL < 840000000 and NUM_TEL >= 860000000) or (NUM_TEL < 890000000 and NUM_TEL >= 910000000) or (NUM_TEL < 970000000 and NUM_TEL >= 1000000000 ) then 
	errmsg("Le numéro de télephone saisie est incorrecte");
endif;
PROC HH46

preproc

if totocc(SANTEGE000) <> 0 then
	HH46 = 1;
endif;


postproc

if $ = 96 then
   editnote();
endif;

if HH46 in 1:4 then
	HHFIN = 3 ;
else
	HHFIN = 1 ;
endif;

if totocc(SANTEGE000) <> 0 and $ <> 1 then
	errmsg("Ce module est sensé être complet");
	HH46 = 1;
	reenter;
endif;

if HH12 = 2 and $ = 1 then
	errmsg("Le consentement n'a pas été donné pour ce module, d'où il ne peut être complet");
	reenter;
endif;
PROC HH13H

preproc
if demode() = add then
  if special(visualvalue($)) then
    x = systime();
    if HH13H = notappl then HH13H = int(x / 10000);endif;
    if HH13M = notappl then HH13M = int(x / 100) % 100;endif;
  endif;
endif;
PROC HHFIN


preproc
$ = 3;

postproc

if $ = 1 then 
	errmsg(" Vous pouvez remonter ");
	reenter HH6;
endif;

if $ = 2 then editnote() endif;

$ = 3 ;

errmsg("Vous avez terminé le module ménage");
