{Application 'EPMU1M34' logic file generated by CSPro}
PROC GLOBAL

set explicit;
{ Definitions of working variables }
array alpha(8) KishGrid(10);	   { Grid used for selection of child for child discipline module }
alpha(26) alphavar;				   { Alpha working variable used in checking alpha vars }
alpha(26) alphanew;                { Alpha working variable used in checking alpha vars }
alpha(62) alphalst;                { The alphabet }
array codes(50);                   { Array used for creating line numbers of household members sleeping under mosquito net}
array alpha(50) labels(50);        { Array used for creating names of household members sleeping under mosquito net} 
alpha(40) yname, ynamehh, tmpname; { List of names for questions }
alpha(900) strnotes;               { for editnote at the end of the interview }
alpha(40) worklabel;               { Alpha variable to get customize text for questions }

numeric   hhn,xintnum,xsupnum,xmodcent ;
 
numeric TOTPRIM,maxmain,MOMIN,MOMAX  maxdep;
numeric addmode i cln  hhnum x j r verif;
string strpart dmois xmois xunite libelle douzedernmois ;

 file FichSaPart ;


// sauvegarde des données 
Function sav()
	savepartial();
end;


// Quitter
Function quitter()
	savepartial();
	stop(1) ;
end;

{ User defined functions }

  function showCalc()
    execsystem("calc");
  end;

  { setup basic user bar }
  function userbase();
    userbar( clear );

    
    userbar(add text,"ECVM : MOD 34 ");
	userbar(set color,236,254,255);
	
    userbar( add button, "<",    do("PreviousField") );
    userbar( add button, ">",    do("NextField") );
    userbar( add button, ">>|",  do("AdvanceToEnd") );
    userbar( add button, "Note", do("EditNote") );
    userbar( add button, "Lang", do("ChangeLanguage") );
    userbar( add button, "Calc", showCalc );	
    
 	//userbar(add spacing,25);   
	userbar(add button,"Sauvegarde", sav());    
	//userbar(add spacing,25);
	userbar(add text," ");
	
	userbar(add button,"Quitter", quitter());    
	//userbar(add spacing,25);
	userbar(add text," ");
  end;
  
{ --------------------------------------------------------------------------- }
{ valid
  Checks that a variable has a valid value.
  A valid value is less than 96 and not a special value e.g notappl/missing
  Returns: 1 if valid, 0 if not valid                                        }

function valid(xvar);
  valid = (!special(xvar) and xvar < 96)
end;

{ -------------------------------------------------------------------------- }
{ NAtoZero
  Converts notappl (and 99 - for child labour module) values to zero while not changing other values.
  Returns: 0 if input variable is notappl, else returns it unchanged         }
function NAtoZero(xvar);
  if xvar = notappl or xvar=99 then
    xvar = 0
  endif;
  NAtoZero = xvar;
end;


{ clear_labels
Set value labels for certain questions where the response categories can change }
function clear_labels();
	do i = 1 while i <= 50
	  codes(i) = notappl;
	  labels(i) = "";
	enddo;
end;

//Setting a variable value for the currently loaded task
  function setTaskVar(string varName, string varValue)
    //first checking if the variable is already set
    for i in TASKS.TASK_VARIABLES do
      if toupper(strip(varName)) = toupper(strip(TASK_VARNAME(i))) then
	    TASK_VARVAL(i) = varValue;
	    exit;
	  endif;
    enddo;

    //adding a new variable if in case it hasn't been set alerady
    i = 0;
    while i <= maxocc(TASKS.TASK_VARIABLES) do 
      i = i + 1;
	  if length(strip(TASK_VARNAME(i))) = 0 then
	    TASK_VARNAME(i) = strip(varName);
	    TASK_VARVAL(i) = strip(varValue);
	    break;
	  endif;
    enddo;
  end;

  //Getting the variable value using varibale name for the currently loaded task
  function string getTaskVar(string varName)
    do i = 1 while i <= maxocc(TASKS.TASK_VARIABLES)
      if length(strip(TASK_VARNAME(i))) = 0 then
	    break;
	  endif;
      if toupper(strip(varName)) = toupper(strip(TASK_VARNAME(i))) then
	    getTaskVar = strip(TASK_VARVAL(i));
	    break;
  	  endif;
    enddo;
  end;



function endmess();
  { Returns true if response is REVIEW }
  endmess = ({addmode and}
             accept("Fin du questionnaire",
                     "Vérifier du questionnaire",
                     "Nouvelle quête./Questionnaire après") 
                     <> 2);
end;
{FR}
function alphachk(alpha(26) alphamask);
{  russian_convert();}
  { first remove all blanks, and duplicate question marks }
  alphanew = "";
 numeric  qmark = 0;
 numeric  lx = 1  l  a ;
  do l = 1 while l <= length(strip(alphavar))
    if alphavar[l:1] <> " " and (alphavar[l:1] <> "?" or not qmark) then
      alphanew[lx:1] = alphavar[l:1];
      lx = lx + 1;
      if alphavar[l:1] = "?" then
        qmark = 1;
      endif;
    endif;
  enddo;
  { aok = 0 - string is bad, aok = 1 - string is good }
numeric   totlen = length(strip(alphamask));
 numeric  aok = 0;           { assume string is bad - for empty string }
 numeric alphsize = length(strip(alphanew));
  if alphsize then   { not empty string }
    { check for "?" as only character }
    aok = (alphanew[1:1] = "?" and alphsize = 1);
    if !aok then     { if not a single "?", check string }
      aok = 1;       { now assume string is good until we know otherwise }
      l = 1;         { l is position in string of acceptable values }
      a = 1;         { a is position in input string }
      { loop while the string is still good and there are more letters }
      while aok and a <= alphsize do
        aok = pos(alphanew[a:1],alphamask[l:totlen-l+1]);
        if aok then     { letter is acceptable }
          l = l + aok;  { increment l to position after letter in string of acceptable values }
          a = a + 1     { increment a to next letter in input string }
        endif;
      enddo;
    endif;
  endif;
  alphachk = (!aok);    { alphachk = 0 - if string is good, = 1 - if string is bad }
  { now expand variables }
  if aok then
    do l = 1 while l <= length(strip(alphamask))
      if pos(alphamask[l:1],alphanew) then
        alphavar[l:1] = alphamask[l:1]
      elseif pos("?",alphanew) then
        alphavar[l:1] = "?"
      else
        alphavar[l:1] = " "
      endif;
    enddo;
  endif;
end;

{ function to clear codes and labels for household members }
function clean_labels();
	do i = 1 while i <= 30 by 1
	  codes(i)  = notappl;
	  labels(i) = "";
	enddo;
end;

//!!AI start
function onStop();
    savepartial();
    stop(-1);
end;
//!!AI end

PROC EPMU1M34_FF


preproc
  //Initializing global variables
  SetGlobalVariables();
  tempDir = projectDir + "\Temp";
  utilsDir = projectDir + "\Utils";
  
  setfont(All,"Cambria",30);
  
   setvaluesets("_FRA");  //to set valuesets in French


  //reading the task
  TASK_ID = trimQuotes(readEnviValue("taskId"));
  loadcase(TASKS, TASK_ID);

  //if task is water quality questionnaire task, loading parent household task
  if strip(TASK_TEMPLATENAME) <> "hh_int" & length(strip(TASK_PARENTID)) > 0 then
    TASK_ID = TASK_PARENTID;
    loadcase(TASKS, TASK_ID);
  endif;



  hhnum  = 0;       { last household number used }
 


  cln=tonumber(sysparm()[1:3]);
  hhn=tonumber(sysparm()[4:2]);
  xintnum  = tonumber( sysparm()[9:3] );
  xsupnum  = tonumber( sysparm()[12:3] );


  alphalst = "ABCDEFGHIJKLMNOPQRSTUVWXYZÃÇÅÄÁÆÈÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÝÞßáãäåæíÉìÂ";
 

  { settings for CAPI }

  set attributes (EPMU1M34) assisted on;
  set attributes (EPMU1M34) assisted off (variable (title));

  { set up minimal user bar }
  userbase();
  userbar( show );


postproc
  { update file with households assigned to interviewers }
   //if !xmodcent then
   //  updthhassgn();
   //endif;
  if !xmodcent then      { central office desn't have to exit after reviewing one HH }
    stop(-1);
  endif;

PROC M34

preproc

if demode() = add then addmode = 1 endif;
if demode() = modify then addmode = 2 endif;
if demode() = verify then addmode = 3 endif;

  
if ispartial() then
   advance to getsymbol(savepartial);
endif;



postproc
  endlevel;

PROC M341
preproc
  if special(visualvalue($)) then
    $ = cln;
  endif;

postproc
  YCLUSTER = $;
  if loadcase( CLUSTERS, YCLUSTER ) then
    M347 = YURBRUR;
    M348 = YREGION;
  endif;
PROC M342
preproc
  if hhn <> 0 & (special(visualvalue($)) | visualvalue($) = hhn) then
    $ = hhn;
  endif;

postproc
  set attributes(M34NAME) native;
  if addmode then
    M34NAME = getTaskVar("hhead");
    M34ADDR = getTaskVar("address");
  else
    if length(strip(M34NAME)) then 
      set attributes (M34NAME) protect;
      set attributes (M34ADDR) protect;
    else 
      M34NAME = getTaskVar("hhead");
      M34ADDR = getTaskVar("address");
    endif;
  endif;
PROC M34INT
preproc
  if addmode | special(visualvalue($)) then
    $ = xintnum;
    M34INT = xintnum;
    M34HINT = xsupnum;
  endif;
  
PROC M343

preproc
  if addmode | special(visualvalue($)) then
    $ = 0;
   M34INT = xintnum ;
   M34HINT = xintnum;
  endif;
  
PROC M347
preproc
  if addmode | special(visualvalue($)) then
    M347 = 1;
  endif;
PROC M348
preproc

M348 = 10 ;
PROC M34NAME
preproc
  if !addmode then
    exit;
  endif;
PROC M34ADDR
preproc
  if !addmode then
    exit;
  endif;
PROC M3411

postproc
  if $ <> 1 then
    skip to M3417
  endif;  

numeric rbk;
string Indiv10ans;

 setfile( FichSaPart, concat("C:\RDC123\Data\H",edit("999",M341), edit("999",M34INT), ".dat")) ;  
	     if Filesize( FichSaPart ) > 0 then
		     while FileRead( FichSaPart, strpart ) do					
				  if strpart[11:3] = "0HH" and tonumber(strpart[1:3]) = M341 and tonumber(strpart[4:2]) = M342  then  
				  	   rbk = tonumber(strpart[90:2]) ;
				  	   Indiv10ans=strpart[90:2];		  	                 
	              endif;
		      enddo;  
          endif ;
         close( FichSaPart );
         
  if addmode = 1 and length(strip(Indiv10ans))=0 then
	  errmsg("Veuiilez d'abord renseigner les informations sur tous les membres du menage dans le module MENAGE avant de commencer ce module");
	  setfont(ERRMSG,"Arial", 20);
	  stop(1);
  endif;
PROC M346J
preproc
if demode() = add then 
	if special(visualvalue(M346J)) then
	    x = sysdate();
	    if M346J = notappl then M346J = sysdate( "DD" );endif;
	    if M346M = notappl then M346M = sysdate( "MM" );endif;
	    if M346A = notappl then M346A = sysdate( "YYYY" );endif;
	endif;
endif;

postproc
numeric xdate;
xdate = (((visualvalue(M346A)*100)+visualvalue(M346M))*100)+ M346J;
	
if xdate > sysdate("YYYYMMDD") then 
	errmsg("la date saisie (%d) est supérieure à la date du jour (%d) ,veuillez régler la date de la tablette", xdate , sysdate("YYYYMMDD") );
	stop(1) ;
endif;
PROC M349H
preproc
if demode() = add then
  if special(visualvalue(M349H)) then
    x = systime();
    if M349H = notappl then M349H = int(x / 10000);endif;
    if M349M = notappl then M349M = int(x / 100) % 100;endif;
  endif;
endif;
PROC TRANSFER2_FORM
preproc
// douze derniers mois
numeric xlastdate xlastdate2;

xlastdate = dateadd( ( ((M346A * 100) + M346M) * 100) + M346J  ,-13,"m"); 
xlastdate2 = dateadd( ( ((M346A * 100) + M346M) * 100) + M346J  ,-12,"m"); 
string sldat =edit("99999999",xlastdate) ;

//sixdernmois = concat( sldat[7:2] ," ", getlabel( M236M,tonumber(sldat[5:2])) , " ", sldat[1:4] ) ; le jour/mois/annee//

douzedernmois = concat( getlabel( M346M,tonumber(sldat[5:2])) , " ", sldat[1:4] ) ;





PROC T01

postproc

if T01=2 then
verif = errmsg("Etes-vous sûr que vous n'avez rien reçu depuis %s",douzedernmois)
  select("Oui,je suis sûre",continue,"Non,j'ai reçu quelque chose",T01);
  if verif=1 then T01A = 0; skip to T17;
  endif;
endif;
PROC T01A


postproc
if T01=1 and T01A=0 then
	errmsg("Vous avez dit que vous avez reçu de l'argent ou des biens. Entrez un nombre valide s'il vous plait!");
	reenter;
endif;
PROC T02

preproc
     numeric k, trv = 0 , rec  ;
     clear_labels(); 
     i=1;
     
onfocus
     i=1;
      setfile( FichSaPart, concat("C:\RDC123\Data\H",edit("999",M341), edit("999",M34INT), ".dat")) ;  
	     if Filesize( FichSaPart ) > 0 then
		     while FileRead( FichSaPart, strpart ) do
		          if strpart[11:3] = "0HL" & tonumber(strpart[1:3]) = M341 and tonumber(strpart[4:2]) = M342 & tonumber(strpart[70:2]) >= 10 then
						codes(i) = tonumber(strpart[14:2]);
						labels(i)= strip (strpart[16:40]);
						i=i+1;	                      
		          endif ;
		      enddo;
          endif ;
         close( FichSaPart );

setvalueset(@getsymbol(),codes,labels);
setcapturetype($,3);
PROC T2A

onfocus

setvalueset(@getsymbol(),codes,labels);
setcapturetype($,3);


postproc

do varying j=1 while j <= i 

 if codes(j) = T2A then
 	T2B = strip(labels(j));
 	exit;
 endif;

enddo;
PROC T09

preproc
if T03 = 1 then
	T09 = 1 ;
	skip to T11 
endif;


postproc
if T09 = 2 then
    skip to T11
endif;
PROC T10


postproc
if T10 > T05 then
	errmsg("Le nombre d'années depuis le départ de l'expéditeur depasse son âge.");
	reenter;
endif;
PROC T11

if T11 = 6 then
	r=1;
	while r=1 do
		errmsg("Veuillez préciser le lieu s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
			r=2;
			endif;
	enddo;
endif;
PROC T12


//Transfert d'argent :T13A
if T12 = 1 then skip to T13A ; endif;

//Transfert des biens alimentaires :T13B
if T12 = 2 then skip to T13B ; endif;

//Transfert des biens non alimentaires:T13C
if T12 = 3 then skip to T13C ; endif;
PROC T13A

preproc
//Transfert des biens alimentaires :T13B
if T12 = 2 then skip to T13B ; endif;

//Transfert des biens non alimentaires :T13B
if T12 = 3 then skip to T13C ; endif;



postproc
if T13A in 1:13 then
	skip to T14 ;
endif;

if T13A = 13 then
	r=1;
	while r=1 do
		errmsg("Veuillez préciser le moyen utilisé à la reception de l'argent s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
				r=2;
			endif;
	enddo;
endif;
PROC T13B

preproc
//Transfert des biens alimentaires :T13B
if T12 = 1 and T13A = notappl then advance to T13A ; endif;

//Transfert des biens non alimentaires :T13B
if T12 = 3 then skip to T13C ; endif;

postproc
if T13B in 1:6 then
	skip to T14 ;
endif;

if T13B = 6 then
	r=1;
	while r=1 do
		errmsg("Veuillez préciser le moyen utilisé à la reception des biens alimentaires s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
				r=2;
			endif;
	enddo;
endif;
PROC T13C


preproc
//Transfert des biens alimentaires :T13B
if T12 = 1 and T13A = notappl then advance to T13A ; endif;

//Transfert des biens non alimentaires :T13B
if T12 = 2 and T13B = notappl then advance to T13B ; endif;



postproc
if T13C in 1:6 then
	skip to T14 ;
endif;

if T13C = 6 then
	r=1;
	while r=1 do
		errmsg("Veuillez préciser le moyen utilisé à la reception des biens non alimentaires s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
				r=2;
			endif;
	enddo;
endif;
PROC T15



if T15 = 7 then
   editnote();
    if length (strip(editnote()))< 2 then
  		errmsg("Motif principal non valide");
    	reenter;
	endif;
endif;
PROC T16A


postproc
if T16A< 50 then
	errmsg ("Le montant de transfert est incorrect. veuillez entrer un montant valide. ");
	reenter;
endif;


if T16A%50 <> 0 then
	j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
		select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
						
		if j=2 then
		errmsg("Justifier");
		editnote();
						
			if length(strip(editnote()))<15 then
				errmsg(" Veuillez entrer plus de précision");
				reenter;
			endif;
					
		endif;
				
endif;
PROC TRANSFER3_FORM
preproc
// douze derniers mois
numeric xlastdate ;

xlastdate = dateadd( ( ((M346A * 100) + M346M) * 100) + M346J  ,-13,"m"); 
string sldat =edit("99999999",xlastdate) ;

//sixdernmois = concat( sldat[7:2] ," ", getlabel( M236M,tonumber(sldat[5:2])) , " ", sldat[1:4] ) ; le jour/mois/annee//

douzedernmois = concat( getlabel( M346M,tonumber(sldat[5:2])) , " ", sldat[1:4] ) ;
PROC T17

if T17=2 then
verif = errmsg("Etes-vous sûr que vous n'avez rien envoyé depuis %s",douzedernmois)
  select("Oui,je suis sûre",continue,"Non,j'ai reçu quelque chose",T17);
  if verif=1 then T17A = 0; skip to M3417;
  endif;
endif;
PROC T17A

if T17=1  and T17A=0 then
	errmsg("Vous avez dit que vous avez envoyé de l'argent ou des biens. Entrez un nombre valide s'il vous plait!");
	reenter;
endif;
PROC T18

preproc
     numeric k, trv = 0  rec  ;
     clear_labels(); 
     i=1;
     
onfocus
     i=1;
      setfile( FichSaPart, concat("C:\RDC123\Data\H",edit("999",M341), edit("999",M34INT), ".dat")) ;  
	     if Filesize( FichSaPart ) > 0 then
		     while FileRead( FichSaPart, strpart ) do
		          if strpart[11:3] = "0HL" & tonumber(strpart[1:3]) = M341 and tonumber(strpart[4:2]) = M342 & tonumber(strpart[70:2]) >= 10 then
						codes(i) = tonumber(strpart[14:2]);
						labels(i)= strip (strpart[16:40]);
						i=i+1;	                      
		          endif ;
		      enddo;
          endif ;
         close( FichSaPart );

setvalueset(@getsymbol(),codes,labels);
setcapturetype($,3);
PROC T18A

onfocus

setvalueset(@getsymbol(),codes,labels);
setcapturetype($,3);


postproc

do varying j=1 while j <= i 

 if codes(j) = T18A then
 	T18B = strip (labels(i));
 	exit ;
 endif;

enddo;
PROC T25

preproc
if T19 = 1 then
	T25 = 1;
	skip to T27 
endif;


postproc
if T25 = 2 then
    skip to T27
endif;

PROC T26

postproc
if T26 > T21 then
	errmsg(" le nombre d'années depuis le départ du bénéficiare depasse son âge. ");
	reenter;
endif;
PROC T27

if T27 = 6 then
   r=1;
	while r=1 do
		errmsg("Veuillez préciser le lieu de résidence s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
			r=2;
			endif;
	enddo;
endif;
PROC T28

//Transfert d'argent
if T28 = 1 then skip to T29A ; endif;

//Transfert des biens alimentaires
if T28 = 2 then skip to T29B ; endif;

//Transfert des biens non alimentaires
if T28 = 3 then skip to T29C ; endif;
PROC T29A

preproc
//Transfert des biens alimentaires :T29B
if T28 = 2 then skip to T29B ; endif;

//Transfert des biens non alimentaires :T29B
if T28 = 3 then skip to T29C ; endif;


postproc
if T29A in 1:13 then
	skip to T30 ;
endif;


if T29A = 13 then
	r=1;
	while r=1 do
		errmsg("Veuillez préciser le moyen utilisé pour emettre l'argent s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
				r=2;
			endif;
	enddo;
endif;
PROC T29B

preproc
//Transfert des biens alimentaires :T29B
if T28 = 1 and T29A = notappl then advance to T29A ; endif;

//Transfert des biens non alimentaires :T29B
if T28 = 3 then skip to T29C ; endif;


postproc
if T29B in 1:6 then
	skip to T30 ;
endif;

if T29B = 6 then
	r=1;
	while r=1 do
		errmsg("Veuillez préciser le moyen utilisé pour envoyer les biens alimentaires s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
				r=2;
			endif;
	enddo;
endif;
PROC T29C

preproc
//Transfert des biens alimentaires :T29B
if T28 = 1 and T29A = notappl then advance to T29A ; endif;

//Transfert des biens non alimentaires :T29B
if T28 = 2 and T29B = notappl then advance to T29B ; endif;



postproc
if T29C in 1:6 then
	skip to T30 ;
endif;



if T29C = 6 then
	r=1;
	while r=1 do
		errmsg("Veuillez préciser le moyen utilisé pour envoyer les biens non alimentaires s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
				r=2;
			endif;
	enddo;
endif;
PROC T31

if T31 = 7 then
   editnote();
    if length (strip(editnote()))< 2 then
  		errmsg("Motif principal du transfert non valide");
    	reenter;
	endif;
endif;
PROC T32A


postproc
if T32A < 50 then
	errmsg ("Le montant de transfert est incorrect. veuillez entrer un montant valide. ");
	reenter;
endif;


if T32A%50 <> 0 then
	j = errmsg(" Valeur Incorrecte! Veuillez entrer le montant effectivement payé en FC")
		select(" Corrigez la valeur",$,"Oui la valeur est correcte",continue);
						
		if j=2 then
		errmsg("Justifier");
		editnote();
						
			if length(strip(editnote()))<15 then
				errmsg(" Veuillez entrer plus de précision");
				reenter;
			endif;
					
		endif;
				
endif;


if $ < 1000 then 
		errmsg(" Etes - vous sûr que la dépense a coûté %d FC",$)
		select(" Corrigez la valeur",$,"Oui, la valeur est correcte",continue);
endif ;


if $ > 5000000 then 
		errmsg(" Etes - vous sûr que la dépense a coûté %d FC",$)
		select(" Corrigez la valeur",$,"Oui, la valeur est correcte",continue);
endif ;
PROC REP_MOD34

preproc
     numeric k;
     clear_labels(); 
     i=1;
     
onfocus
     i=1;
      setfile( FichSaPart, concat("C:\RDC123\Data\H",edit("999",M341), edit("999",M34INT), ".dat")) ;  
	     if Filesize( FichSaPart ) > 0 then
		     while FileRead( FichSaPart, strpart ) do
		          if strpart[11:3] = "0HL" & tonumber(strpart[1:3]) = M341 and tonumber(strpart[4:2]) = M342 & tonumber(strpart[70:2]) >= 10 then
						codes(i) = tonumber(strpart[14:2]);
						labels(i)= strip (strpart[16:40]);
						i=i+1;	                      
		          endif ;
		      enddo;
          endif ;
         close( FichSaPart );

setvalueset(@getsymbol(),codes,labels);
setcapturetype(REP_MOD34,3);
PROC M3417

preproc

numeric tt;
tt=totocc(TRANSFER3000);
if (T01=2 & T17=2 and REP_MOD34<>notappl) or (T01=1 & T17=2 and REP_MOD34<>notappl) or (T01=2 & T17=1 and tt >=1 and T18A(tt)<>notappl and T32B(tt) in 1:5 and REP_MOD34<>notappl) or (T01=1 & tt >1 and T18A(tt)<>notappl and T32B(tt) in 1:5 and REP_MOD34<>notappl )then
M3417=1;
noinput;
endif;

postproc
if demode() = modify and ((T01=2 & T17=2 and REP_MOD34<>notappl) or (T01=1 & T17=2 and REP_MOD34<>notappl) or (T01=2 & T17=1 and tt >=1 and T18A(tt)<>notappl and T32B(tt) in 1:5 and REP_MOD34<>notappl) or (T01=1 & tt >1 and T18A(tt)<>notappl and T32B(tt) in 1:5 and REP_MOD34<>notappl))and M3417<>1 then
	errmsg("Le résultat de l'interview doit être complet. La modalité cochée est differente de celle qui était là! Remettez l'ancienne svp!");
	reenter;
endif;


if (demode() = 2) or (demode() = 1) and M3417=1 then
setvalueset(M3417, M3417_VS2);
 endif;
PROC M3410H

preproc
if demode() = add then
  if special(visualvalue(M3410H)) then
    x = systime();
    if M3410H = notappl then M3410H = int(x / 10000);endif;
    if M3410M = notappl then M3410M = int(x / 100) % 100;endif;
  endif;
endif;
PROC M34FIN


preproc
errmsg("VOUS AVEZ FINI LE MODULE TRANSFERT ");
$ = 3;

postproc

if $ = 1 then 
	errmsg("Vous pouvez remonter");
	reenter T02(1);
endif;

if $ = 2 then
 editnote() ;
numeric r2=1;

 while r2=1 do
		errmsg("Veuillez ajouter vos notes s'il vous plait!");
		editnote();
			if length(strip(editnote()))>= 5 then
			r2=2;
			endif;
	enddo;
endif;

$ = 3 ;



