{Application 'PERCEPTION' logic file generated by CSPro}


PROC GLOBAL

set explicit;
{ Definitions of working variables }
array alpha(8) KishGrid(10);	   { Grid used for selection of child for child discipline module }
alpha(26) alphavar;				   { Alpha working variable used in checking alpha vars }
alpha(26) alphanew;                { Alpha working variable used in checking alpha vars }
alpha(62) alphalst;                { The alphabet }
array codes(50);                   { Array used for creating line numbers of household members sleeping under mosquito net}
array alpha(50) labels(50);        { Array used for creating names of household members sleeping under mosquito net} 
alpha(40) yname, ynamehh, tmpname; { List of names for questions }
alpha(900) strnotes;               { for editnote at the end of the interview }
alpha(40) worklabel;               { Alpha variable to get customize text for questions }

numeric   hhn,xintnum,xsupnum,xmodcent ;
 
Alpha(60) sixdernmois, douzdernmois, trentejours, septjours, dat_ref; {Création de la fonction qui calcul les mois pour le capi}
 
numeric TOTPRIM,maxmain,MOMIN,MOMAX  maxdep;
numeric addmode i cln  hhnum x j money;
string strpart dmois xmois xunite libelle ;
file FichSaPart ;

// file FichSaPart ;


// sauvegarde des données 
Function sav()
	savepartial();
end;


// Quitter
Function quitter()
	savepartial();
	stop(1) ;
end;

{ User defined functions }

  function showCalc()
    execsystem("calc");
  end;

  { setup basic user bar }
  function userbase();
    userbar( clear );

    
    userbar(add text,"ECVM: MOD.09  ");
	userbar(set color,236,254,255);
	
    userbar( add button, "<",    do("PreviousField") );
    userbar( add button, ">",    do("NextField") );
    userbar( add button, ">>|",  do("AdvanceToEnd") );
    userbar( add button, "Note", do("EditNote") );
    userbar( add button, "Lang", do("ChangeLanguage") );
    userbar( add button, "Calc", showCalc );	
    
 	userbar(add spacing,2);   
	userbar(add button,"Sauvegarde", sav());    
	userbar(add spacing,2);
	userbar(add text," ");
	
	userbar(add button,"Quitter", quitter());    
	userbar(add spacing,2);
	userbar(add text," ");
  end;
  
{ --------------------------------------------------------------------------- }
{ valid
  Checks that a variable has a valid value.
  A valid value is less than 96 and not a special value e.g notappl/missing
  Returns: 1 if valid, 0 if not valid                                        }

function valid(xvar);
  valid = (!special(xvar) and xvar < 96)
end;

{ -------------------------------------------------------------------------- }
{ NAtoZero
  Converts notappl (and 99 - for child labour module) values to zero while not changing other values.
  Returns: 0 if input variable is notappl, else returns it unchanged         }
function NAtoZero(xvar);
  if xvar = notappl or xvar=99 then
    xvar = 0
  endif;
  NAtoZero = xvar;
end;


{ clear_labels
Set value labels for certain questions where the response categories can change }
function clear_labels();
	do i = 1 while i <= 50
	  codes(i) = notappl;
	  labels(i) = "";
	enddo;
end;

//Setting a variable value for the currently loaded task
  function setTaskVar(string varName, string varValue)
    //first checking if the variable is already set
    for i in TASKS.TASK_VARIABLES do
      if toupper(strip(varName)) = toupper(strip(TASK_VARNAME(i))) then
	    TASK_VARVAL(i) = varValue;
	    exit;
	  endif;
    enddo;

    //adding a new variable if in case it hasn't been set alerady
    i = 0;
    while i <= maxocc(TASKS.TASK_VARIABLES) do 
      i = i + 1;
	  if length(strip(TASK_VARNAME(i))) = 0 then
	    TASK_VARNAME(i) = strip(varName);
	    TASK_VARVAL(i) = strip(varValue);
	    break;
	  endif;
    enddo;
  end;

  //Getting the variable value using varibale name for the currently loaded task
  function string getTaskVar(string varName)
    do i = 1 while i <= maxocc(TASKS.TASK_VARIABLES)
      if length(strip(TASK_VARNAME(i))) = 0 then
	    break;
	  endif;
      if toupper(strip(varName)) = toupper(strip(TASK_VARNAME(i))) then
	    getTaskVar = strip(TASK_VARVAL(i));
	    break;
  	  endif;
    enddo;
  end;



function endmess();
  { Returns true if response is REVIEW }
  endmess = ({addmode and}
             accept("Fin du questionnaire",
                     "Vérifier du questionnaire",
                     "Nouvelle quête./Questionnaire après") 
                     <> 2);
end;
{FR}
function alphachk(alpha(26) alphamask);
{  russian_convert();}
  { first remove all blanks, and duplicate question marks }
  alphanew = "";
 numeric  qmark = 0;
 numeric  lx = 1  l  a ;
  do l = 1 while l <= length(strip(alphavar))
    if alphavar[l:1] <> " " and (alphavar[l:1] <> "?" or not qmark) then
      alphanew[lx:1] = alphavar[l:1];
      lx = lx + 1;
      if alphavar[l:1] = "?" then
        qmark = 1;
      endif;
    endif;
  enddo;
  { aok = 0 - string is bad, aok = 1 - string is good }
numeric   totlen = length(strip(alphamask));
 numeric  aok = 0;           { assume string is bad - for empty string }
 numeric alphsize = length(strip(alphanew));
  if alphsize then   { not empty string }
    { check for "?" as only character }
    aok = (alphanew[1:1] = "?" and alphsize = 1);
    if !aok then     { if not a single "?", check string }
      aok = 1;       { now assume string is good until we know otherwise }
      l = 1;         { l is position in string of acceptable values }
      a = 1;         { a is position in input string }
      { loop while the string is still good and there are more letters }
      while aok and a <= alphsize do
        aok = pos(alphanew[a:1],alphamask[l:totlen-l+1]);
        if aok then     { letter is acceptable }
          l = l + aok;  { increment l to position after letter in string of acceptable values }
          a = a + 1     { increment a to next letter in input string }
        endif;
      enddo;
    endif;
  endif;
  alphachk = (!aok);    { alphachk = 0 - if string is good, = 1 - if string is bad }
  { now expand variables }
  if aok then
    do l = 1 while l <= length(strip(alphamask))
      if pos(alphamask[l:1],alphanew) then
        alphavar[l:1] = alphamask[l:1]
      elseif pos("?",alphanew) then
        alphavar[l:1] = "?"
      else
        alphavar[l:1] = " "
      endif;
    enddo;
  endif;
end;

{ function to clear codes and labels for household members }
function clean_labels();
	do i = 1 while i <= 30 by 1
	  codes(i)  = notappl;
	  labels(i) = "";
	enddo;
end;

function onStop();
    savepartial();
    stop(-1);
end;



PROC EPMU1M09_FF



preproc
  //Initializing global variables
  SetGlobalVariables();
  tempDir = projectDir + "\Temp";
  utilsDir = projectDir + "\Utils";
  
  setfont(All,"Cambria",30);
  
   setvaluesets("_FRA");  //to set valuesets in French


  //reading the task
  TASK_ID = trimQuotes(readEnviValue("taskId"));
  loadcase(TASKS, TASK_ID);

  //if task is water quality questionnaire task, loading parent household task
  if strip(TASK_TEMPLATENAME) <> "hh_int" & length(strip(TASK_PARENTID)) > 0 then
    TASK_ID = TASK_PARENTID;
    loadcase(TASKS, TASK_ID);
  endif;



  hhnum  = 0;       { last household number used }
 


  cln=tonumber(sysparm()[1:3]);
  hhn=tonumber(sysparm()[4:2]);
  xintnum  = tonumber( sysparm()[9:3] );
  xsupnum  = tonumber( sysparm()[12:3] );


  alphalst = "ABCDEFGHIJKLMNOPQRSTUVWXYZÃÇÅÄÁÆÈÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÝÞßáãäåæíÉìÂ";
 

  { settings for CAPI }

  set attributes (EPMU1M09) assisted on;
  set attributes (EPMU1M09) assisted off (variable (title));

  { set up minimal user bar }
  userbase();
  userbar( show );


postproc
  { update file with households assigned to interviewers }
   //if !xmodcent then
   //  updthhassgn();
   //endif;
  if !xmodcent then      { central office desn't have to exit after reviewing one HH }
    stop(-1);
  endif;
  



PROC M09

preproc

if demode() = add then addmode = 1 endif;
if demode() = modify then addmode = 2 endif;
if demode() = verify then addmode = 3 endif;

  
  if ispartial() then
    advance to getsymbol(savepartial);
  endif;


postproc
endlevel
PROC M091

preproc
  if special(visualvalue($)) then
    $ = cln;
  endif;

postproc
  YCLUSTER = $;
  if loadcase( CLUSTERS, YCLUSTER ) then
    M097 = YURBRUR;
    M098 = YREGION;
  endif;
PROC M092

preproc
  if hhn <> 0 & (special(visualvalue($)) | visualvalue($) = hhn) then
    $ = hhn;
  endif;

postproc
  set attributes(M09NAME) native;
  if addmode then
    M09NAME = getTaskVar("hhead");
    M09ADDR = getTaskVar("address");
  else
    if length(strip(M09NAME)) then 
      set attributes (M09NAME) protect;
      set attributes (M09ADDR) protect;
    else 
      M09NAME = getTaskVar("hhead");
      M09ADDR = getTaskVar("address");
    endif;
  endif;


PROC M09INT
preproc
  if addmode | special(visualvalue($)) then
    
    M09INT = xintnum ;
    M093 = 0;
    M09HINT = xintnum;
  endif;
  
PROC M097


preproc
  if addmode | special(visualvalue($)) then
    M097 = 1;
  endif;
  
PROC M098

preproc

M098 = 10 ;
PROC M09NAME
preproc
  if !addmode then
    exit;
  endif;
PROC M09ADDR

preproc
  if !addmode then
    exit;
  endif;

  
PROC M0911
preproc

if $ = 1 then
 set attributes (M0911) protect;

endif;

postproc
     numeric BodyHH ConsHH;
	     	
	      setfile( FichSaPart, concat("C:\RDC123\Data\H",edit("999",M091), edit("999",M09INT), ".dat")) ;  
		     if Filesize( FichSaPart ) > 0 then
			     while FileRead( FichSaPart, strpart ) do
			          if strpart[11:3] = "0HH" and tonumber(strpart[1:3]) = M091 and tonumber(strpart[4:2]) = M092 then
			          					ConsHH  =  tonumber(strpart[78:1] );
			          					BodyHH =tonumber(strpart[94:2]);
		              endif;
			      enddo;
			           
	         endif ;

	       	close( FichSaPart );

if ConsHH=1 & BodyHH>0 & $=2 then
	x=errmsg("ETES-VOUS SÛR D'AVOIR TRES BIEN INTRODUIT CE MODULE AVANT QUE L'ON VOUS REFUSE LE CONSENTEMENT ALORS QUE VOUS AVEZ EU LE CONTEMENT DANS LE MODULE MENAGE ?")
		select("NON, je vais reesayer",$, "OUI, sûr de bien avoir introduit", continue);
		if x=2 then
			errmsg("Dites-nous pour quelle(s) raison(s) l'on vous a refusé le consentement");
			editnote();
			if length(strip(editnote()))<10 then
				errmsg("Raison saisie non valide");
				reenter;
			endif;
				skip to M0917;
			else
			reenter $;
		endif;
endif;

if special(BodyHH) then errmsg("REMPLISSEZ BIEN LES CARACTERISTIQUES SOCIO-DEMOGRAPHIQUES DU MENAGE AVANT DE COMMENCER CE MODULE"); $=notappl; Stop(1); endif;
PROC M096J
preproc
{if addmode then
  M096J = sysdate( "DD" );
  M096M = sysdate( "MM" );
  M096A = sysdate( "YYYY" );
endif;}
if demode() = add then 
	if special(visualvalue($)) then
	    x = sysdate();
	    if M096J = notappl then M096J = sysdate( "DD" );endif;
	    if M096M = notappl then M096M = sysdate( "MM" );endif;
	    if M096A = notappl then M096A = sysdate( "YYYY" );endif;
	endif;
endif;

postproc
numeric xdate;
xdate = (((visualvalue(M096A)*100)+visualvalue(M096M))*100)+ M096J;
if xdate > sysdate("YYYYMMDD") then 
errmsg("la date saisie est supérieure à la date du jour ,veuillez régler la date de la tablette");
stop(1) ;
endif;
PROC M096M
postproc
xmois = strip(getlabel(M096M_vs1,M096M)) ;
PROC M099H

preproc
if demode() = add then 
  if special(visualvalue($)) then
    x = systime();
    if M099H = notappl then M099H = int(x / 10000);endif;
    if M099M = notappl then M099M = int(x / 100) % 100;endif;
  endif;
endif;
PROC REPS09
preproc
     numeric k, trv = 0 , rec , Incrm1 ;
     rec = 1 ;
     clear_labels(); 
     i=1;
     
//     i=1;
      setfile( FichSaPart, concat("C:\RDC123\Data\H",edit("999",M091), edit("999",M09INT), ".dat")) ;  
	     if Filesize( FichSaPart ) > 0 then
		     while FileRead( FichSaPart, strpart ) do
		          if strpart[11:3] = "0HL" and tonumber(strpart[1:3]) = M091 and tonumber(strpart[4:2]) = M092 and tonumber( strpart[70:2])>=12 then
		                 //if rec>1 then     
	                      if rec=1 then 
									codes(i) = tonumber(strpart[14:2]);
					           		labels(i)= strip (strpart[16:40]);
								      i=i+1;	                      
	                      endif;
	                        k=1 ;
								  while k <rec do  
								    if $ = tonumber(strpart[14:2]) then 
								    trv = 1 ; 
								    else
									 	codes(i) = tonumber(strpart[14:2]);
					           			labels(i)= strip (strpart[16:40]);
								      		i=i+1;
								    endif;
								    k=k+1 ;
								  enddo;
		          endif;
		       enddo;
		 endif;
         close( FichSaPart );
{
				if i = 0 and rec =1 then
					errmsg("Aucun Membre de Ménage");
					Reenter SA0000;
				endif;
}			
setvalueset(@getsymbol(),codes,labels);
setcapturetype($,3);


Postproc

Do varying j = 0 until j >= i 
if codes(j) = $ then 
//    $ = labels(j);
endif;
enddo;

sav();
PROC PERCEPTION_FORM
preproc
numeric xlastdate ss_xlastdate twelvemonth s_tw thirdays s_thirdays sevendays s_seven refere;


// Code des 12 derniers mois
twelvemonth = dateadd((((M096A * 100)+ M096M) * 100) + M096J ,-13,"m");
s_tw=dateadd((((M096A * 100)+ M096M) * 100) + M096J,-1,"m");

string tw_sldat =edit("99999999",twelvemonth) ; //Pour plus de précision dans le capi
string stw=edit("99999999",s_tw); //De Décembre à février...

douzdernmois = concat( getlabel( M096M,tonumber(tw_sldat[5:2])) , " ", tw_sldat[1:4], " à ", getlabel(M096M,tonumber(stw[5:2])), " ",stw[1:4]) ;
PROC PERS01B
Postproc
if PERS01B=PERS01A then 
errmsg(01)
select("Modifier la prémière question", PERS01A,
 		"Modifier la deuxième question", PERS01B); 
endif;
PROC PERS01C
Postproc
if (PERS01C=PERS01A) then 
errmsg(01)
select("Modifier la prémière question", PERS01A,
 		"Modifier la troisième question", PERS01C);
endif;
if (PERS01C=PERS01B) then 
errmsg(01)
select("Modifier la deuxième question", PERS01B,
 		"Modifier la troisième question", PERS01C);
endif;
PROC PERS04B
Postproc
if PERS04B=PERS04A then 
errmsg(01)
select("Modifier la prémière question", PERS04A,
 		"Modifier la deuxième question", PERS04B); 
endif;
PROC PERS04C
Postproc
if (PERS04C=PERS04A) then 
errmsg(01)
select("Modifier la prémière question", PERS04A,
 		"Modifier la troisième question", PERS04C);
endif;
if (PERS04C=PERS04B) then 
errmsg(01)
select("Modifier la deuxième question", PERS04B,
 		"Modifier la troisième question", PERS04C);
endif;
PROC PERS08A


postproc

if $<50 then errmsg("ce montant n'est pas correct"); endif;

	If $%50<>0 then
		money=errmsg("Etes-vous sûr de cette valeur saisie?")
			select("NON, valeur saisie incorrecte", $, "Oui, je suis sûr de la valeur",continue);
		if money=2 then editnote();
			if length(strip(editnote()))<3 then
				errmsg("Problème saisi non valide");
				reenter;
			endif;
		endif;
	endif;




if  $ > 500000 then
	errmsg("Confirmez-vous que c'est à %d FC",$)
	select("Modifier ",$,"Continuer",continue);
endif;
PROC PERS08B
postproc
if $<50 then errmsg("ce montant n'est pas correct"); endif;

if $<PERS08A then errmsg("Êtes-vous sûr que votre ménage a besoin de moins d'argent que peut demander une seule personne de ce ménage?"); reenter; endif;

	If $%50 then
		money=errmsg("Etes-vous sûr de cette valeur saisie?")
			select("NON, valeur saisie incorrecte", $, "Oui, je suis sûr de la valeur",continue);
		if money=2 then editnote();
			if length(strip(editnote()))<3 then
				errmsg("Problème saisi non valide");
				reenter;
			endif;
		endif;
	endif;



if  $ > 1000000 then
	errmsg("Confirmez-vous que c'est à %d FC ",$)
	select("Modifier ",$,"Continuer",continue);
endif;


if  PERS08B < PERS08A then
	errmsg("Montant d'un adulte depasse celui du ménage ! ")
	select("Modifier ",$,"Continuer",continue);
endif;
PROC PERS12
{ Si la modalité 4 ou 5 est choisie, la comparer avec les revenus et actifs du ménage avant de valider}
postproc

	     clear_labels(); 
	     numeric modal4 modal5;
	     	
	      setfile( FichSaPart, concat("C:\RDC123\Data\H",edit("999",M091), edit("999",M09INT), ".dat")) ;  
		     if Filesize( FichSaPart ) > 0 then
			     while FileRead( FichSaPart, strpart ) do
			          if strpart[11:3] = "ADM" and tonumber(strpart[1:3]) = M091 and tonumber(strpart[4:2]) = M092 & tonumber(strpart[16:6]) in 91101:91104 & tonumber(strpart[72:1]) = 1 then
			          		if PERS12=4 then
			          			modal4=accept("Dans le ménage, vous avez une RADIO vous pouvez m'expliquer mieux ?","Donner plus d'explication");
			          			if modal4=1 then editnote();
			          				if length(strip(editnote()))<3 then
										errmsg("Problème saisi non valide");
										reenter;
									endif;
			          			else
			          			reenter;
			          			endif;
			          		endif;
			          		if PERS12=5 then
			          			modal5=accept("Dans le ménage, vous avez une RADIO vous pouvez m'expliquer mieux ?","OK plus d'explication","PASSER");
			          			if modal5=1 then editnote();
			          				if length(strip(editnote()))<3 then
										errmsg("Problème saisi non valide");
										reenter;
									endif;
			          			else
			          			move to PERS13A;
			          			endif;
			          		endif;
		              endif;
			      enddo;
			           
	         endif ;
 	       	close( FichSaPart );
PROC PERS15
preproc
	     clear_labels();
	     numeric loyer;
	     	
	      setfile( FichSaPart, concat("C:\RDC123\Data\H",edit("999",M091), edit("999",M09INT), ".dat")) ;  
		     if Filesize( FichSaPart ) > 0 then
			     while FileRead( FichSaPart, strpart ) do
			          if strpart[11:3] = "CHA" and tonumber(strpart[1:3]) = M091 and tonumber(strpart[4:2]) = M092 then
			          					loyer =tonumber(strpart[15:1]);
			          					if loyer=1 then
											$=97;
											skip to PERS16;
										endif;
		              endif;
			      enddo;
			           
	         endif ;

	       	close( FichSaPart );
PROC M0917
preproc
if (PERS01A<>notappl & PERS01B<>notappl & PERS01C<>notappl & PERS03<>notappl
 & PERS04A<>notappl & PERS04B<>notappl & PERS04C<>notappl & PERS05A<>notappl & PERS05B<>notappl & PERS05C<>notappl
 & PERSQ06<>notappl & PERSQ07<>notappl & PERS08A<>notappl & PERS08B<>notappl & PERS09<>notappl & PERS10<>notappl & PERS11<>notappl
 & PERS12<>notappl & PERS14<>notappl & PERS15<>notappl & PERS16<>notappl & PERS17<>notappl & PERS18<>notappl & PERS19<>notappl & PERS20<>notappl) then
$=1;
noinput;
endif;


if visualvalue(M0917)=1 & visualvalue(M09FIN)>0 then
	setvalueset(M0917,M0917_VS2); 
endif;

postproc
if $ = 96 then
   editnote();
	if length(strip(editnote()))<10 then
		errmsg("Raison saisie non valide");
		reenter;
	endif;
endif;
if $=1 then
	M09FIN = 3 ;
else
	M09FIN = 1 ;
endif;

if ( demode()=modify & M0911<>1 & REPS09<>0 & $<>1 ) then
	errmsg("Remettez la première réponse de cette question");
	reenter;
else
endif;
PROC M0910H
preproc
if demode() = add then 
  if special(visualvalue($)) then
    x = systime();
    if M0910H = notappl then M0910H = int(x / 10000);endif;
    if M0910M = notappl then M0910M = int(x / 100) % 100;endif;
  endif;
endif;
PROC M09FIN

postproc

if $ = 1 then 
	x=errmsg("ETES-VOUS SÛR QUE DE VOULOIR REVISITER L'ENREGISTREMENT?")
		select("OUI, revoir les données", continue, "NON, ne pas revoir",$);
	if x=1 & REPS09<>0 then reenter PERS01A;
	else
	endif;
endif;

if $ = 2 then editnote();
	if length(strip(editnote()))<7 then
		errmsg("Problème saisie non valide");
		reenter;
	endif;
endif;

$=3;
SAV();
